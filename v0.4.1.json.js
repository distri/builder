window["distri/builder:v0.4.1"]({
  "source": {
    "LICENSE": {
      "path": "LICENSE",
      "content": "The MIT License (MIT)\n\nCopyright (c) 2013 distri\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "mode": "100644",
      "type": "blob"
    },
    "README.md": {
      "path": "README.md",
      "content": "builder\n=======\n\nA builder for distri apps.\n",
      "mode": "100644",
      "type": "blob"
    },
    "TODO": {
      "path": "TODO",
      "content": "TODO\n====\n\nRemove jQuery dependency.\n\nMove adding dependencies to a post processor.\n\nPipes instead of deferred for post processors.\n",
      "mode": "100644",
      "type": "blob"
    },
    "lib/hamlet-compiler.js": {
      "path": "lib/hamlet-compiler.js",
      "content": "!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.hamletCompiler=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n!function(){var indentText,keywords,keywordsRegex,util,__slice=[].slice;indentText=function(text,indent){if(indent==null){indent=\"  \"}return indent+text.replace(/\\n/g,\"\\n\"+indent)};keywords=[\"each\"];keywordsRegex=RegExp(\"^\\\\s*(\"+keywords.join(\"|\")+\")\\\\s+\");util={indent:indentText,filters:{verbatim:function(content,compiler){return compiler.buffer('\"\"\"'+content.replace(/(#|\")/g,\"\\\\$1\")+'\"\"\"')},plain:function(content,compiler){return compiler.buffer(JSON.stringify(content))},coffeescript:function(content,compiler){return[content]},javascript:function(content,compiler){return[\"`\",compiler.indent(content),\"`\"]}},element:function(tag,contents){var lines;if(contents==null){contents=[]}return lines=[\"__runtime.push document.createElement(\"+JSON.stringify(tag)+\")\"].concat(__slice.call(contents),[\"__runtime.pop()\"])},buffer:function(value){return[\"__runtime.text \"+value]},attributes:function(node){var attributeLines,attributes,classes,id,ids,idsAndClasses;id=node.id,classes=node.classes,attributes=node.attributes;if(id){ids=[JSON.stringify(id)]}else{ids=[]}classes=(classes||[]).map(JSON.stringify);if(attributes){attributes=attributes.filter(function(_arg){var name,value;name=_arg.name,value=_arg.value;if(name===\"class\"){classes.push(value);return false}else if(name===\"id\"){ids.push(value);return false}else{return true}})}else{attributes=[]}idsAndClasses=[];if(ids.length){idsAndClasses.push(\"__runtime.id \"+ids.join(\", \"))}if(classes.length){idsAndClasses.push(\"__runtime.classes \"+classes.join(\", \"))}attributeLines=attributes.map(function(_arg){var name,value;name=_arg.name,value=_arg.value;name=JSON.stringify(name);return\"__runtime.attribute \"+name+\", \"+value});return idsAndClasses.concat(attributeLines)},render:function(node){var filter,tag,text;tag=node.tag,filter=node.filter,text=node.text;if(tag){return this.tag(node)}else if(filter){return this.filter(node)}else{return this.contents(node)}},replaceKeywords:function(codeString){return codeString.replace(keywordsRegex,\"__runtime.$1 \")},filter:function(node){var filter,filterName;filterName=node.filter;if(filter=this.filters[filterName]){return[].concat.apply([],this.filters[filterName](node.content,this))}else{return[\"__runtime.filter(\"+JSON.stringify(filterName)+\", \"+JSON.stringify(node.content)+\")\"]}},contents:function(node){var bufferedCode,childContent,children,code,contents,indent,text,unbufferedCode;children=node.children,bufferedCode=node.bufferedCode,unbufferedCode=node.unbufferedCode,text=node.text;if(unbufferedCode){indent=true;code=this.replaceKeywords(unbufferedCode);contents=[code]}else if(bufferedCode){contents=this.buffer(bufferedCode)}else if(text){contents=this.buffer(JSON.stringify(text))}else if(node.tag){contents=[]}else if(node.comment){return[]}else{contents=[];console.warn(\"No content for node:\",node)}if(children){childContent=this.renderNodes(children);if(indent){childContent=this.indent(childContent.join(\"\\n\"))}contents=contents.concat(childContent)}return this.attributes(node).concat(contents)},renderNodes:function(nodes){return[].concat.apply([],nodes.map(this.render,this))},tag:function(node){var tag;tag=node.tag;return this.element(tag,this.contents(node))}};exports.compile=function(parseTree,_arg){var compiler,items,options,program,programSource,runtime,source,_ref;_ref=_arg!=null?_arg:{},compiler=_ref.compiler,runtime=_ref.runtime;if(runtime==null){runtime='require(\"hamlet-runtime\")'}items=util.renderNodes(parseTree);source=\"(data) ->\\n  (->\\n    __runtime = \"+runtime+\"(this)\\n\\n    __runtime.push document.createDocumentFragment()\\n\"+util.indent(items.join(\"\\n\"),\"    \")+\"\\n    __runtime.pop()\\n  ).call(data)\";options={bare:true};programSource=source;program=compiler.compile(programSource,options);return program}}.call(this);\n},{}],2:[function(_dereq_,module,exports){\n!function(){var compile,parser;compile=_dereq_(\"./compiler\").compile;parser=_dereq_(\"hamlet-parser\");module.exports={compile:function(input,options){if(typeof input===\"string\"){input=parser.parse(input)}return compile(input,options)},parser:parser}}.call(this);\n},{\"./compiler\":1,\"hamlet-parser\":7}],3:[function(_dereq_,module,exports){\n\n},{}],4:[function(_dereq_,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,_dereq_(\"FWaASH\"))\n},{\"FWaASH\":5}],5:[function(_dereq_,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n},{}],6:[function(_dereq_,module,exports){\nvar lexer=function(){var lexer={EOF:1,parseError:function parseError(str,hash){if(this.yy.parser){this.yy.parser.parseError(str,hash)}else{throw new Error(str)}},setInput:function(input){this._input=input;this._more=this._backtrack=this.done=false;this.yylineno=this.yyleng=0;this.yytext=this.matched=this.match=\"\";this.conditionStack=[\"INITIAL\"];this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0};if(this.options.ranges){this.yylloc.range=[0,0]}this.offset=0;return this},input:function(){var ch=this._input[0];this.yytext+=ch;this.yyleng++;this.offset++;this.match+=ch;this.matched+=ch;var lines=ch.match(/(?:\\r\\n?|\\n).*/g);if(lines){this.yylineno++;this.yylloc.last_line++}else{this.yylloc.last_column++}if(this.options.ranges){this.yylloc.range[1]++}this._input=this._input.slice(1);return ch},unput:function(ch){var len=ch.length;var lines=ch.split(/(?:\\r\\n?|\\n)/g);this._input=ch+this._input;this.yytext=this.yytext.substr(0,this.yytext.length-len-1);this.offset-=len;var oldLines=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1);this.matched=this.matched.substr(0,this.matched.length-1);if(lines.length-1){this.yylineno-=lines.length-1}var r=this.yylloc.range;this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len};if(this.options.ranges){this.yylloc.range=[r[0],r[0]+this.yyleng-len]}this.yyleng=this.yytext.length;return this},more:function(){this._more=true;return this},reject:function(){if(this.options.backtrack_lexer){this._backtrack=true}else{return this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})}return this},less:function(n){this.unput(this.match.slice(n))},pastInput:function(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?\"...\":\"\")+past.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var next=this.match;if(next.length<20){next+=this._input.substr(0,20-next.length)}return(next.substr(0,20)+(next.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var pre=this.pastInput();var c=new Array(pre.length+1).join(\"-\");return pre+this.upcomingInput()+\"\\n\"+c+\"^\"},test_match:function(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer){backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done};if(this.options.ranges){backup.yylloc.range=this.yylloc.range.slice(0)}}lines=match[0].match(/(?:\\r\\n?|\\n).*/g);if(lines){this.yylineno+=lines.length}this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+match[0].length};this.yytext+=match[0];this.match+=match[0];this.matches=match;this.yyleng=this.yytext.length;if(this.options.ranges){this.yylloc.range=[this.offset,this.offset+=this.yyleng]}this._more=false;this._backtrack=false;this._input=this._input.slice(match[0].length);this.matched+=match[0];token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]);if(this.done&&this._input){this.done=false}if(token){return token}else if(this._backtrack){for(var k in backup){this[k]=backup[k]}return false}return false},next:function(){if(this.done){return this.EOF}if(!this._input){this.done=true}var token,match,tempMatch,index;if(!this._more){this.yytext=\"\";this.match=\"\"}var rules=this._currentRules();for(var i=0;i<rules.length;i++){tempMatch=this._input.match(this.rules[rules[i]]);if(tempMatch&&(!match||tempMatch[0].length>match[0].length)){match=tempMatch;index=i;if(this.options.backtrack_lexer){token=this.test_match(tempMatch,rules[i]);if(token!==false){return token}else if(this._backtrack){match=false;continue}else{return false}}else if(!this.options.flex){break}}}if(match){token=this.test_match(match,rules[index]);if(token!==false){return token}return false}if(this._input===\"\"){return this.EOF}else{return this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})}},lex:function lex(){var r=this.next();if(r){return r}else{return this.lex()}},begin:function begin(condition){this.conditionStack.push(condition)},popState:function popState(){var n=this.conditionStack.length-1;if(n>0){return this.conditionStack.pop()}else{return this.conditionStack[0]}},_currentRules:function _currentRules(){if(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules}else{return this.conditions[\"INITIAL\"].rules}},topState:function topState(n){n=this.conditionStack.length-1-Math.abs(n||0);if(n>=0){return this.conditionStack[n]}else{return\"INITIAL\"}},pushState:function pushState(condition){this.begin(condition)},stateStackSize:function stateStackSize(){return this.conditionStack.length},options:{moduleName:\"lexer\"},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){var YYSTATE=YY_START;switch($avoiding_name_collisions){case 0:return\"SEPARATOR\";break;case 1:this.popState();return\"RIGHT_PARENTHESIS\";break;case 2:return\"ATTRIBUTE\";break;case 3:this.begin(\"value\");return\"EQUAL\";break;case 4:return\"AT_ATTRIBUTE\";break;case 5:this.popState();return\"ATTRIBUTE_VALUE\";break;case 6:this.popState();return\"ATTRIBUTE_VALUE\";break;case 7:this.popState();return\"ATTRIBUTE_VALUE\";break;case 8:yy.indent=0;this.popState();return\"NEWLINE\";break;case 9:return\"FILTER_LINE\";break;case 10:yy.indent=0;return\"NEWLINE\";break;case 11:yy.indent+=1;if(yy.indent>yy.filterIndent){this.begin(\"filter\")};return\"INDENT\";break;case 12:this.begin(\"parentheses_attributes\");return\"LEFT_PARENTHESIS\";break;case 13:yy_.yytext=yy_.yytext.substring(1);return\"COMMENT\";break;case 14:yy.filterIndent=yy.indent;yy_.yytext=yy_.yytext.substring(1);return\"FILTER\";break;case 15:yy_.yytext=yy_.yytext.substring(1);return\"ID\";break;case 16:yy_.yytext=yy_.yytext.substring(1);return\"CLASS\";break;case 17:yy_.yytext=yy_.yytext.substring(1);return\"TAG\";break;case 18:yy_.yytext=yy_.yytext.substring(1).trim();return\"BUFFERED_CODE\";break;case 19:yy_.yytext=yy_.yytext.substring(1).trim();return\"UNBUFFERED_CODE\";break;case 20:yy_.yytext=yy_.yytext.trim();return\"TEXT\";break}},rules:[/^(?:[ \\t]+)/,/^(?:\\))/,/^(?:([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:=)/,/^(?:@([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:\"(\\\\.|[^\\\\\"])*\")/,/^(?:'(\\\\.|[^\\\\'])*')/,/^(?:[^ \\t\\)]*)/,/^(?:(\\n|$))/,/^(?:[^\\n]*)/,/^(?:\\s*(\\n|$))/,/^(?:  )/,/^(?:\\()/,/^(?:\\/.*)/,/^(?::([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:#((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:\\.((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:%((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:=.*)/,/^(?:-.*)/,/^(?:.*)/],conditions:{filter:{rules:[8,9],inclusive:false},value:{rules:[5,6,7],inclusive:false},parentheses_attributes:{rules:[0,1,2,3,4],inclusive:false},INITIAL:{rules:[10,11,12,13,14,15,16,17,18,19,20],inclusive:true}}};return lexer}();module.exports=lexer;\n},{}],7:[function(_dereq_,module,exports){\n!function(){var extend,lexer,oldParse,parser,__slice=[].slice;lexer=_dereq_(\"./lexer\");parser=_dereq_(\"./parser\").parser;extend=function(){var name,source,sources,target,_i,_len;target=arguments[0],sources=2<=arguments.length?__slice.call(arguments,1):[];for(_i=0,_len=sources.length;_i<_len;_i++){source=sources[_i];for(name in source){target[name]=source[name]}}return target};oldParse=parser.parse;extend(parser,{lexer:lexer,parse:function(input){extend(parser.yy,{indent:0,nodePath:[{children:[]}],filterIndent:void 0});return oldParse.call(parser,input)}});extend(parser.yy,{extend:extend,newline:function(){var lastNode;lastNode=this.nodePath[this.nodePath.length-1];if(lastNode.filter){return this.appendFilterContent(lastNode,\"\")}},append:function(node,indentation){var index,lastNode,parent;if(indentation==null){indentation=0}if(node.filterLine){lastNode=this.nodePath[this.nodePath.length-1];this.appendFilterContent(lastNode,node.filterLine);return}parent=this.nodePath[indentation];this.appendChild(parent,node);index=indentation+1;this.nodePath[index]=node;this.nodePath.length=index+1;return node},appendChild:function(parent,child){if(!child.filter){this.filterIndent=void 0;this.lexer.popState()}parent.children||(parent.children=[]);return parent.children.push(child)},appendFilterContent:function(filter,content){filter.content||(filter.content=\"\");return filter.content+=\"\"+content+\"\\n\"}});module.exports=parser}.call(this);\n},{\"./lexer\":6,\"./parser\":8}],8:[function(_dereq_,module,exports){\n(function (process){\nvar parser=function(){var parser={trace:function trace(){},yy:{},symbols_:{error:2,root:3,lines:4,line:5,indentation:6,indentationLevel:7,INDENT:8,lineMain:9,end:10,tag:11,rest:12,COMMENT:13,FILTER:14,FILTER_LINE:15,NEWLINE:16,name:17,tagComponents:18,attributes:19,idComponent:20,classComponents:21,ID:22,CLASS:23,LEFT_PARENTHESIS:24,attributePairs:25,RIGHT_PARENTHESIS:26,SEPARATOR:27,attributePair:28,ATTRIBUTE:29,EQUAL:30,ATTRIBUTE_VALUE:31,AT_ATTRIBUTE:32,TAG:33,BUFFERED_CODE:34,UNBUFFERED_CODE:35,TEXT:36,$accept:0,$end:1},terminals_:{2:\"error\",8:\"INDENT\",13:\"COMMENT\",14:\"FILTER\",15:\"FILTER_LINE\",16:\"NEWLINE\",22:\"ID\",23:\"CLASS\",24:\"LEFT_PARENTHESIS\",26:\"RIGHT_PARENTHESIS\",27:\"SEPARATOR\",29:\"ATTRIBUTE\",30:\"EQUAL\",31:\"ATTRIBUTE_VALUE\",32:\"AT_ATTRIBUTE\",33:\"TAG\",34:\"BUFFERED_CODE\",35:\"UNBUFFERED_CODE\",36:\"TEXT\"},productions_:[0,[3,1],[4,2],[4,1],[6,0],[6,1],[7,2],[7,1],[5,3],[5,1],[9,2],[9,1],[9,1],[9,1],[9,1],[9,1],[10,1],[11,2],[11,2],[11,1],[11,1],[18,3],[18,2],[18,2],[18,2],[18,1],[18,1],[20,1],[21,2],[21,1],[19,3],[25,3],[25,1],[28,3],[28,1],[17,1],[12,1],[12,1],[12,1]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$){var $0=$$.length-1;switch(yystate){case 1:return this.$=yy.nodePath[0].children;break;case 2:this.$=$$[$0-1];break;case 3:this.$=$$[$0];break;case 4:this.$=0;break;case 5:this.$=$$[$0];break;case 6:this.$=$$[$0-1]+1;break;case 7:this.$=1;break;case 8:this.$=yy.append($$[$0-1],$$[$0-2]);break;case 9:this.$=function(){if($$[$0].newline){return yy.newline()}}();break;case 10:this.$=yy.extend($$[$0-1],$$[$0]);break;case 11:this.$=$$[$0];break;case 12:this.$=$$[$0];break;case 13:this.$={comment:$$[$0]};break;case 14:this.$={filter:$$[$0]};break;case 15:this.$={filterLine:$$[$0]};break;case 16:this.$={newline:true};break;case 17:this.$=function(){$$[$0].tag=$$[$0-1];return $$[$0]}();break;case 18:this.$={tag:$$[$0-1],attributes:$$[$0]};break;case 19:this.$={tag:$$[$0]};break;case 20:this.$=yy.extend($$[$0],{tag:\"div\"});break;case 21:this.$={id:$$[$0-2],classes:$$[$0-1],attributes:$$[$0]};break;case 22:this.$={id:$$[$0-1],attributes:$$[$0]};break;case 23:this.$={classes:$$[$0-1],attributes:$$[$0]};break;case 24:this.$={id:$$[$0-1],classes:$$[$0]};break;case 25:this.$={id:$$[$0]};break;case 26:this.$={classes:$$[$0]};break;case 27:this.$=$$[$0];break;case 28:this.$=$$[$0-1].concat($$[$0]);break;case 29:this.$=[$$[$0]];break;case 30:this.$=$$[$0-1];break;case 31:this.$=$$[$0-2].concat($$[$0]);break;case 32:this.$=[$$[$0]];break;case 33:this.$={name:$$[$0-2],value:$$[$0]};break;case 34:this.$={name:$$[$0].substring(1),value:$$[$0]};break;case 35:this.$=$$[$0];break;case 36:this.$={bufferedCode:$$[$0]};break;case 37:this.$={unbufferedCode:$$[$0]};break;case 38:this.$={text:$$[$0]+\"\\n\"};break}},table:[{3:1,4:2,5:3,6:4,7:6,8:[1,8],10:5,13:[2,4],14:[2,4],15:[2,4],16:[1,7],22:[2,4],23:[2,4],33:[2,4],34:[2,4],35:[2,4],36:[2,4]},{1:[3]},{1:[2,1],5:9,6:4,7:6,8:[1,8],10:5,13:[2,4],14:[2,4],15:[2,4],16:[1,7],22:[2,4],23:[2,4],33:[2,4],34:[2,4],35:[2,4],36:[2,4]},{1:[2,3],8:[2,3],13:[2,3],14:[2,3],15:[2,3],16:[2,3],22:[2,3],23:[2,3],33:[2,3],34:[2,3],35:[2,3],36:[2,3]},{9:10,11:11,12:12,13:[1,13],14:[1,14],15:[1,15],17:16,18:17,20:22,21:23,22:[1,24],23:[1,25],33:[1,21],34:[1,18],35:[1,19],36:[1,20]},{1:[2,9],8:[2,9],13:[2,9],14:[2,9],15:[2,9],16:[2,9],22:[2,9],23:[2,9],33:[2,9],34:[2,9],35:[2,9],36:[2,9]},{8:[1,26],13:[2,5],14:[2,5],15:[2,5],22:[2,5],23:[2,5],33:[2,5],34:[2,5],35:[2,5],36:[2,5]},{1:[2,16],8:[2,16],13:[2,16],14:[2,16],15:[2,16],16:[2,16],22:[2,16],23:[2,16],33:[2,16],34:[2,16],35:[2,16],36:[2,16]},{8:[2,7],13:[2,7],14:[2,7],15:[2,7],22:[2,7],23:[2,7],33:[2,7],34:[2,7],35:[2,7],36:[2,7]},{1:[2,2],8:[2,2],13:[2,2],14:[2,2],15:[2,2],16:[2,2],22:[2,2],23:[2,2],33:[2,2],34:[2,2],35:[2,2],36:[2,2]},{10:27,16:[1,7]},{12:28,16:[2,11],34:[1,18],35:[1,19],36:[1,20]},{16:[2,12]},{16:[2,13]},{16:[2,14]},{16:[2,15]},{16:[2,19],18:29,19:30,20:22,21:23,22:[1,24],23:[1,25],24:[1,31],34:[2,19],35:[2,19],36:[2,19]},{16:[2,20],34:[2,20],35:[2,20],36:[2,20]},{16:[2,36]},{16:[2,37]},{16:[2,38]},{16:[2,35],22:[2,35],23:[2,35],24:[2,35],34:[2,35],35:[2,35],36:[2,35]},{16:[2,25],19:33,21:32,23:[1,25],24:[1,31],34:[2,25],35:[2,25],36:[2,25]},{16:[2,26],19:34,23:[1,35],24:[1,31],34:[2,26],35:[2,26],36:[2,26]},{16:[2,27],23:[2,27],24:[2,27],34:[2,27],35:[2,27],36:[2,27]},{16:[2,29],23:[2,29],24:[2,29],34:[2,29],35:[2,29],36:[2,29]},{8:[2,6],13:[2,6],14:[2,6],15:[2,6],22:[2,6],23:[2,6],33:[2,6],34:[2,6],35:[2,6],36:[2,6]},{1:[2,8],8:[2,8],13:[2,8],14:[2,8],15:[2,8],16:[2,8],22:[2,8],23:[2,8],33:[2,8],34:[2,8],35:[2,8],36:[2,8]},{16:[2,10]},{16:[2,17],34:[2,17],35:[2,17],36:[2,17]},{16:[2,18],34:[2,18],35:[2,18],36:[2,18]},{25:36,28:37,29:[1,38],32:[1,39]},{16:[2,24],19:40,23:[1,35],24:[1,31],34:[2,24],35:[2,24],36:[2,24]},{16:[2,22],34:[2,22],35:[2,22],36:[2,22]},{16:[2,23],34:[2,23],35:[2,23],36:[2,23]},{16:[2,28],23:[2,28],24:[2,28],34:[2,28],35:[2,28],36:[2,28]},{26:[1,41],27:[1,42]},{26:[2,32],27:[2,32]},{30:[1,43]},{26:[2,34],27:[2,34]},{16:[2,21],34:[2,21],35:[2,21],36:[2,21]},{16:[2,30],34:[2,30],35:[2,30],36:[2,30]},{28:44,29:[1,38],32:[1,39]},{31:[1,45]},{26:[2,31],27:[2,31]},{26:[2,33],27:[2,33]}],defaultActions:{12:[2,12],13:[2,13],14:[2,14],15:[2,15],18:[2,36],19:[2,37],20:[2,38],28:[2,10]},parseError:function parseError(str,hash){if(hash.recoverable){this.trace(str)}else{throw new Error(str)}},parse:function parse(input){var self=this,stack=[0],vstack=[null],lstack=[],table=this.table,yytext=\"\",yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1;var args=lstack.slice.call(arguments,1);this.lexer.setInput(input);this.lexer.yy=this.yy;this.yy.lexer=this.lexer;this.yy.parser=this;if(typeof this.lexer.yylloc==\"undefined\"){this.lexer.yylloc={}}var yyloc=this.lexer.yylloc;lstack.push(yyloc);var ranges=this.lexer.options&&this.lexer.options.ranges;if(typeof this.yy.parseError===\"function\"){this.parseError=this.yy.parseError}else{this.parseError=Object.getPrototypeOf(this).parseError}function popStack(n){stack.length=stack.length-2*n;vstack.length=vstack.length-n;lstack.length=lstack.length-n}function lex(){var token;token=self.lexer.lex()||EOF;if(typeof token!==\"number\"){token=self.symbols_[token]||token}return token}var symbol,preErrorSymbol,state,action,a,r,yyval={},p,len,newState,expected;while(true){state=stack[stack.length-1];if(this.defaultActions[state]){action=this.defaultActions[state]}else{if(symbol===null||typeof symbol==\"undefined\"){symbol=lex()}action=table[state]&&table[state][symbol]}if(typeof action===\"undefined\"||!action.length||!action[0]){var errStr=\"\";expected=[];for(p in table[state]){if(this.terminals_[p]&&p>TERROR){expected.push(\"'\"+this.terminals_[p]+\"'\")}}if(this.lexer.showPosition){errStr=\"Parse error on line \"+(yylineno+1)+\":\\n\"+this.lexer.showPosition()+\"\\nExpecting \"+expected.join(\", \")+\", got '\"+(this.terminals_[symbol]||symbol)+\"'\"}else{errStr=\"Parse error on line \"+(yylineno+1)+\": Unexpected \"+(symbol==EOF?\"end of input\":\"'\"+(this.terminals_[symbol]||symbol)+\"'\")}this.parseError(errStr,{text:this.lexer.match,token:this.terminals_[symbol]||symbol,line:this.lexer.yylineno,loc:yyloc,expected:expected})}if(action[0]instanceof Array&&action.length>1){throw new Error(\"Parse Error: multiple actions possible at state: \"+state+\", token: \"+symbol)}switch(action[0]){case 1:stack.push(symbol);vstack.push(this.lexer.yytext);lstack.push(this.lexer.yylloc);stack.push(action[1]);symbol=null;if(!preErrorSymbol){yyleng=this.lexer.yyleng;yytext=this.lexer.yytext;yylineno=this.lexer.yylineno;yyloc=this.lexer.yylloc;if(recovering>0){recovering--}}else{symbol=preErrorSymbol;preErrorSymbol=null}break;case 2:len=this.productions_[action[1]][1];yyval.$=vstack[vstack.length-len];yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column};if(ranges){yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]]}r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,this.yy,action[1],vstack,lstack].concat(args));if(typeof r!==\"undefined\"){return r}if(len){stack=stack.slice(0,-1*len*2);vstack=vstack.slice(0,-1*len);lstack=lstack.slice(0,-1*len)}stack.push(this.productions_[action[1]][0]);vstack.push(yyval.$);lstack.push(yyval._$);newState=table[stack[stack.length-2]][stack[stack.length-1]];stack.push(newState);break;case 3:return true}}return true}};function Parser(){this.yy={}}Parser.prototype=parser;parser.Parser=Parser;return new Parser}();if(typeof _dereq_!==\"undefined\"&&typeof exports!==\"undefined\"){exports.parser=parser;exports.Parser=parser.Parser;exports.parse=function(){return parser.parse.apply(parser,arguments)};exports.main=function commonjsMain(args){if(!args[1]){console.log(\"Usage: \"+args[0]+\" FILE\");process.exit(1)}var source=_dereq_(\"fs\").readFileSync(_dereq_(\"path\").normalize(args[1]),\"utf8\");return exports.parser.parse(source)};if(typeof module!==\"undefined\"&&_dereq_.main===module){exports.main(process.argv.slice(1))}}\n}).call(this,_dereq_(\"FWaASH\"))\n},{\"FWaASH\":5,\"fs\":3,\"path\":4}]},{},[2])\n(2)\n});\n",
      "mode": "100644",
      "type": "blob"
    },
    "lib/hamlet-runtime.js": {
      "path": "lib/hamlet-runtime.js",
      "content": "!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Hamlet=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var Observable, Runtime, bindEvent, bindObservable, cleanup, contentBind, empty, eventNames, initContent, isEvent, isFragment, remove, specialBindings, valueBind, valueIndexOf,\n    __slice = [].slice;\n\n  Observable = _dereq_(\"o_0\");\n\n  eventNames = \"abort\\nblur\\nchange\\nclick\\ndblclick\\ndrag\\ndragend\\ndragenter\\ndragleave\\ndragover\\ndragstart\\ndrop\\nerror\\nfocus\\ninput\\nkeydown\\nkeypress\\nkeyup\\nload\\nmousedown\\nmousemove\\nmouseout\\nmouseover\\nmouseup\\nreset\\nresize\\nscroll\\nselect\\nsubmit\\ntouchcancel\\ntouchend\\ntouchenter\\ntouchleave\\ntouchmove\\ntouchstart\\nunload\".split(\"\\n\");\n\n  isEvent = function(name) {\n    return eventNames.indexOf(name) !== -1;\n  };\n\n  isFragment = function(node) {\n    return (node != null ? node.nodeType : void 0) === 11;\n  };\n\n  initContent = function(element) {\n    var allContent, update;\n    if (element._hamlet_content) {\n      return element._hamlet_content;\n    }\n    allContent = (element._hamlet_content != null ? element._hamlet_content : element._hamlet_content = Observable.concat());\n    update = function() {\n      empty(element);\n      return allContent.each(function(item) {\n        return element.appendChild(item);\n      });\n    };\n    bindObservable(element, allContent, null, update);\n    return allContent;\n  };\n\n  contentBind = function(element, value) {\n    initContent(element).push(value);\n    return element;\n  };\n\n  valueBind = function(element, value, context) {\n    var update;\n    value = Observable(value, context);\n    switch (element.nodeName) {\n      case \"SELECT\":\n        element.oninput = element.onchange = function() {\n          var optionValue, _ref, _value;\n          _ref = this.children[this.selectedIndex], optionValue = _ref.value, _value = _ref._value;\n          return value(_value || optionValue);\n        };\n        update = function(newValue) {\n          var options;\n          element._value = newValue;\n          if ((options = element._options)) {\n            if (newValue.value != null) {\n              return element.value = (typeof newValue.value === \"function\" ? newValue.value() : void 0) || newValue.value;\n            } else {\n              return element.selectedIndex = valueIndexOf(options, newValue);\n            }\n          } else {\n            return element.value = newValue;\n          }\n        };\n        bindObservable(element, value, context, update);\n        break;\n      default:\n        element.oninput = element.onchange = function() {\n          return value(element.value);\n        };\n        if (typeof element.attachEvent === \"function\") {\n          element.attachEvent(\"onkeydown\", function() {\n            return setTimeout(function() {\n              return value(element.value);\n            }, 0);\n          });\n        }\n        bindObservable(element, value, context, function(newValue) {\n          if (element.value !== newValue) {\n            return element.value = newValue;\n          }\n        });\n    }\n  };\n\n  specialBindings = {\n    INPUT: {\n      checked: function(element, value, context) {\n        element.onchange = function() {\n          return typeof value === \"function\" ? value(element.checked) : void 0;\n        };\n        return bindObservable(element, value, context, function(newValue) {\n          return element.checked = newValue;\n        });\n      }\n    },\n    SELECT: {\n      options: function(element, values, context) {\n        var updateValues;\n        values = Observable(values, context);\n        updateValues = function(values) {\n          empty(element);\n          element._options = values;\n          return values.map(function(value, index) {\n            var option, optionName, optionValue;\n            option = document.createElement(\"option\");\n            option._value = value;\n            if (typeof value === \"object\") {\n              optionValue = (value != null ? value.value : void 0) || index;\n            } else {\n              optionValue = value.toString();\n            }\n            bindObservable(option, optionValue, value, function(newValue) {\n              return option.value = newValue;\n            });\n            optionName = (value != null ? value.name : void 0) || value;\n            bindObservable(option, optionName, value, function(newValue) {\n              return option.textContent = option.innerText = newValue;\n            });\n            element.appendChild(option);\n            if (value === element._value) {\n              element.selectedIndex = index;\n            }\n            return option;\n          });\n        };\n        return bindObservable(element, values, context, updateValues);\n      }\n    }\n  };\n\n  bindObservable = function(element, value, context, update) {\n    var observable, observe, unobserve;\n    observable = Observable(value, context);\n    observe = function() {\n      observable.observe(update);\n      return update(observable());\n    };\n    unobserve = function() {\n      return observable.stopObserving(update);\n    };\n    observe();\n    try {\n      (element._hamlet_cleanup || (element._hamlet_cleanup = [])).push(unobserve);\n    } catch (_error) {}\n    return element;\n  };\n\n  bindEvent = function(element, name, fn, context) {\n    return element[name] = function() {\n      return fn.apply(context, arguments);\n    };\n  };\n\n  cleanup = function(element) {\n    var _ref;\n    Array.prototype.forEach.call(element.children, cleanup);\n    if ((_ref = element._hamlet_cleanup) != null) {\n      _ref.forEach(function(method) {\n        return method();\n      });\n    }\n    delete element._hamlet_cleanup;\n  };\n\n  Runtime = function(context) {\n    var append, buffer, classes, contextTop, id, lastParent, observeAttribute, observeText, pop, push, render, self, stack, top, withContext;\n    stack = [];\n    lastParent = function() {\n      var element, i;\n      i = stack.length - 1;\n      while ((element = stack[i]) && isFragment(element)) {\n        i -= 1;\n      }\n      return element;\n    };\n    contextTop = void 0;\n    top = function() {\n      return stack[stack.length - 1] || contextTop;\n    };\n    append = function(child) {\n      var parent, _ref;\n      parent = top();\n      if (isFragment(child) && child.childNodes.length === 1) {\n        child = child.childNodes[0];\n      }\n      if ((_ref = top()) != null) {\n        _ref.appendChild(child);\n      }\n      return child;\n    };\n    push = function(child) {\n      return stack.push(child);\n    };\n    pop = function() {\n      return append(stack.pop());\n    };\n    render = function(child) {\n      push(child);\n      return pop();\n    };\n    id = function() {\n      var element, sources, update, value;\n      sources = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      element = top();\n      update = function(newValue) {\n        if (typeof newValue === \"function\") {\n          newValue = newValue();\n        }\n        return element.id = newValue;\n      };\n      value = function() {\n        var possibleValues;\n        possibleValues = sources.map(function(source) {\n          if (typeof source === \"function\") {\n            return source();\n          } else {\n            return source;\n          }\n        }).filter(function(idValue) {\n          return idValue != null;\n        });\n        return possibleValues[possibleValues.length - 1];\n      };\n      return bindObservable(element, value, context, update);\n    };\n    classes = function() {\n      var element, sources, update;\n      sources = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      element = top();\n      update = function(newValue) {\n        if (typeof newValue === \"function\") {\n          newValue = newValue();\n        }\n        return element.className = newValue;\n      };\n      return (function(context) {\n        var value;\n        value = function() {\n          var possibleValues;\n          possibleValues = sources.map(function(source) {\n            if (typeof source === \"function\") {\n              return source.call(context);\n            } else {\n              return source;\n            }\n          }).filter(function(sourceValue) {\n            return sourceValue != null;\n          });\n          return possibleValues.join(\" \");\n        };\n        return bindObservable(element, value, context, update);\n      })(context);\n    };\n    observeAttribute = function(name, value) {\n      var binding, element, nodeName, _ref;\n      element = top();\n      nodeName = element.nodeName;\n      if (name === \"value\") {\n        valueBind(element, value);\n      } else if (binding = (_ref = specialBindings[nodeName]) != null ? _ref[name] : void 0) {\n        binding(element, value, context);\n      } else if (name.match(/^on/) && isEvent(name.substr(2))) {\n        bindEvent(element, name, value, context);\n      } else if (isEvent(name)) {\n        bindEvent(element, \"on\" + name, value, context);\n      } else {\n        bindObservable(element, value, context, function(newValue) {\n          if ((newValue != null) && newValue !== false) {\n            return element.setAttribute(name, newValue);\n          } else {\n            return element.removeAttribute(name);\n          }\n        });\n      }\n      return element;\n    };\n    observeText = function(value) {\n      var element, update;\n      element = document.createTextNode('');\n      update = function(newValue) {\n        return element.nodeValue = newValue;\n      };\n      bindObservable(element, value, context, update);\n      return render(element);\n    };\n    withContext = function(newContext, newContextTop, fn) {\n      var oldContext;\n      oldContext = context;\n      context = newContext;\n      contextTop = newContextTop;\n      try {\n        return fn();\n      } finally {\n        contextTop = void 0;\n        context = oldContext;\n      }\n    };\n    buffer = function(value) {\n      var _ref, _ref1, _ref2;\n      value = Observable(value, context);\n      switch ((_ref = value()) != null ? _ref.nodeType : void 0) {\n        case 1:\n        case 3:\n        case 11:\n          contentBind(top(), value);\n          return value();\n      }\n      switch ((_ref1 = value()) != null ? (_ref2 = _ref1[0]) != null ? _ref2.nodeType : void 0 : void 0) {\n        case 1:\n        case 3:\n        case 11:\n          return contentBind(top(), value);\n      }\n      return observeText(value);\n    };\n    self = {\n      push: push,\n      pop: pop,\n      id: id,\n      classes: classes,\n      attribute: observeAttribute,\n      text: buffer,\n      filter: function(name, content) {},\n      each: function(items, fn) {\n        var elements, parent, replace;\n        items = Observable(items, context);\n        elements = null;\n        parent = lastParent();\n        items.observe(function() {\n          return replace(elements);\n        });\n        replace = function(oldElements) {\n          elements = [];\n          items.each(function(item, index, array) {\n            var element;\n            element = null;\n            withContext(item, parent, function() {\n              return element = fn.call(item, item, index, array);\n            });\n            if (isFragment(element)) {\n              elements.push.apply(elements, element.childNodes);\n            } else {\n              elements.push(element);\n            }\n            parent.appendChild(element);\n            return element;\n          });\n          return oldElements != null ? oldElements.forEach(remove) : void 0;\n        };\n        return replace(null, items);\n      }\n    };\n    return self;\n  };\n\n  Runtime.VERSION = _dereq_(\"../package.json\").version;\n\n  Runtime.Observable = Observable;\n\n  module.exports = Runtime;\n\n  empty = function(node) {\n    var child, _results;\n    _results = [];\n    while (child = node.firstChild) {\n      _results.push(node.removeChild(child));\n    }\n    return _results;\n  };\n\n  valueIndexOf = function(options, value) {\n    if (typeof value === \"object\") {\n      return options.indexOf(value);\n    } else {\n      return options.map(function(option) {\n        return option.toString();\n      }).indexOf(value.toString());\n    }\n  };\n\n  remove = function(element) {\n    var _ref;\n    cleanup(element);\n    if ((_ref = element.parentNode) != null) {\n      _ref.removeChild(element);\n    }\n  };\n\n}).call(this);\n\n},{\"../package.json\":3,\"o_0\":2}],2:[function(_dereq_,module,exports){\n(function (global){\n!function(){var Observable,autoDeps,computeDependencies,copy,extend,flatten,get,last,magicDependency,remove,splat,withBase,__slice=[].slice;Observable=function(value,context){var changed,fn,listeners,notify,notifyReturning,self;if(typeof(value!=null?value.observe:void 0)===\"function\"){return value}listeners=[];notify=function(newValue){return copy(listeners).forEach(function(listener){return listener(newValue)})};if(typeof value===\"function\"){fn=value;self=function(){magicDependency(self);return value};self.each=function(){var args,_ref;args=1<=arguments.length?__slice.call(arguments,0):[];magicDependency(self);return(_ref=splat(value)).forEach.apply(_ref,args)};changed=function(){value=computeDependencies(self,fn,changed,context);return notify(value)};value=computeDependencies(self,fn,changed,context)}else{self=function(newValue){if(arguments.length>0){if(value!==newValue){value=newValue;notify(newValue)}}else{magicDependency(self)}return value}}self.each=function(){var args,_ref;args=1<=arguments.length?__slice.call(arguments,0):[];magicDependency(self);if(value!=null){return(_ref=[value]).forEach.apply(_ref,args)}};if(Array.isArray(value)){[\"concat\",\"every\",\"filter\",\"forEach\",\"indexOf\",\"join\",\"lastIndexOf\",\"map\",\"reduce\",\"reduceRight\",\"slice\",\"some\"].forEach(function(method){return self[method]=function(){var args;args=1<=arguments.length?__slice.call(arguments,0):[];magicDependency(self);return value[method].apply(value,args)}});[\"pop\",\"push\",\"reverse\",\"shift\",\"splice\",\"sort\",\"unshift\"].forEach(function(method){return self[method]=function(){var args;args=1<=arguments.length?__slice.call(arguments,0):[];return notifyReturning(value[method].apply(value,args))}});notifyReturning=function(returnValue){notify(value);return returnValue};extend(self,{each:function(){var args;args=1<=arguments.length?__slice.call(arguments,0):[];self.forEach.apply(self,args);return self},remove:function(object){var index;index=value.indexOf(object);if(index>=0){return notifyReturning(value.splice(index,1)[0])}},get:function(index){return value[index]},first:function(){return value[0]},last:function(){return value[value.length-1]}})}extend(self,{listeners:listeners,observe:function(listener){return listeners.push(listener)},stopObserving:function(fn){return remove(listeners,fn)},toggle:function(){return self(!value)},increment:function(n){return self(value+n)},decrement:function(n){return self(value-n)},toString:function(){return\"Observable(\"+value+\")\"}});return self};Observable.concat=function(){var args,o;args=1<=arguments.length?__slice.call(arguments,0):[];args=Observable(args);o=Observable(function(){return flatten(args.map(splat))});o.push=args.push;return o};module.exports=Observable;extend=function(){var name,source,sources,target,_i,_len;target=arguments[0],sources=2<=arguments.length?__slice.call(arguments,1):[];for(_i=0,_len=sources.length;_i<_len;_i++){source=sources[_i];for(name in source){target[name]=source[name]}}return target};global.OBSERVABLE_ROOT_HACK=[];autoDeps=function(){return last(global.OBSERVABLE_ROOT_HACK)};magicDependency=function(self){var observerStack;if(observerStack=autoDeps()){return observerStack.push(self)}};withBase=function(self,update,fn){var deps,value,_ref;global.OBSERVABLE_ROOT_HACK.push(deps=[]);try{value=fn();if((_ref=self._deps)!=null){_ref.forEach(function(observable){return observable.stopObserving(update)})}self._deps=deps;deps.forEach(function(observable){return observable.observe(update)})}finally{global.OBSERVABLE_ROOT_HACK.pop()}return value};computeDependencies=function(self,fn,update,context){return withBase(self,update,function(){return fn.call(context)})};remove=function(array,value){var index;index=array.indexOf(value);if(index>=0){return array.splice(index,1)[0]}};copy=function(array){return array.concat([])};get=function(arg){if(typeof arg===\"function\"){return arg()}else{return arg}};splat=function(item){var result,results;results=[];if(typeof item.forEach===\"function\"){item.forEach(function(i){return results.push(i)})}else{result=get(item);if(result!=null){results.push(result)}}return results};last=function(array){return array[array.length-1]};flatten=function(array){return array.reduce(function(a,b){return a.concat(b)},[])}}.call(this);\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],3:[function(_dereq_,module,exports){\nmodule.exports={\n  \"name\": \"hamlet-runtime\",\n  \"version\": \"0.6.0-pre.21\",\n  \"devDependencies\": {\n    \"browserify\": \"^4.1.11\",\n    \"coffee-script\": \"~1.7.1\",\n    \"hamlet-compiler\": \"~0.6.0-pre.11\",\n    \"jsdom\": \"^0.10.5\",\n    \"mocha\": \"~1.12.0\",\n    \"uglify-js\": \"~2.3.6\"\n  },\n  \"dependencies\": {\n    \"o_0\": \"^0.3.1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/dr-coffee-labs/hamlet-compiler.git\"\n  },\n  \"scripts\": {\n    \"prepublish\": \"script/prepublish\",\n    \"test\": \"script/test\"\n  },\n  \"files\": [\n    \"dist/\"\n  ],\n  \"main\": \"dist/runtime.js\"\n}\n\n},{}]},{},[1])\n(1)\n});",
      "mode": "100644",
      "type": "blob"
    },
    "main.coffee.md": {
      "path": "main.coffee.md",
      "content": "Builder\n=======\n\nThe builder knows how to compile a source tree or individual files into various\nbuild products.\n\n    CSON = require \"cson\"\n    HamletCompiler = require \"./lib/hamlet-compiler\"\n\n    hamletRuntimePath = \"lib/hamlet-runtime\"\n\n    styl = require \"styl\"\n\n    Deferred = $.Deferred\n\n`stripMarkdown` converts a literate file into pure code for compilation or execution.\n\n    stripMarkdown = (content) ->\n      content.split(\"\\n\").map (line) ->\n        if match = (/^([ ]{4}|\\t)/).exec line\n          line[match[0].length..]\n        else\n          \"\"\n      .join(\"\\n\")\n\n`compileTemplate` compiles a haml file into a Hamlet program.\n\n    compileTemplate = (source) ->\n      code = HamletCompiler.compile source,\n        compiler: CoffeeScript\n        runtime: \"require(\\\"/#{hamletRuntimePath}\\\")\"\n\n      \"\"\"\n        module.exports = #{code}\n      \"\"\"\n\n`stringData` exports a string of text. When you require a file that exports\nstring data it returns the string for you to use in your code. This is handy for\nCSS or other textually based data.\n\n    stringData = (source) ->\n      \"module.exports = #{JSON.stringify(source)};\"\n\n`compileStyl` compiles a styl file into CSS and makes it available as a string\nexport.\n\n    compileStyl = (source) ->\n      styleContent = styl(source, whitespace: true).toString()\n\n      stringData(styleContent)\n\n`compileCoffee` compiles a coffee file into JS. The `require` library handles\nappending a sourceURL comment to assist in debugging.\n\n    compileCoffee = (source, path) ->\n      CoffeeScript.compile(source)\n\n`compileFile` take a fileData and returns a buildData. A buildData has a `path`,\nand properties for what type of content was built.\n\n    compileFile = ({path, content}) ->\n      [name, extension] = [withoutExtension(path), fileExtension(path)]\n\n      result =\n        switch extension\n          when \"js\"\n            code: content\n          when \"json\"\n            code: stringData(JSON.parse(content))\n          when \"cson\"\n            code: stringData(CSON.parse(content))\n          when \"coffee\"\n            code: compileCoffee(content, path)\n          when \"haml\"\n            code: compileTemplate(content, name)\n          when \"styl\"\n            code: compileStyl(content)\n          when \"css\"\n            code: stringData(content)\n          when \"md\"\n            # Separate out code and call compile again\n            compileFile\n              path: name\n              content: stripMarkdown(content)\n          else\n            {}\n\n      result.name ?= name\n      result.extension ?= extension\n\n      extend result,\n        path: path\n\nBuilder\n-------\n\nThe builder instance.\n\nTODO: Standardize interface to use promises or pipes.\n\n    Builder = ->\n      build = (fileData) ->\n        results = fileData.map (datum) ->\n          {path} = datum\n\n          try\n            (cached compileFile) datum\n          catch {location, message}\n            if location?\n              message = \"Error on line #{location.first_line + 1}: #{message}\"\n\n            error: \"#{path} - #{message}\"\n\n        errors = results.filter (result) -> result.error\n        data = results.filter (result) -> !result.error\n\n        if errors.length\n          Deferred().reject(errors.map (e) -> e.error)\n        else\n          # Add the HamlJr runtime if any templates were compiled\n          hasHaml = fileData.some ({path}) ->\n            path.match /.*\\.haml(\\..*)?$/\n\n          if hasHaml\n            libExists = data.some ({name}) ->\n              name is hamletRuntimePath\n\n            unless libExists\n              data.push\n                name: hamletRuntimePath\n                code: PACKAGE.distribution[\"lib/hamlet-runtime\"].content # Kinda gross\n\n          Deferred().resolve(data)\n\nPost processors operate on the built package.\n\nTODO: Maybe we should split post processors into the packager.\n\n      postProcessors = []\n\n      addPostProcessor: (fn) ->\n        postProcessors.push fn\n\nCompile and build a tree of file data into a distribution. The distribution should\ninclude source files, compiled files, and documentation.\n\n      build: (fileData, cache={}) ->\n        build(fileData)\n        .then (items) ->\n\n          results =\n            items.filter (item) ->\n              item.code\n            .map (item) ->\n              path: item.name\n              content: item.code\n              type: \"blob\"\n\n          source = arrayToHash(fileData.map cleanSourceFile)\n\n          pkg =\n            source: source\n            distribution: arrayToHash(results)\n\n          postProcessors.forEach (fn) ->\n            fn(pkg)\n\n          return pkg\n\n    module.exports = Builder\n\nCache\n-----\n\n    compilerCache = {}\n\n    cached = (compileFn) ->\n      (data) ->\n        {path, sha, content} = data\n        if sha\n          key = \"#{path}:#{sha}\"\n          compilerCache[key] or compilerCache[key] = compileFn(data)\n        else\n          compileFn(data)\n\nHelpers\n-------\n\n    cleanSourceFile = ({path, content, mode, type}) ->\n      {path, content, mode, type}\n\n    arrayToHash = (array) ->\n      array.reduce (hash, file) ->\n        hash[file.path] = file\n        hash\n      , {}\n\n    extend = (target, sources...) ->\n      for source in sources\n        for name of source\n          target[name] = source[name]\n\n      return target\n\n    fileExtension = (str) ->\n      if match = str.match(/\\.([^\\.]*)$/, '')\n        match[match.length - 1]\n      else\n        ''\n\n    withoutExtension = (str) ->\n      str.replace(/\\.[^\\.]*$/,\"\")\n",
      "mode": "100644",
      "type": "blob"
    },
    "pixie.cson": {
      "path": "pixie.cson",
      "content": "version: \"0.4.1\"\nentryPoint: \"main\"\nremoteDependencies: [\n  \"https://code.jquery.com/jquery-1.11.0.min.js\"\n  \"https://cdnjs.cloudflare.com/ajax/libs/coffee-script/1.7.1/coffee-script.min.js\"\n]\ndependencies:\n  cson: \"distri/cson:v0.1.0\"\n  styl: \"distri/styl:v0.2.8\"\n",
      "mode": "100644",
      "type": "blob"
    },
    "samples/haml.haml": {
      "path": "samples/haml.haml",
      "content": "%h1 Super cool sample\n\n= \"yo/lo\"\n",
      "mode": "100644",
      "type": "blob"
    },
    "samples/styl.styl": {
      "path": "samples/styl.styl",
      "content": "body\n  color: green\n",
      "mode": "100644",
      "type": "blob"
    },
    "test/builder.coffee": {
      "path": "test/builder.coffee",
      "content": "global.require = require\nglobal.PACKAGE = PACKAGE\n\nBuilder = require \"../main\"\n\ndescribe \"Builder\", ->\n  it \"should exist\", ->\n    assert Builder\n\n  it \"should build haml\", (done) ->\n    builder = Builder()\n\n    fileData = [\n      PACKAGE.source[\"samples/haml.haml\"]\n    ]\n\n    builder.build(fileData).then (result) ->\n      assert result.distribution[\"lib/hamlet-runtime\"].content\n      assert result.distribution[\"samples/haml\"].content\n      done()\n    , (errors) ->\n      throw errors[0]\n\n  it \"should build styl\", (done) ->\n    builder = Builder()\n\n    fileData = [\n      PACKAGE.source[\"samples/styl.styl\"]\n    ]\n\n    builder.build(fileData).then (result) ->\n      assert result.distribution[\"samples/styl\"].content\n      done()\n    , (errors) ->\n      throw errors[0]\n\n  it \"should have the Hamlet runtime\", ->\n    assert require \"/lib/hamlet-runtime\"\n\n  it \"should have the Hamlet compiler\", ->\n    assert require \"/lib/hamlet-runtime\"\n",
      "mode": "100644",
      "type": "blob"
    }
  },
  "distribution": {
    "lib/hamlet-compiler": {
      "path": "lib/hamlet-compiler",
      "content": "!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.hamletCompiler=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n!function(){var indentText,keywords,keywordsRegex,util,__slice=[].slice;indentText=function(text,indent){if(indent==null){indent=\"  \"}return indent+text.replace(/\\n/g,\"\\n\"+indent)};keywords=[\"each\"];keywordsRegex=RegExp(\"^\\\\s*(\"+keywords.join(\"|\")+\")\\\\s+\");util={indent:indentText,filters:{verbatim:function(content,compiler){return compiler.buffer('\"\"\"'+content.replace(/(#|\")/g,\"\\\\$1\")+'\"\"\"')},plain:function(content,compiler){return compiler.buffer(JSON.stringify(content))},coffeescript:function(content,compiler){return[content]},javascript:function(content,compiler){return[\"`\",compiler.indent(content),\"`\"]}},element:function(tag,contents){var lines;if(contents==null){contents=[]}return lines=[\"__runtime.push document.createElement(\"+JSON.stringify(tag)+\")\"].concat(__slice.call(contents),[\"__runtime.pop()\"])},buffer:function(value){return[\"__runtime.text \"+value]},attributes:function(node){var attributeLines,attributes,classes,id,ids,idsAndClasses;id=node.id,classes=node.classes,attributes=node.attributes;if(id){ids=[JSON.stringify(id)]}else{ids=[]}classes=(classes||[]).map(JSON.stringify);if(attributes){attributes=attributes.filter(function(_arg){var name,value;name=_arg.name,value=_arg.value;if(name===\"class\"){classes.push(value);return false}else if(name===\"id\"){ids.push(value);return false}else{return true}})}else{attributes=[]}idsAndClasses=[];if(ids.length){idsAndClasses.push(\"__runtime.id \"+ids.join(\", \"))}if(classes.length){idsAndClasses.push(\"__runtime.classes \"+classes.join(\", \"))}attributeLines=attributes.map(function(_arg){var name,value;name=_arg.name,value=_arg.value;name=JSON.stringify(name);return\"__runtime.attribute \"+name+\", \"+value});return idsAndClasses.concat(attributeLines)},render:function(node){var filter,tag,text;tag=node.tag,filter=node.filter,text=node.text;if(tag){return this.tag(node)}else if(filter){return this.filter(node)}else{return this.contents(node)}},replaceKeywords:function(codeString){return codeString.replace(keywordsRegex,\"__runtime.$1 \")},filter:function(node){var filter,filterName;filterName=node.filter;if(filter=this.filters[filterName]){return[].concat.apply([],this.filters[filterName](node.content,this))}else{return[\"__runtime.filter(\"+JSON.stringify(filterName)+\", \"+JSON.stringify(node.content)+\")\"]}},contents:function(node){var bufferedCode,childContent,children,code,contents,indent,text,unbufferedCode;children=node.children,bufferedCode=node.bufferedCode,unbufferedCode=node.unbufferedCode,text=node.text;if(unbufferedCode){indent=true;code=this.replaceKeywords(unbufferedCode);contents=[code]}else if(bufferedCode){contents=this.buffer(bufferedCode)}else if(text){contents=this.buffer(JSON.stringify(text))}else if(node.tag){contents=[]}else if(node.comment){return[]}else{contents=[];console.warn(\"No content for node:\",node)}if(children){childContent=this.renderNodes(children);if(indent){childContent=this.indent(childContent.join(\"\\n\"))}contents=contents.concat(childContent)}return this.attributes(node).concat(contents)},renderNodes:function(nodes){return[].concat.apply([],nodes.map(this.render,this))},tag:function(node){var tag;tag=node.tag;return this.element(tag,this.contents(node))}};exports.compile=function(parseTree,_arg){var compiler,items,options,program,programSource,runtime,source,_ref;_ref=_arg!=null?_arg:{},compiler=_ref.compiler,runtime=_ref.runtime;if(runtime==null){runtime='require(\"hamlet-runtime\")'}items=util.renderNodes(parseTree);source=\"(data) ->\\n  (->\\n    __runtime = \"+runtime+\"(this)\\n\\n    __runtime.push document.createDocumentFragment()\\n\"+util.indent(items.join(\"\\n\"),\"    \")+\"\\n    __runtime.pop()\\n  ).call(data)\";options={bare:true};programSource=source;program=compiler.compile(programSource,options);return program}}.call(this);\n},{}],2:[function(_dereq_,module,exports){\n!function(){var compile,parser;compile=_dereq_(\"./compiler\").compile;parser=_dereq_(\"hamlet-parser\");module.exports={compile:function(input,options){if(typeof input===\"string\"){input=parser.parse(input)}return compile(input,options)},parser:parser}}.call(this);\n},{\"./compiler\":1,\"hamlet-parser\":7}],3:[function(_dereq_,module,exports){\n\n},{}],4:[function(_dereq_,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,_dereq_(\"FWaASH\"))\n},{\"FWaASH\":5}],5:[function(_dereq_,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n},{}],6:[function(_dereq_,module,exports){\nvar lexer=function(){var lexer={EOF:1,parseError:function parseError(str,hash){if(this.yy.parser){this.yy.parser.parseError(str,hash)}else{throw new Error(str)}},setInput:function(input){this._input=input;this._more=this._backtrack=this.done=false;this.yylineno=this.yyleng=0;this.yytext=this.matched=this.match=\"\";this.conditionStack=[\"INITIAL\"];this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0};if(this.options.ranges){this.yylloc.range=[0,0]}this.offset=0;return this},input:function(){var ch=this._input[0];this.yytext+=ch;this.yyleng++;this.offset++;this.match+=ch;this.matched+=ch;var lines=ch.match(/(?:\\r\\n?|\\n).*/g);if(lines){this.yylineno++;this.yylloc.last_line++}else{this.yylloc.last_column++}if(this.options.ranges){this.yylloc.range[1]++}this._input=this._input.slice(1);return ch},unput:function(ch){var len=ch.length;var lines=ch.split(/(?:\\r\\n?|\\n)/g);this._input=ch+this._input;this.yytext=this.yytext.substr(0,this.yytext.length-len-1);this.offset-=len;var oldLines=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1);this.matched=this.matched.substr(0,this.matched.length-1);if(lines.length-1){this.yylineno-=lines.length-1}var r=this.yylloc.range;this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len};if(this.options.ranges){this.yylloc.range=[r[0],r[0]+this.yyleng-len]}this.yyleng=this.yytext.length;return this},more:function(){this._more=true;return this},reject:function(){if(this.options.backtrack_lexer){this._backtrack=true}else{return this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})}return this},less:function(n){this.unput(this.match.slice(n))},pastInput:function(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?\"...\":\"\")+past.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var next=this.match;if(next.length<20){next+=this._input.substr(0,20-next.length)}return(next.substr(0,20)+(next.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var pre=this.pastInput();var c=new Array(pre.length+1).join(\"-\");return pre+this.upcomingInput()+\"\\n\"+c+\"^\"},test_match:function(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer){backup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done};if(this.options.ranges){backup.yylloc.range=this.yylloc.range.slice(0)}}lines=match[0].match(/(?:\\r\\n?|\\n).*/g);if(lines){this.yylineno+=lines.length}this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+match[0].length};this.yytext+=match[0];this.match+=match[0];this.matches=match;this.yyleng=this.yytext.length;if(this.options.ranges){this.yylloc.range=[this.offset,this.offset+=this.yyleng]}this._more=false;this._backtrack=false;this._input=this._input.slice(match[0].length);this.matched+=match[0];token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]);if(this.done&&this._input){this.done=false}if(token){return token}else if(this._backtrack){for(var k in backup){this[k]=backup[k]}return false}return false},next:function(){if(this.done){return this.EOF}if(!this._input){this.done=true}var token,match,tempMatch,index;if(!this._more){this.yytext=\"\";this.match=\"\"}var rules=this._currentRules();for(var i=0;i<rules.length;i++){tempMatch=this._input.match(this.rules[rules[i]]);if(tempMatch&&(!match||tempMatch[0].length>match[0].length)){match=tempMatch;index=i;if(this.options.backtrack_lexer){token=this.test_match(tempMatch,rules[i]);if(token!==false){return token}else if(this._backtrack){match=false;continue}else{return false}}else if(!this.options.flex){break}}}if(match){token=this.test_match(match,rules[index]);if(token!==false){return token}return false}if(this._input===\"\"){return this.EOF}else{return this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})}},lex:function lex(){var r=this.next();if(r){return r}else{return this.lex()}},begin:function begin(condition){this.conditionStack.push(condition)},popState:function popState(){var n=this.conditionStack.length-1;if(n>0){return this.conditionStack.pop()}else{return this.conditionStack[0]}},_currentRules:function _currentRules(){if(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules}else{return this.conditions[\"INITIAL\"].rules}},topState:function topState(n){n=this.conditionStack.length-1-Math.abs(n||0);if(n>=0){return this.conditionStack[n]}else{return\"INITIAL\"}},pushState:function pushState(condition){this.begin(condition)},stateStackSize:function stateStackSize(){return this.conditionStack.length},options:{moduleName:\"lexer\"},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){var YYSTATE=YY_START;switch($avoiding_name_collisions){case 0:return\"SEPARATOR\";break;case 1:this.popState();return\"RIGHT_PARENTHESIS\";break;case 2:return\"ATTRIBUTE\";break;case 3:this.begin(\"value\");return\"EQUAL\";break;case 4:return\"AT_ATTRIBUTE\";break;case 5:this.popState();return\"ATTRIBUTE_VALUE\";break;case 6:this.popState();return\"ATTRIBUTE_VALUE\";break;case 7:this.popState();return\"ATTRIBUTE_VALUE\";break;case 8:yy.indent=0;this.popState();return\"NEWLINE\";break;case 9:return\"FILTER_LINE\";break;case 10:yy.indent=0;return\"NEWLINE\";break;case 11:yy.indent+=1;if(yy.indent>yy.filterIndent){this.begin(\"filter\")};return\"INDENT\";break;case 12:this.begin(\"parentheses_attributes\");return\"LEFT_PARENTHESIS\";break;case 13:yy_.yytext=yy_.yytext.substring(1);return\"COMMENT\";break;case 14:yy.filterIndent=yy.indent;yy_.yytext=yy_.yytext.substring(1);return\"FILTER\";break;case 15:yy_.yytext=yy_.yytext.substring(1);return\"ID\";break;case 16:yy_.yytext=yy_.yytext.substring(1);return\"CLASS\";break;case 17:yy_.yytext=yy_.yytext.substring(1);return\"TAG\";break;case 18:yy_.yytext=yy_.yytext.substring(1).trim();return\"BUFFERED_CODE\";break;case 19:yy_.yytext=yy_.yytext.substring(1).trim();return\"UNBUFFERED_CODE\";break;case 20:yy_.yytext=yy_.yytext.trim();return\"TEXT\";break}},rules:[/^(?:[ \\t]+)/,/^(?:\\))/,/^(?:([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:=)/,/^(?:@([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:\"(\\\\.|[^\\\\\"])*\")/,/^(?:'(\\\\.|[^\\\\'])*')/,/^(?:[^ \\t\\)]*)/,/^(?:(\\n|$))/,/^(?:[^\\n]*)/,/^(?:\\s*(\\n|$))/,/^(?:  )/,/^(?:\\()/,/^(?:\\/.*)/,/^(?::([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:#((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:\\.((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:%((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:=.*)/,/^(?:-.*)/,/^(?:.*)/],conditions:{filter:{rules:[8,9],inclusive:false},value:{rules:[5,6,7],inclusive:false},parentheses_attributes:{rules:[0,1,2,3,4],inclusive:false},INITIAL:{rules:[10,11,12,13,14,15,16,17,18,19,20],inclusive:true}}};return lexer}();module.exports=lexer;\n},{}],7:[function(_dereq_,module,exports){\n!function(){var extend,lexer,oldParse,parser,__slice=[].slice;lexer=_dereq_(\"./lexer\");parser=_dereq_(\"./parser\").parser;extend=function(){var name,source,sources,target,_i,_len;target=arguments[0],sources=2<=arguments.length?__slice.call(arguments,1):[];for(_i=0,_len=sources.length;_i<_len;_i++){source=sources[_i];for(name in source){target[name]=source[name]}}return target};oldParse=parser.parse;extend(parser,{lexer:lexer,parse:function(input){extend(parser.yy,{indent:0,nodePath:[{children:[]}],filterIndent:void 0});return oldParse.call(parser,input)}});extend(parser.yy,{extend:extend,newline:function(){var lastNode;lastNode=this.nodePath[this.nodePath.length-1];if(lastNode.filter){return this.appendFilterContent(lastNode,\"\")}},append:function(node,indentation){var index,lastNode,parent;if(indentation==null){indentation=0}if(node.filterLine){lastNode=this.nodePath[this.nodePath.length-1];this.appendFilterContent(lastNode,node.filterLine);return}parent=this.nodePath[indentation];this.appendChild(parent,node);index=indentation+1;this.nodePath[index]=node;this.nodePath.length=index+1;return node},appendChild:function(parent,child){if(!child.filter){this.filterIndent=void 0;this.lexer.popState()}parent.children||(parent.children=[]);return parent.children.push(child)},appendFilterContent:function(filter,content){filter.content||(filter.content=\"\");return filter.content+=\"\"+content+\"\\n\"}});module.exports=parser}.call(this);\n},{\"./lexer\":6,\"./parser\":8}],8:[function(_dereq_,module,exports){\n(function (process){\nvar parser=function(){var parser={trace:function trace(){},yy:{},symbols_:{error:2,root:3,lines:4,line:5,indentation:6,indentationLevel:7,INDENT:8,lineMain:9,end:10,tag:11,rest:12,COMMENT:13,FILTER:14,FILTER_LINE:15,NEWLINE:16,name:17,tagComponents:18,attributes:19,idComponent:20,classComponents:21,ID:22,CLASS:23,LEFT_PARENTHESIS:24,attributePairs:25,RIGHT_PARENTHESIS:26,SEPARATOR:27,attributePair:28,ATTRIBUTE:29,EQUAL:30,ATTRIBUTE_VALUE:31,AT_ATTRIBUTE:32,TAG:33,BUFFERED_CODE:34,UNBUFFERED_CODE:35,TEXT:36,$accept:0,$end:1},terminals_:{2:\"error\",8:\"INDENT\",13:\"COMMENT\",14:\"FILTER\",15:\"FILTER_LINE\",16:\"NEWLINE\",22:\"ID\",23:\"CLASS\",24:\"LEFT_PARENTHESIS\",26:\"RIGHT_PARENTHESIS\",27:\"SEPARATOR\",29:\"ATTRIBUTE\",30:\"EQUAL\",31:\"ATTRIBUTE_VALUE\",32:\"AT_ATTRIBUTE\",33:\"TAG\",34:\"BUFFERED_CODE\",35:\"UNBUFFERED_CODE\",36:\"TEXT\"},productions_:[0,[3,1],[4,2],[4,1],[6,0],[6,1],[7,2],[7,1],[5,3],[5,1],[9,2],[9,1],[9,1],[9,1],[9,1],[9,1],[10,1],[11,2],[11,2],[11,1],[11,1],[18,3],[18,2],[18,2],[18,2],[18,1],[18,1],[20,1],[21,2],[21,1],[19,3],[25,3],[25,1],[28,3],[28,1],[17,1],[12,1],[12,1],[12,1]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$){var $0=$$.length-1;switch(yystate){case 1:return this.$=yy.nodePath[0].children;break;case 2:this.$=$$[$0-1];break;case 3:this.$=$$[$0];break;case 4:this.$=0;break;case 5:this.$=$$[$0];break;case 6:this.$=$$[$0-1]+1;break;case 7:this.$=1;break;case 8:this.$=yy.append($$[$0-1],$$[$0-2]);break;case 9:this.$=function(){if($$[$0].newline){return yy.newline()}}();break;case 10:this.$=yy.extend($$[$0-1],$$[$0]);break;case 11:this.$=$$[$0];break;case 12:this.$=$$[$0];break;case 13:this.$={comment:$$[$0]};break;case 14:this.$={filter:$$[$0]};break;case 15:this.$={filterLine:$$[$0]};break;case 16:this.$={newline:true};break;case 17:this.$=function(){$$[$0].tag=$$[$0-1];return $$[$0]}();break;case 18:this.$={tag:$$[$0-1],attributes:$$[$0]};break;case 19:this.$={tag:$$[$0]};break;case 20:this.$=yy.extend($$[$0],{tag:\"div\"});break;case 21:this.$={id:$$[$0-2],classes:$$[$0-1],attributes:$$[$0]};break;case 22:this.$={id:$$[$0-1],attributes:$$[$0]};break;case 23:this.$={classes:$$[$0-1],attributes:$$[$0]};break;case 24:this.$={id:$$[$0-1],classes:$$[$0]};break;case 25:this.$={id:$$[$0]};break;case 26:this.$={classes:$$[$0]};break;case 27:this.$=$$[$0];break;case 28:this.$=$$[$0-1].concat($$[$0]);break;case 29:this.$=[$$[$0]];break;case 30:this.$=$$[$0-1];break;case 31:this.$=$$[$0-2].concat($$[$0]);break;case 32:this.$=[$$[$0]];break;case 33:this.$={name:$$[$0-2],value:$$[$0]};break;case 34:this.$={name:$$[$0].substring(1),value:$$[$0]};break;case 35:this.$=$$[$0];break;case 36:this.$={bufferedCode:$$[$0]};break;case 37:this.$={unbufferedCode:$$[$0]};break;case 38:this.$={text:$$[$0]+\"\\n\"};break}},table:[{3:1,4:2,5:3,6:4,7:6,8:[1,8],10:5,13:[2,4],14:[2,4],15:[2,4],16:[1,7],22:[2,4],23:[2,4],33:[2,4],34:[2,4],35:[2,4],36:[2,4]},{1:[3]},{1:[2,1],5:9,6:4,7:6,8:[1,8],10:5,13:[2,4],14:[2,4],15:[2,4],16:[1,7],22:[2,4],23:[2,4],33:[2,4],34:[2,4],35:[2,4],36:[2,4]},{1:[2,3],8:[2,3],13:[2,3],14:[2,3],15:[2,3],16:[2,3],22:[2,3],23:[2,3],33:[2,3],34:[2,3],35:[2,3],36:[2,3]},{9:10,11:11,12:12,13:[1,13],14:[1,14],15:[1,15],17:16,18:17,20:22,21:23,22:[1,24],23:[1,25],33:[1,21],34:[1,18],35:[1,19],36:[1,20]},{1:[2,9],8:[2,9],13:[2,9],14:[2,9],15:[2,9],16:[2,9],22:[2,9],23:[2,9],33:[2,9],34:[2,9],35:[2,9],36:[2,9]},{8:[1,26],13:[2,5],14:[2,5],15:[2,5],22:[2,5],23:[2,5],33:[2,5],34:[2,5],35:[2,5],36:[2,5]},{1:[2,16],8:[2,16],13:[2,16],14:[2,16],15:[2,16],16:[2,16],22:[2,16],23:[2,16],33:[2,16],34:[2,16],35:[2,16],36:[2,16]},{8:[2,7],13:[2,7],14:[2,7],15:[2,7],22:[2,7],23:[2,7],33:[2,7],34:[2,7],35:[2,7],36:[2,7]},{1:[2,2],8:[2,2],13:[2,2],14:[2,2],15:[2,2],16:[2,2],22:[2,2],23:[2,2],33:[2,2],34:[2,2],35:[2,2],36:[2,2]},{10:27,16:[1,7]},{12:28,16:[2,11],34:[1,18],35:[1,19],36:[1,20]},{16:[2,12]},{16:[2,13]},{16:[2,14]},{16:[2,15]},{16:[2,19],18:29,19:30,20:22,21:23,22:[1,24],23:[1,25],24:[1,31],34:[2,19],35:[2,19],36:[2,19]},{16:[2,20],34:[2,20],35:[2,20],36:[2,20]},{16:[2,36]},{16:[2,37]},{16:[2,38]},{16:[2,35],22:[2,35],23:[2,35],24:[2,35],34:[2,35],35:[2,35],36:[2,35]},{16:[2,25],19:33,21:32,23:[1,25],24:[1,31],34:[2,25],35:[2,25],36:[2,25]},{16:[2,26],19:34,23:[1,35],24:[1,31],34:[2,26],35:[2,26],36:[2,26]},{16:[2,27],23:[2,27],24:[2,27],34:[2,27],35:[2,27],36:[2,27]},{16:[2,29],23:[2,29],24:[2,29],34:[2,29],35:[2,29],36:[2,29]},{8:[2,6],13:[2,6],14:[2,6],15:[2,6],22:[2,6],23:[2,6],33:[2,6],34:[2,6],35:[2,6],36:[2,6]},{1:[2,8],8:[2,8],13:[2,8],14:[2,8],15:[2,8],16:[2,8],22:[2,8],23:[2,8],33:[2,8],34:[2,8],35:[2,8],36:[2,8]},{16:[2,10]},{16:[2,17],34:[2,17],35:[2,17],36:[2,17]},{16:[2,18],34:[2,18],35:[2,18],36:[2,18]},{25:36,28:37,29:[1,38],32:[1,39]},{16:[2,24],19:40,23:[1,35],24:[1,31],34:[2,24],35:[2,24],36:[2,24]},{16:[2,22],34:[2,22],35:[2,22],36:[2,22]},{16:[2,23],34:[2,23],35:[2,23],36:[2,23]},{16:[2,28],23:[2,28],24:[2,28],34:[2,28],35:[2,28],36:[2,28]},{26:[1,41],27:[1,42]},{26:[2,32],27:[2,32]},{30:[1,43]},{26:[2,34],27:[2,34]},{16:[2,21],34:[2,21],35:[2,21],36:[2,21]},{16:[2,30],34:[2,30],35:[2,30],36:[2,30]},{28:44,29:[1,38],32:[1,39]},{31:[1,45]},{26:[2,31],27:[2,31]},{26:[2,33],27:[2,33]}],defaultActions:{12:[2,12],13:[2,13],14:[2,14],15:[2,15],18:[2,36],19:[2,37],20:[2,38],28:[2,10]},parseError:function parseError(str,hash){if(hash.recoverable){this.trace(str)}else{throw new Error(str)}},parse:function parse(input){var self=this,stack=[0],vstack=[null],lstack=[],table=this.table,yytext=\"\",yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1;var args=lstack.slice.call(arguments,1);this.lexer.setInput(input);this.lexer.yy=this.yy;this.yy.lexer=this.lexer;this.yy.parser=this;if(typeof this.lexer.yylloc==\"undefined\"){this.lexer.yylloc={}}var yyloc=this.lexer.yylloc;lstack.push(yyloc);var ranges=this.lexer.options&&this.lexer.options.ranges;if(typeof this.yy.parseError===\"function\"){this.parseError=this.yy.parseError}else{this.parseError=Object.getPrototypeOf(this).parseError}function popStack(n){stack.length=stack.length-2*n;vstack.length=vstack.length-n;lstack.length=lstack.length-n}function lex(){var token;token=self.lexer.lex()||EOF;if(typeof token!==\"number\"){token=self.symbols_[token]||token}return token}var symbol,preErrorSymbol,state,action,a,r,yyval={},p,len,newState,expected;while(true){state=stack[stack.length-1];if(this.defaultActions[state]){action=this.defaultActions[state]}else{if(symbol===null||typeof symbol==\"undefined\"){symbol=lex()}action=table[state]&&table[state][symbol]}if(typeof action===\"undefined\"||!action.length||!action[0]){var errStr=\"\";expected=[];for(p in table[state]){if(this.terminals_[p]&&p>TERROR){expected.push(\"'\"+this.terminals_[p]+\"'\")}}if(this.lexer.showPosition){errStr=\"Parse error on line \"+(yylineno+1)+\":\\n\"+this.lexer.showPosition()+\"\\nExpecting \"+expected.join(\", \")+\", got '\"+(this.terminals_[symbol]||symbol)+\"'\"}else{errStr=\"Parse error on line \"+(yylineno+1)+\": Unexpected \"+(symbol==EOF?\"end of input\":\"'\"+(this.terminals_[symbol]||symbol)+\"'\")}this.parseError(errStr,{text:this.lexer.match,token:this.terminals_[symbol]||symbol,line:this.lexer.yylineno,loc:yyloc,expected:expected})}if(action[0]instanceof Array&&action.length>1){throw new Error(\"Parse Error: multiple actions possible at state: \"+state+\", token: \"+symbol)}switch(action[0]){case 1:stack.push(symbol);vstack.push(this.lexer.yytext);lstack.push(this.lexer.yylloc);stack.push(action[1]);symbol=null;if(!preErrorSymbol){yyleng=this.lexer.yyleng;yytext=this.lexer.yytext;yylineno=this.lexer.yylineno;yyloc=this.lexer.yylloc;if(recovering>0){recovering--}}else{symbol=preErrorSymbol;preErrorSymbol=null}break;case 2:len=this.productions_[action[1]][1];yyval.$=vstack[vstack.length-len];yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column};if(ranges){yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]]}r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,this.yy,action[1],vstack,lstack].concat(args));if(typeof r!==\"undefined\"){return r}if(len){stack=stack.slice(0,-1*len*2);vstack=vstack.slice(0,-1*len);lstack=lstack.slice(0,-1*len)}stack.push(this.productions_[action[1]][0]);vstack.push(yyval.$);lstack.push(yyval._$);newState=table[stack[stack.length-2]][stack[stack.length-1]];stack.push(newState);break;case 3:return true}}return true}};function Parser(){this.yy={}}Parser.prototype=parser;parser.Parser=Parser;return new Parser}();if(typeof _dereq_!==\"undefined\"&&typeof exports!==\"undefined\"){exports.parser=parser;exports.Parser=parser.Parser;exports.parse=function(){return parser.parse.apply(parser,arguments)};exports.main=function commonjsMain(args){if(!args[1]){console.log(\"Usage: \"+args[0]+\" FILE\");process.exit(1)}var source=_dereq_(\"fs\").readFileSync(_dereq_(\"path\").normalize(args[1]),\"utf8\");return exports.parser.parse(source)};if(typeof module!==\"undefined\"&&_dereq_.main===module){exports.main(process.argv.slice(1))}}\n}).call(this,_dereq_(\"FWaASH\"))\n},{\"FWaASH\":5,\"fs\":3,\"path\":4}]},{},[2])\n(2)\n});\n",
      "type": "blob"
    },
    "lib/hamlet-runtime": {
      "path": "lib/hamlet-runtime",
      "content": "!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Hamlet=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var Observable, Runtime, bindEvent, bindObservable, cleanup, contentBind, empty, eventNames, initContent, isEvent, isFragment, remove, specialBindings, valueBind, valueIndexOf,\n    __slice = [].slice;\n\n  Observable = _dereq_(\"o_0\");\n\n  eventNames = \"abort\\nblur\\nchange\\nclick\\ndblclick\\ndrag\\ndragend\\ndragenter\\ndragleave\\ndragover\\ndragstart\\ndrop\\nerror\\nfocus\\ninput\\nkeydown\\nkeypress\\nkeyup\\nload\\nmousedown\\nmousemove\\nmouseout\\nmouseover\\nmouseup\\nreset\\nresize\\nscroll\\nselect\\nsubmit\\ntouchcancel\\ntouchend\\ntouchenter\\ntouchleave\\ntouchmove\\ntouchstart\\nunload\".split(\"\\n\");\n\n  isEvent = function(name) {\n    return eventNames.indexOf(name) !== -1;\n  };\n\n  isFragment = function(node) {\n    return (node != null ? node.nodeType : void 0) === 11;\n  };\n\n  initContent = function(element) {\n    var allContent, update;\n    if (element._hamlet_content) {\n      return element._hamlet_content;\n    }\n    allContent = (element._hamlet_content != null ? element._hamlet_content : element._hamlet_content = Observable.concat());\n    update = function() {\n      empty(element);\n      return allContent.each(function(item) {\n        return element.appendChild(item);\n      });\n    };\n    bindObservable(element, allContent, null, update);\n    return allContent;\n  };\n\n  contentBind = function(element, value) {\n    initContent(element).push(value);\n    return element;\n  };\n\n  valueBind = function(element, value, context) {\n    var update;\n    value = Observable(value, context);\n    switch (element.nodeName) {\n      case \"SELECT\":\n        element.oninput = element.onchange = function() {\n          var optionValue, _ref, _value;\n          _ref = this.children[this.selectedIndex], optionValue = _ref.value, _value = _ref._value;\n          return value(_value || optionValue);\n        };\n        update = function(newValue) {\n          var options;\n          element._value = newValue;\n          if ((options = element._options)) {\n            if (newValue.value != null) {\n              return element.value = (typeof newValue.value === \"function\" ? newValue.value() : void 0) || newValue.value;\n            } else {\n              return element.selectedIndex = valueIndexOf(options, newValue);\n            }\n          } else {\n            return element.value = newValue;\n          }\n        };\n        bindObservable(element, value, context, update);\n        break;\n      default:\n        element.oninput = element.onchange = function() {\n          return value(element.value);\n        };\n        if (typeof element.attachEvent === \"function\") {\n          element.attachEvent(\"onkeydown\", function() {\n            return setTimeout(function() {\n              return value(element.value);\n            }, 0);\n          });\n        }\n        bindObservable(element, value, context, function(newValue) {\n          if (element.value !== newValue) {\n            return element.value = newValue;\n          }\n        });\n    }\n  };\n\n  specialBindings = {\n    INPUT: {\n      checked: function(element, value, context) {\n        element.onchange = function() {\n          return typeof value === \"function\" ? value(element.checked) : void 0;\n        };\n        return bindObservable(element, value, context, function(newValue) {\n          return element.checked = newValue;\n        });\n      }\n    },\n    SELECT: {\n      options: function(element, values, context) {\n        var updateValues;\n        values = Observable(values, context);\n        updateValues = function(values) {\n          empty(element);\n          element._options = values;\n          return values.map(function(value, index) {\n            var option, optionName, optionValue;\n            option = document.createElement(\"option\");\n            option._value = value;\n            if (typeof value === \"object\") {\n              optionValue = (value != null ? value.value : void 0) || index;\n            } else {\n              optionValue = value.toString();\n            }\n            bindObservable(option, optionValue, value, function(newValue) {\n              return option.value = newValue;\n            });\n            optionName = (value != null ? value.name : void 0) || value;\n            bindObservable(option, optionName, value, function(newValue) {\n              return option.textContent = option.innerText = newValue;\n            });\n            element.appendChild(option);\n            if (value === element._value) {\n              element.selectedIndex = index;\n            }\n            return option;\n          });\n        };\n        return bindObservable(element, values, context, updateValues);\n      }\n    }\n  };\n\n  bindObservable = function(element, value, context, update) {\n    var observable, observe, unobserve;\n    observable = Observable(value, context);\n    observe = function() {\n      observable.observe(update);\n      return update(observable());\n    };\n    unobserve = function() {\n      return observable.stopObserving(update);\n    };\n    observe();\n    try {\n      (element._hamlet_cleanup || (element._hamlet_cleanup = [])).push(unobserve);\n    } catch (_error) {}\n    return element;\n  };\n\n  bindEvent = function(element, name, fn, context) {\n    return element[name] = function() {\n      return fn.apply(context, arguments);\n    };\n  };\n\n  cleanup = function(element) {\n    var _ref;\n    Array.prototype.forEach.call(element.children, cleanup);\n    if ((_ref = element._hamlet_cleanup) != null) {\n      _ref.forEach(function(method) {\n        return method();\n      });\n    }\n    delete element._hamlet_cleanup;\n  };\n\n  Runtime = function(context) {\n    var append, buffer, classes, contextTop, id, lastParent, observeAttribute, observeText, pop, push, render, self, stack, top, withContext;\n    stack = [];\n    lastParent = function() {\n      var element, i;\n      i = stack.length - 1;\n      while ((element = stack[i]) && isFragment(element)) {\n        i -= 1;\n      }\n      return element;\n    };\n    contextTop = void 0;\n    top = function() {\n      return stack[stack.length - 1] || contextTop;\n    };\n    append = function(child) {\n      var parent, _ref;\n      parent = top();\n      if (isFragment(child) && child.childNodes.length === 1) {\n        child = child.childNodes[0];\n      }\n      if ((_ref = top()) != null) {\n        _ref.appendChild(child);\n      }\n      return child;\n    };\n    push = function(child) {\n      return stack.push(child);\n    };\n    pop = function() {\n      return append(stack.pop());\n    };\n    render = function(child) {\n      push(child);\n      return pop();\n    };\n    id = function() {\n      var element, sources, update, value;\n      sources = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      element = top();\n      update = function(newValue) {\n        if (typeof newValue === \"function\") {\n          newValue = newValue();\n        }\n        return element.id = newValue;\n      };\n      value = function() {\n        var possibleValues;\n        possibleValues = sources.map(function(source) {\n          if (typeof source === \"function\") {\n            return source();\n          } else {\n            return source;\n          }\n        }).filter(function(idValue) {\n          return idValue != null;\n        });\n        return possibleValues[possibleValues.length - 1];\n      };\n      return bindObservable(element, value, context, update);\n    };\n    classes = function() {\n      var element, sources, update;\n      sources = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      element = top();\n      update = function(newValue) {\n        if (typeof newValue === \"function\") {\n          newValue = newValue();\n        }\n        return element.className = newValue;\n      };\n      return (function(context) {\n        var value;\n        value = function() {\n          var possibleValues;\n          possibleValues = sources.map(function(source) {\n            if (typeof source === \"function\") {\n              return source.call(context);\n            } else {\n              return source;\n            }\n          }).filter(function(sourceValue) {\n            return sourceValue != null;\n          });\n          return possibleValues.join(\" \");\n        };\n        return bindObservable(element, value, context, update);\n      })(context);\n    };\n    observeAttribute = function(name, value) {\n      var binding, element, nodeName, _ref;\n      element = top();\n      nodeName = element.nodeName;\n      if (name === \"value\") {\n        valueBind(element, value);\n      } else if (binding = (_ref = specialBindings[nodeName]) != null ? _ref[name] : void 0) {\n        binding(element, value, context);\n      } else if (name.match(/^on/) && isEvent(name.substr(2))) {\n        bindEvent(element, name, value, context);\n      } else if (isEvent(name)) {\n        bindEvent(element, \"on\" + name, value, context);\n      } else {\n        bindObservable(element, value, context, function(newValue) {\n          if ((newValue != null) && newValue !== false) {\n            return element.setAttribute(name, newValue);\n          } else {\n            return element.removeAttribute(name);\n          }\n        });\n      }\n      return element;\n    };\n    observeText = function(value) {\n      var element, update;\n      element = document.createTextNode('');\n      update = function(newValue) {\n        return element.nodeValue = newValue;\n      };\n      bindObservable(element, value, context, update);\n      return render(element);\n    };\n    withContext = function(newContext, newContextTop, fn) {\n      var oldContext;\n      oldContext = context;\n      context = newContext;\n      contextTop = newContextTop;\n      try {\n        return fn();\n      } finally {\n        contextTop = void 0;\n        context = oldContext;\n      }\n    };\n    buffer = function(value) {\n      var _ref, _ref1, _ref2;\n      value = Observable(value, context);\n      switch ((_ref = value()) != null ? _ref.nodeType : void 0) {\n        case 1:\n        case 3:\n        case 11:\n          contentBind(top(), value);\n          return value();\n      }\n      switch ((_ref1 = value()) != null ? (_ref2 = _ref1[0]) != null ? _ref2.nodeType : void 0 : void 0) {\n        case 1:\n        case 3:\n        case 11:\n          return contentBind(top(), value);\n      }\n      return observeText(value);\n    };\n    self = {\n      push: push,\n      pop: pop,\n      id: id,\n      classes: classes,\n      attribute: observeAttribute,\n      text: buffer,\n      filter: function(name, content) {},\n      each: function(items, fn) {\n        var elements, parent, replace;\n        items = Observable(items, context);\n        elements = null;\n        parent = lastParent();\n        items.observe(function() {\n          return replace(elements);\n        });\n        replace = function(oldElements) {\n          elements = [];\n          items.each(function(item, index, array) {\n            var element;\n            element = null;\n            withContext(item, parent, function() {\n              return element = fn.call(item, item, index, array);\n            });\n            if (isFragment(element)) {\n              elements.push.apply(elements, element.childNodes);\n            } else {\n              elements.push(element);\n            }\n            parent.appendChild(element);\n            return element;\n          });\n          return oldElements != null ? oldElements.forEach(remove) : void 0;\n        };\n        return replace(null, items);\n      }\n    };\n    return self;\n  };\n\n  Runtime.VERSION = _dereq_(\"../package.json\").version;\n\n  Runtime.Observable = Observable;\n\n  module.exports = Runtime;\n\n  empty = function(node) {\n    var child, _results;\n    _results = [];\n    while (child = node.firstChild) {\n      _results.push(node.removeChild(child));\n    }\n    return _results;\n  };\n\n  valueIndexOf = function(options, value) {\n    if (typeof value === \"object\") {\n      return options.indexOf(value);\n    } else {\n      return options.map(function(option) {\n        return option.toString();\n      }).indexOf(value.toString());\n    }\n  };\n\n  remove = function(element) {\n    var _ref;\n    cleanup(element);\n    if ((_ref = element.parentNode) != null) {\n      _ref.removeChild(element);\n    }\n  };\n\n}).call(this);\n\n},{\"../package.json\":3,\"o_0\":2}],2:[function(_dereq_,module,exports){\n(function (global){\n!function(){var Observable,autoDeps,computeDependencies,copy,extend,flatten,get,last,magicDependency,remove,splat,withBase,__slice=[].slice;Observable=function(value,context){var changed,fn,listeners,notify,notifyReturning,self;if(typeof(value!=null?value.observe:void 0)===\"function\"){return value}listeners=[];notify=function(newValue){return copy(listeners).forEach(function(listener){return listener(newValue)})};if(typeof value===\"function\"){fn=value;self=function(){magicDependency(self);return value};self.each=function(){var args,_ref;args=1<=arguments.length?__slice.call(arguments,0):[];magicDependency(self);return(_ref=splat(value)).forEach.apply(_ref,args)};changed=function(){value=computeDependencies(self,fn,changed,context);return notify(value)};value=computeDependencies(self,fn,changed,context)}else{self=function(newValue){if(arguments.length>0){if(value!==newValue){value=newValue;notify(newValue)}}else{magicDependency(self)}return value}}self.each=function(){var args,_ref;args=1<=arguments.length?__slice.call(arguments,0):[];magicDependency(self);if(value!=null){return(_ref=[value]).forEach.apply(_ref,args)}};if(Array.isArray(value)){[\"concat\",\"every\",\"filter\",\"forEach\",\"indexOf\",\"join\",\"lastIndexOf\",\"map\",\"reduce\",\"reduceRight\",\"slice\",\"some\"].forEach(function(method){return self[method]=function(){var args;args=1<=arguments.length?__slice.call(arguments,0):[];magicDependency(self);return value[method].apply(value,args)}});[\"pop\",\"push\",\"reverse\",\"shift\",\"splice\",\"sort\",\"unshift\"].forEach(function(method){return self[method]=function(){var args;args=1<=arguments.length?__slice.call(arguments,0):[];return notifyReturning(value[method].apply(value,args))}});notifyReturning=function(returnValue){notify(value);return returnValue};extend(self,{each:function(){var args;args=1<=arguments.length?__slice.call(arguments,0):[];self.forEach.apply(self,args);return self},remove:function(object){var index;index=value.indexOf(object);if(index>=0){return notifyReturning(value.splice(index,1)[0])}},get:function(index){return value[index]},first:function(){return value[0]},last:function(){return value[value.length-1]}})}extend(self,{listeners:listeners,observe:function(listener){return listeners.push(listener)},stopObserving:function(fn){return remove(listeners,fn)},toggle:function(){return self(!value)},increment:function(n){return self(value+n)},decrement:function(n){return self(value-n)},toString:function(){return\"Observable(\"+value+\")\"}});return self};Observable.concat=function(){var args,o;args=1<=arguments.length?__slice.call(arguments,0):[];args=Observable(args);o=Observable(function(){return flatten(args.map(splat))});o.push=args.push;return o};module.exports=Observable;extend=function(){var name,source,sources,target,_i,_len;target=arguments[0],sources=2<=arguments.length?__slice.call(arguments,1):[];for(_i=0,_len=sources.length;_i<_len;_i++){source=sources[_i];for(name in source){target[name]=source[name]}}return target};global.OBSERVABLE_ROOT_HACK=[];autoDeps=function(){return last(global.OBSERVABLE_ROOT_HACK)};magicDependency=function(self){var observerStack;if(observerStack=autoDeps()){return observerStack.push(self)}};withBase=function(self,update,fn){var deps,value,_ref;global.OBSERVABLE_ROOT_HACK.push(deps=[]);try{value=fn();if((_ref=self._deps)!=null){_ref.forEach(function(observable){return observable.stopObserving(update)})}self._deps=deps;deps.forEach(function(observable){return observable.observe(update)})}finally{global.OBSERVABLE_ROOT_HACK.pop()}return value};computeDependencies=function(self,fn,update,context){return withBase(self,update,function(){return fn.call(context)})};remove=function(array,value){var index;index=array.indexOf(value);if(index>=0){return array.splice(index,1)[0]}};copy=function(array){return array.concat([])};get=function(arg){if(typeof arg===\"function\"){return arg()}else{return arg}};splat=function(item){var result,results;results=[];if(typeof item.forEach===\"function\"){item.forEach(function(i){return results.push(i)})}else{result=get(item);if(result!=null){results.push(result)}}return results};last=function(array){return array[array.length-1]};flatten=function(array){return array.reduce(function(a,b){return a.concat(b)},[])}}.call(this);\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],3:[function(_dereq_,module,exports){\nmodule.exports={\n  \"name\": \"hamlet-runtime\",\n  \"version\": \"0.6.0-pre.21\",\n  \"devDependencies\": {\n    \"browserify\": \"^4.1.11\",\n    \"coffee-script\": \"~1.7.1\",\n    \"hamlet-compiler\": \"~0.6.0-pre.11\",\n    \"jsdom\": \"^0.10.5\",\n    \"mocha\": \"~1.12.0\",\n    \"uglify-js\": \"~2.3.6\"\n  },\n  \"dependencies\": {\n    \"o_0\": \"^0.3.1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/dr-coffee-labs/hamlet-compiler.git\"\n  },\n  \"scripts\": {\n    \"prepublish\": \"script/prepublish\",\n    \"test\": \"script/test\"\n  },\n  \"files\": [\n    \"dist/\"\n  ],\n  \"main\": \"dist/runtime.js\"\n}\n\n},{}]},{},[1])\n(1)\n});",
      "type": "blob"
    },
    "main": {
      "path": "main",
      "content": "(function() {\n  var Builder, CSON, Deferred, HamletCompiler, arrayToHash, cached, cleanSourceFile, compileCoffee, compileFile, compileStyl, compileTemplate, compilerCache, extend, fileExtension, hamletRuntimePath, stringData, stripMarkdown, styl, withoutExtension,\n    __slice = [].slice;\n\n  CSON = require(\"cson\");\n\n  HamletCompiler = require(\"./lib/hamlet-compiler\");\n\n  hamletRuntimePath = \"lib/hamlet-runtime\";\n\n  styl = require(\"styl\");\n\n  Deferred = $.Deferred;\n\n  stripMarkdown = function(content) {\n    return content.split(\"\\n\").map(function(line) {\n      var match;\n      if (match = /^([ ]{4}|\\t)/.exec(line)) {\n        return line.slice(match[0].length);\n      } else {\n        return \"\";\n      }\n    }).join(\"\\n\");\n  };\n\n  compileTemplate = function(source) {\n    var code;\n    code = HamletCompiler.compile(source, {\n      compiler: CoffeeScript,\n      runtime: \"require(\\\"/\" + hamletRuntimePath + \"\\\")\"\n    });\n    return \"module.exports = \" + code;\n  };\n\n  stringData = function(source) {\n    return \"module.exports = \" + (JSON.stringify(source)) + \";\";\n  };\n\n  compileStyl = function(source) {\n    var styleContent;\n    styleContent = styl(source, {\n      whitespace: true\n    }).toString();\n    return stringData(styleContent);\n  };\n\n  compileCoffee = function(source, path) {\n    return CoffeeScript.compile(source);\n  };\n\n  compileFile = function(_arg) {\n    var content, extension, name, path, result, _ref;\n    path = _arg.path, content = _arg.content;\n    _ref = [withoutExtension(path), fileExtension(path)], name = _ref[0], extension = _ref[1];\n    result = (function() {\n      switch (extension) {\n        case \"js\":\n          return {\n            code: content\n          };\n        case \"json\":\n          return {\n            code: stringData(JSON.parse(content))\n          };\n        case \"cson\":\n          return {\n            code: stringData(CSON.parse(content))\n          };\n        case \"coffee\":\n          return {\n            code: compileCoffee(content, path)\n          };\n        case \"haml\":\n          return {\n            code: compileTemplate(content, name)\n          };\n        case \"styl\":\n          return {\n            code: compileStyl(content)\n          };\n        case \"css\":\n          return {\n            code: stringData(content)\n          };\n        case \"md\":\n          return compileFile({\n            path: name,\n            content: stripMarkdown(content)\n          });\n        default:\n          return {};\n      }\n    })();\n    if (result.name == null) {\n      result.name = name;\n    }\n    if (result.extension == null) {\n      result.extension = extension;\n    }\n    return extend(result, {\n      path: path\n    });\n  };\n\n  Builder = function() {\n    var build, postProcessors;\n    build = function(fileData) {\n      var data, errors, hasHaml, libExists, results;\n      results = fileData.map(function(datum) {\n        var location, message, path;\n        path = datum.path;\n        try {\n          return (cached(compileFile))(datum);\n        } catch (_error) {\n          location = _error.location, message = _error.message;\n          if (location != null) {\n            message = \"Error on line \" + (location.first_line + 1) + \": \" + message;\n          }\n          return {\n            error: \"\" + path + \" - \" + message\n          };\n        }\n      });\n      errors = results.filter(function(result) {\n        return result.error;\n      });\n      data = results.filter(function(result) {\n        return !result.error;\n      });\n      if (errors.length) {\n        return Deferred().reject(errors.map(function(e) {\n          return e.error;\n        }));\n      } else {\n        hasHaml = fileData.some(function(_arg) {\n          var path;\n          path = _arg.path;\n          return path.match(/.*\\.haml(\\..*)?$/);\n        });\n        if (hasHaml) {\n          libExists = data.some(function(_arg) {\n            var name;\n            name = _arg.name;\n            return name === hamletRuntimePath;\n          });\n          if (!libExists) {\n            data.push({\n              name: hamletRuntimePath,\n              code: PACKAGE.distribution[\"lib/hamlet-runtime\"].content\n            });\n          }\n        }\n        return Deferred().resolve(data);\n      }\n    };\n    postProcessors = [];\n    return {\n      addPostProcessor: function(fn) {\n        return postProcessors.push(fn);\n      },\n      build: function(fileData, cache) {\n        if (cache == null) {\n          cache = {};\n        }\n        return build(fileData).then(function(items) {\n          var pkg, results, source;\n          results = items.filter(function(item) {\n            return item.code;\n          }).map(function(item) {\n            return {\n              path: item.name,\n              content: item.code,\n              type: \"blob\"\n            };\n          });\n          source = arrayToHash(fileData.map(cleanSourceFile));\n          pkg = {\n            source: source,\n            distribution: arrayToHash(results)\n          };\n          postProcessors.forEach(function(fn) {\n            return fn(pkg);\n          });\n          return pkg;\n        });\n      }\n    };\n  };\n\n  module.exports = Builder;\n\n  compilerCache = {};\n\n  cached = function(compileFn) {\n    return function(data) {\n      var content, key, path, sha;\n      path = data.path, sha = data.sha, content = data.content;\n      if (sha) {\n        key = \"\" + path + \":\" + sha;\n        return compilerCache[key] || (compilerCache[key] = compileFn(data));\n      } else {\n        return compileFn(data);\n      }\n    };\n  };\n\n  cleanSourceFile = function(_arg) {\n    var content, mode, path, type;\n    path = _arg.path, content = _arg.content, mode = _arg.mode, type = _arg.type;\n    return {\n      path: path,\n      content: content,\n      mode: mode,\n      type: type\n    };\n  };\n\n  arrayToHash = function(array) {\n    return array.reduce(function(hash, file) {\n      hash[file.path] = file;\n      return hash;\n    }, {});\n  };\n\n  extend = function() {\n    var name, source, sources, target, _i, _len;\n    target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_i = 0, _len = sources.length; _i < _len; _i++) {\n      source = sources[_i];\n      for (name in source) {\n        target[name] = source[name];\n      }\n    }\n    return target;\n  };\n\n  fileExtension = function(str) {\n    var match;\n    if (match = str.match(/\\.([^\\.]*)$/, '')) {\n      return match[match.length - 1];\n    } else {\n      return '';\n    }\n  };\n\n  withoutExtension = function(str) {\n    return str.replace(/\\.[^\\.]*$/, \"\");\n  };\n\n}).call(this);\n",
      "type": "blob"
    },
    "pixie": {
      "path": "pixie",
      "content": "module.exports = {\"version\":\"0.4.1\",\"entryPoint\":\"main\",\"remoteDependencies\":[\"https://code.jquery.com/jquery-1.11.0.min.js\",\"https://cdnjs.cloudflare.com/ajax/libs/coffee-script/1.7.1/coffee-script.min.js\"],\"dependencies\":{\"cson\":\"distri/cson:v0.1.0\",\"styl\":\"distri/styl:v0.2.8\"}};",
      "type": "blob"
    },
    "samples/haml": {
      "path": "samples/haml",
      "content": "module.exports = (function(data) {\n  return (function() {\n    var __runtime;\n    __runtime = require(\"/lib/hamlet-runtime\")(this);\n    __runtime.push(document.createDocumentFragment());\n    __runtime.push(document.createElement(\"h1\"));\n    __runtime.text(\"Super cool sample\\n\");\n    __runtime.pop();\n    __runtime.text(\"yo/lo\");\n    return __runtime.pop();\n  }).call(data);\n});\n",
      "type": "blob"
    },
    "samples/styl": {
      "path": "samples/styl",
      "content": "module.exports = \"body {\\n  color: green;\\n}\";",
      "type": "blob"
    },
    "test/builder": {
      "path": "test/builder",
      "content": "(function() {\n  var Builder;\n\n  global.require = require;\n\n  global.PACKAGE = PACKAGE;\n\n  Builder = require(\"../main\");\n\n  describe(\"Builder\", function() {\n    it(\"should exist\", function() {\n      return assert(Builder);\n    });\n    it(\"should build haml\", function(done) {\n      var builder, fileData;\n      builder = Builder();\n      fileData = [PACKAGE.source[\"samples/haml.haml\"]];\n      return builder.build(fileData).then(function(result) {\n        assert(result.distribution[\"lib/hamlet-runtime\"].content);\n        assert(result.distribution[\"samples/haml\"].content);\n        return done();\n      }, function(errors) {\n        throw errors[0];\n      });\n    });\n    it(\"should build styl\", function(done) {\n      var builder, fileData;\n      builder = Builder();\n      fileData = [PACKAGE.source[\"samples/styl.styl\"]];\n      return builder.build(fileData).then(function(result) {\n        assert(result.distribution[\"samples/styl\"].content);\n        return done();\n      }, function(errors) {\n        throw errors[0];\n      });\n    });\n    it(\"should have the Hamlet runtime\", function() {\n      return assert(require(\"/lib/hamlet-runtime\"));\n    });\n    return it(\"should have the Hamlet compiler\", function() {\n      return assert(require(\"/lib/hamlet-runtime\"));\n    });\n  });\n\n}).call(this);\n",
      "type": "blob"
    }
  },
  "progenitor": {
    "url": "http://www.danielx.net/editor/"
  },
  "version": "0.4.1",
  "entryPoint": "main",
  "remoteDependencies": [
    "https://code.jquery.com/jquery-1.11.0.min.js",
    "https://cdnjs.cloudflare.com/ajax/libs/coffee-script/1.7.1/coffee-script.min.js"
  ],
  "repository": {
    "branch": "v0.4.1",
    "default_branch": "master",
    "full_name": "distri/builder",
    "homepage": null,
    "description": "A builder for distri apps.",
    "html_url": "https://github.com/distri/builder",
    "url": "https://api.github.com/repos/distri/builder",
    "publishBranch": "gh-pages"
  },
  "dependencies": {
    "cson": {
      "source": {
        "LICENSE": {
          "path": "LICENSE",
          "mode": "100644",
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 distri\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
          "type": "blob"
        },
        "pixie.cson": {
          "path": "pixie.cson",
          "mode": "100644",
          "content": "entryPoint: \"README\"\nversion: \"0.1.0\"\nremoteDependencies: [\n  \"https://cdnjs.cloudflare.com/ajax/libs/coffee-script/1.6.3/coffee-script.min.js\"\n]\n",
          "type": "blob"
        },
        "README.coffee.md": {
          "path": "README.coffee.md",
          "mode": "100644",
          "content": "CSON\n====\n\nCoffeeScript Object Notation implemented in the hackiest way.\n\nOne downside is that it currently depends on the CoffeeScript compiler when it \nshould be a simple parser of its own.\n\n    module.exports =\n      parse: (source) ->\n        Function(\"return #{CoffeeScript.compile(source, bare: true)}\")()\n\nThis really needs to be improved. To do it correctly we'd need to detect\nobject/array values and indent while moving them to separate lines. Single\nvalues would exist without newlines or indentation. CSON.stringify would be\ncalled recursively.\n\nThe current hack of using JSON works because JSON is valid CSON.\n\nTODO: Escape keys that need it.\n\n      stringify: (object) ->\n        representation = JSON.parse(JSON.stringify(obj))\n\n        Object.keys(representation).map (key) ->\n          value = representation[key]\n          \"#{key}: #{JSON.stringify(value)}\"\n        .join(\"\\n\")\n",
          "type": "blob"
        },
        "test/cson.coffee": {
          "path": "test/cson.coffee",
          "mode": "100644",
          "content": "CSON = require \"../README\"\n\ndescribe \"CSON\", ->\n  it \"should parse\", ->\n    result = CSON.parse \"\"\"\n      hello: \"duder\"\n    \"\"\"\n\n    assert result.hello\n    assert.equal result.hello, \"duder\"\n\n  it \"should allow comments\", ->\n    result = CSON.parse \"\"\"\n      # Some comment\n      hey: \"yolo\" # Fo 'sho!\n    \"\"\"\n\n    assert.equal result.hey, \"yolo\"\n",
          "type": "blob"
        }
      },
      "distribution": {
        "pixie": {
          "path": "pixie",
          "content": "module.exports = {\"entryPoint\":\"README\",\"version\":\"0.1.0\",\"remoteDependencies\":[\"https://cdnjs.cloudflare.com/ajax/libs/coffee-script/1.6.3/coffee-script.min.js\"]};",
          "type": "blob"
        },
        "README": {
          "path": "README",
          "content": "(function() {\n  module.exports = {\n    parse: function(source) {\n      return Function(\"return \" + (CoffeeScript.compile(source, {\n        bare: true\n      })))();\n    },\n    stringify: function(object) {\n      var representation;\n      representation = JSON.parse(JSON.stringify(obj));\n      return Object.keys(representation).map(function(key) {\n        var value;\n        value = representation[key];\n        return \"\" + key + \": \" + (JSON.stringify(value));\n      }).join(\"\\n\");\n    }\n  };\n\n}).call(this);\n\n//# sourceURL=README.coffee",
          "type": "blob"
        },
        "test/cson": {
          "path": "test/cson",
          "content": "(function() {\n  var CSON;\n\n  CSON = require(\"../README\");\n\n  describe(\"CSON\", function() {\n    it(\"should parse\", function() {\n      var result;\n      result = CSON.parse(\"hello: \\\"duder\\\"\");\n      assert(result.hello);\n      return assert.equal(result.hello, \"duder\");\n    });\n    return it(\"should allow comments\", function() {\n      var result;\n      result = CSON.parse(\"# Some comment\\nhey: \\\"yolo\\\" # Fo 'sho!\");\n      return assert.equal(result.hey, \"yolo\");\n    });\n  });\n\n}).call(this);\n\n//# sourceURL=test/cson.coffee",
          "type": "blob"
        }
      },
      "progenitor": {
        "url": "http://strd6.github.io/editor/"
      },
      "version": "0.1.0",
      "entryPoint": "README",
      "remoteDependencies": [
        "https://cdnjs.cloudflare.com/ajax/libs/coffee-script/1.6.3/coffee-script.min.js"
      ],
      "repository": {
        "id": 16653973,
        "name": "cson",
        "full_name": "distri/cson",
        "owner": {
          "login": "distri",
          "id": 6005125,
          "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
          "gravatar_id": null,
          "url": "https://api.github.com/users/distri",
          "html_url": "https://github.com/distri",
          "followers_url": "https://api.github.com/users/distri/followers",
          "following_url": "https://api.github.com/users/distri/following{/other_user}",
          "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
          "organizations_url": "https://api.github.com/users/distri/orgs",
          "repos_url": "https://api.github.com/users/distri/repos",
          "events_url": "https://api.github.com/users/distri/events{/privacy}",
          "received_events_url": "https://api.github.com/users/distri/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/distri/cson",
        "description": "CoffeeScript Object Notation implemented in the hackiest way.",
        "fork": false,
        "url": "https://api.github.com/repos/distri/cson",
        "forks_url": "https://api.github.com/repos/distri/cson/forks",
        "keys_url": "https://api.github.com/repos/distri/cson/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/distri/cson/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/distri/cson/teams",
        "hooks_url": "https://api.github.com/repos/distri/cson/hooks",
        "issue_events_url": "https://api.github.com/repos/distri/cson/issues/events{/number}",
        "events_url": "https://api.github.com/repos/distri/cson/events",
        "assignees_url": "https://api.github.com/repos/distri/cson/assignees{/user}",
        "branches_url": "https://api.github.com/repos/distri/cson/branches{/branch}",
        "tags_url": "https://api.github.com/repos/distri/cson/tags",
        "blobs_url": "https://api.github.com/repos/distri/cson/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/distri/cson/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/distri/cson/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/distri/cson/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/distri/cson/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/distri/cson/languages",
        "stargazers_url": "https://api.github.com/repos/distri/cson/stargazers",
        "contributors_url": "https://api.github.com/repos/distri/cson/contributors",
        "subscribers_url": "https://api.github.com/repos/distri/cson/subscribers",
        "subscription_url": "https://api.github.com/repos/distri/cson/subscription",
        "commits_url": "https://api.github.com/repos/distri/cson/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/distri/cson/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/distri/cson/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/distri/cson/issues/comments/{number}",
        "contents_url": "https://api.github.com/repos/distri/cson/contents/{+path}",
        "compare_url": "https://api.github.com/repos/distri/cson/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/distri/cson/merges",
        "archive_url": "https://api.github.com/repos/distri/cson/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/distri/cson/downloads",
        "issues_url": "https://api.github.com/repos/distri/cson/issues{/number}",
        "pulls_url": "https://api.github.com/repos/distri/cson/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/distri/cson/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/distri/cson/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/distri/cson/labels{/name}",
        "releases_url": "https://api.github.com/repos/distri/cson/releases{/id}",
        "created_at": "2014-02-08T21:52:30Z",
        "updated_at": "2014-02-08T21:52:30Z",
        "pushed_at": "2014-02-08T21:52:30Z",
        "git_url": "git://github.com/distri/cson.git",
        "ssh_url": "git@github.com:distri/cson.git",
        "clone_url": "https://github.com/distri/cson.git",
        "svn_url": "https://github.com/distri/cson",
        "homepage": null,
        "size": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": null,
        "has_issues": true,
        "has_downloads": true,
        "has_wiki": true,
        "forks_count": 0,
        "mirror_url": null,
        "open_issues_count": 0,
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "master",
        "master_branch": "master",
        "permissions": {
          "admin": true,
          "push": true,
          "pull": true
        },
        "organization": {
          "login": "distri",
          "id": 6005125,
          "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
          "gravatar_id": null,
          "url": "https://api.github.com/users/distri",
          "html_url": "https://github.com/distri",
          "followers_url": "https://api.github.com/users/distri/followers",
          "following_url": "https://api.github.com/users/distri/following{/other_user}",
          "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
          "organizations_url": "https://api.github.com/users/distri/orgs",
          "repos_url": "https://api.github.com/users/distri/repos",
          "events_url": "https://api.github.com/users/distri/events{/privacy}",
          "received_events_url": "https://api.github.com/users/distri/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "network_count": 0,
        "subscribers_count": 2,
        "branch": "v0.1.0",
        "defaultBranch": "master"
      },
      "dependencies": {}
    },
    "styl": {
      "source": {
        "LICENSE": {
          "path": "LICENSE",
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n",
          "mode": "100644",
          "type": "blob"
        },
        "README.md": {
          "path": "README.md",
          "content": "styl\n====\n\nWrapper for styl\n",
          "mode": "100644",
          "type": "blob"
        },
        "lib/styl.js": {
          "path": "lib/styl.js",
          "content": "\n/**\n * Require the given path.\n *\n * @param {String} path\n * @return {Object} exports\n * @api public\n */\n\nfunction require(path, parent, orig) {\n  var resolved = require.resolve(path);\n\n  // lookup failed\n  if (null == resolved) {\n    orig = orig || path;\n    parent = parent || 'root';\n    var err = new Error('Failed to require \"' + orig + '\" from \"' + parent + '\"');\n    err.path = orig;\n    err.parent = parent;\n    err.require = true;\n    throw err;\n  }\n\n  var module = require.modules[resolved];\n\n  // perform real require()\n  // by invoking the module's\n  // registered function\n  if (!module.exports) {\n    module.exports = {};\n    module.client = module.component = true;\n    module.call(this, module.exports, require.relative(resolved), module);\n  }\n\n  return module.exports;\n}\n\n/**\n * Registered modules.\n */\n\nrequire.modules = {};\n\n/**\n * Registered aliases.\n */\n\nrequire.aliases = {};\n\n/**\n * Resolve `path`.\n *\n * Lookup:\n *\n *   - PATH/index.js\n *   - PATH.js\n *   - PATH\n *\n * @param {String} path\n * @return {String} path or null\n * @api private\n */\n\nrequire.resolve = function(path) {\n  if (path.charAt(0) === '/') path = path.slice(1);\n\n  var paths = [\n    path,\n    path + '.js',\n    path + '.json',\n    path + '/index.js',\n    path + '/index.json'\n  ];\n\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    if (require.modules.hasOwnProperty(path)) return path;\n    if (require.aliases.hasOwnProperty(path)) return require.aliases[path];\n  }\n};\n\n/**\n * Normalize `path` relative to the current path.\n *\n * @param {String} curr\n * @param {String} path\n * @return {String}\n * @api private\n */\n\nrequire.normalize = function(curr, path) {\n  var segs = [];\n\n  if ('.' != path.charAt(0)) return path;\n\n  curr = curr.split('/');\n  path = path.split('/');\n\n  for (var i = 0; i < path.length; ++i) {\n    if ('..' == path[i]) {\n      curr.pop();\n    } else if ('.' != path[i] && '' != path[i]) {\n      segs.push(path[i]);\n    }\n  }\n\n  return curr.concat(segs).join('/');\n};\n\n/**\n * Register module at `path` with callback `definition`.\n *\n * @param {String} path\n * @param {Function} definition\n * @api private\n */\n\nrequire.register = function(path, definition) {\n  require.modules[path] = definition;\n};\n\n/**\n * Alias a module definition.\n *\n * @param {String} from\n * @param {String} to\n * @api private\n */\n\nrequire.alias = function(from, to) {\n  if (!require.modules.hasOwnProperty(from)) {\n    throw new Error('Failed to alias \"' + from + '\", it does not exist');\n  }\n  require.aliases[to] = from;\n};\n\n/**\n * Return a require function relative to the `parent` path.\n *\n * @param {String} parent\n * @return {Function}\n * @api private\n */\n\nrequire.relative = function(parent) {\n  var p = require.normalize(parent, '..');\n\n  /**\n   * lastIndexOf helper.\n   */\n\n  function lastIndexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * The relative require() itself.\n   */\n\n  function localRequire(path) {\n    var resolved = localRequire.resolve(path);\n    return require(resolved, parent, path);\n  }\n\n  /**\n   * Resolve relative to the parent.\n   */\n\n  localRequire.resolve = function(path) {\n    var c = path.charAt(0);\n    if ('/' == c) return path.slice(1);\n    if ('.' == c) return require.normalize(p, path);\n\n    // resolve deps by returning\n    // the dep in the nearest \"deps\"\n    // directory\n    var segs = parent.split('/');\n    var i = lastIndexOf(segs, 'deps') + 1;\n    if (!i) i = 0;\n    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;\n    return path;\n  };\n\n  /**\n   * Check if module is defined at `path`.\n   */\n\n  localRequire.exists = function(path) {\n    return require.modules.hasOwnProperty(localRequire.resolve(path));\n  };\n\n  return localRequire;\n};\nrequire.register(\"visionmedia-debug/index.js\", function(exports, require, module){\nif ('undefined' == typeof window) {\n  module.exports = require('./lib/debug');\n} else {\n  module.exports = require('./debug');\n}\n\n});\nrequire.register(\"visionmedia-debug/debug.js\", function(exports, require, module){\n\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\nif (window.localStorage) debug.enable(localStorage.debug);\n\n});\nrequire.register(\"visionmedia-css-whitespace/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar parse = require('./lib/parser');\nvar compile = require('./lib/compiler');\n\n/**\n * Compile a whitespace significant\n * `str` of CSS to the valid CSS\n * equivalent.\n *\n * @param {String} str\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(str){\n  return compile(parse(str));\n};\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/compiler.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('css-whitespace:parser');\n\n/**\n * Compile the given `node`.\n *\n * @param {Array} node\n * @return {String}\n * @api private\n */\n\nmodule.exports = function(node){\n  var indents = 0;\n  var rules = [];\n  var stash = [];\n  var level = 0;\n  var nest = 0;\n\n  if (debug.enabled) {\n    var util = require('util');\n    console.log(util.inspect(node, false, 12, true));\n  }\n\n  return visit(node);\n\n  /**\n   * Visit `node`.\n   */\n\n  function visit(node) {\n    switch (node[0]) {\n      case 'root':\n        return root(node);\n      case 'rule':\n        if ('@' == node[1][0][0]) ++nest;\n        var ret = rule(node);\n        if ('@' == node[1][0][0]) --nest;\n        return ret;\n      case 'block':\n        ++level;\n        var ret = block(node);\n        --level;\n        return ret;\n      case 'prop':\n        return prop(node);\n      case 'comment':\n        return comment(node);\n      default:\n        throw new Error('invalid node \"' + node[0] + '\"');\n    }\n  }\n\n  /**\n   * Visit block.\n   */\n\n  function block(node) {\n    var buf = [];\n    var nodes = node[1];\n\n    for (var i = 0; i < nodes.length; ++i) {\n      buf.push(visit(nodes[i]));\n    }\n\n    return buf.join('');\n  }\n\n  /**\n   * Visit comment.\n   */\n\n  function comment(node) {\n    return indent() + '/*' + node[1] + '*/\\n';\n  }\n\n  /**\n   * Visit prop.\n   */\n\n  function prop(node) {\n    var prop = node[1];\n    var val = node[2];\n    return indent() + prop + ': ' + val + ';\\n';\n  }\n\n  /**\n   * Visit rule.\n   */\n\n  function rule(node) {\n    var font = '@font-face' == node[1][0].trim();\n    var rule = node[1];\n    var block = node[2];\n    var buf = '';\n\n    if (!block) return rule.join('') + ';';\n\n    rules.push(node);\n\n    if ('@' == rule[0][0] && !font) {\n      buf = join(rules) + ' {\\n';\n      visit(block);\n      buf += stash.join('\\n');\n      buf += '\\n}';\n      stash = [];\n    } else if (nest && !font) {\n      indents = 1;\n      buf = join(rules, 1) + ' {\\n';\n      indents = 2;\n      buf += visit(block);\n      buf += '  }';\n      indents = 1;\n    } else {\n      indents = 0;\n      buf = join(rules) + ' {\\n'\n      indents = 1;\n      buf += visit(block);\n      indents = 0;\n      buf += '}';\n      if (!hasProperties(block)) buf = '';\n    }\n\n    if (rules.length > 1) {\n      if (hasProperties(block)) stash.push(buf);\n      buf = '';\n    }\n\n    rules.pop();\n\n    return buf;\n  }\n\n  /**\n   * Visit root.\n   */\n\n  function root(node) {\n    var buf = [];\n    for (var i = 0; i < node[1].length; ++i) {\n      buf.push(visit(node[1][i]));\n      if (stash.length) {\n        buf = buf.concat(stash);\n        stash = [];\n      }\n    }\n    return buf.join('\\n\\n');\n  }\n\n  /**\n   * Join the given rules.\n   *\n   * @param {Array} rules\n   * @param {Number} [offset]\n   * @return {String}\n   * @api private\n   */\n\n  function join(rules, offset) {\n    offset = offset || 0;\n    var selectors = [];\n    var buf = [];\n    var curr;\n    var next;\n\n    function compile(rules, i) {\n      if (offset != i) {\n        rules[i][1].forEach(function(selector){\n          var parent = ~selector.indexOf('&');\n          selector = selector.replace('&', '');\n          buf.unshift(parent ? selector : ' ' + selector);\n          compile(rules, i - 1);\n          buf.shift();\n        });\n      } else {\n        rules[i][1].forEach(function(selector){\n          var tail = buf.join('');\n          selectors.push(indent() + selector + tail);\n        });\n      }\n    }\n\n    compile(rules, rules.length - 1);\n\n    return selectors.join(',\\n');\n  }\n\n  /**\n   * Return indent.\n   */\n\n  function indent() {\n    return Array(indents + 1).join('  ');\n  }\n};\n\n/**\n * Check if `block` has properties.\n *\n * @param {Array} block\n * @return {Boolean}\n * @api private\n */\n\nfunction hasProperties(block) {\n  var nodes = block[1];\n  for (var i = 0; i < nodes.length; ++i) {\n    if ('prop' == nodes[i][0]) return true;\n  }\n  return false;\n}\n\n/**\n * Blank string filter.\n *\n * @api private\n */\n\nfunction blank(str) {\n  return '' != str;\n}\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/lexer.js\", function(exports, require, module){\n\n/**\n * Pesudo selectors.\n */\n\nvar pseudos = [\n  ':selection',\n  'fullscreen',\n  'nth-child',\n  'first-child',\n  'last-child',\n  'link',\n  'visited',\n  'hover',\n  'active',\n  'focus',\n  'first-letter',\n  'first-line',\n  'before',\n  'after',\n  'lang',\n  'enabled',\n  'disabled',\n  'only-child',\n  'only-of-type',\n  'first-of-type',\n  'last-of-type',\n  'nth-last-of-type',\n  'nth-of-type',\n  'root',\n  'empty',\n  'target',\n  'not',\n  '-o',\n  '-ms',\n  '-moz',\n  '-webkit'\n]\n\n/**\n * Property regexp.\n */\n\npseudos = pseudos.join('|');\nvar propre = new RegExp('^ *([-\\\\w]+):(?!' + pseudos + ') *([^\\n]*)');\n\n/**\n * Scan the given `str` returning tokens.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nmodule.exports = function(str) {\n  var indents = [0];\n  var stash = [];\n\n  // strip blanks\n  str = str.replace(/\\r/g, '');\n  str = str.replace(/\\n\\s*\\n/gm, '\\n');\n\n  return scan();\n\n  /**\n   * tok+\n   */\n\n  function scan() {\n    var toks = []\n      , curr;\n\n    while (str.length) {\n      curr = next();\n      curr && toks.push(curr);\n      if (str.length && !curr) {\n        throw new Error('syntax error near \"' + str.slice(0, 10) + '\"');\n      }\n    }\n\n    toks = toks.concat(stash);\n    while (indents.pop()) toks.push(['outdent']);\n    toks.push(['eos']);\n    return toks;\n  }\n\n  /**\n   *   eos\n   * | indentation\n   * | rule\n   */\n\n  function next() {\n    return stashed()\n      || comment()\n      || csscomment()\n      || indentation()\n      || prop()\n      || rule();\n  }\n\n  /**\n   * Deferred tokens.\n   */\n\n  function stashed() {\n    return stash.shift();\n  }\n\n  /**\n   * Comment.\n   */\n\n  function comment() {\n    var m = str.match(/^\\/\\/([^\\n]*)/);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    return next();\n  }\n\n  /**\n   * Multiline comment.\n   */\n\n  function csscomment() {\n    if ('/' != str[0] || '*' != str[1]) return;\n    str = str.slice(2);\n\n    var i = 0;\n    while ('*' != str[i] && '/' != str[i + 1]) ++i;\n\n    var buf = str.slice(0, i);\n    str = str.slice(buf.length + 2);\n\n    return ['comment', buf];\n  }\n\n  /**\n   *   INDENT\n   * | OUTDENT\n   */\n\n  function indentation() {\n    var spaces = str.match(/^\\n( *)/);\n    if (!spaces) return;\n    str = str.slice(spaces[0].length);\n    spaces = spaces[1].length;\n    var prev = indents[indents.length - 1];\n\n    // INDENT\n    if (spaces > prev) return indent(spaces);\n\n    // OUTDENT\n    if (spaces < prev) return outdent(spaces);\n\n    return next();\n  }\n\n  /**\n   * Indent.\n   */\n\n  function indent(spaces) {\n    indents.push(spaces);\n    return ['indent'];\n  }\n\n  /**\n   * Outdent.\n   */\n\n  function outdent(spaces) {\n    while (indents[indents.length - 1] > spaces) {\n      indents.pop();\n      stash.push(['outdent']);\n    }\n    return stashed();\n  }\n\n  /**\n   * Property.\n   */\n\n  function prop() {\n    var m = str.match(propre);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    return ['prop', m[1], m[2]];\n  }\n\n  /**\n   * Rule.\n   */\n\n  function rule() {\n    var m = str.match(/^([^\\n,]+, *\\n|[^\\n]+)+/);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    m = m[0].split(/\\s*,\\s*/);\n    return ['rule', m];\n  }\n}\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/parser.js\", function(exports, require, module){\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('css-whitespace:lexer');\nvar scan = require('./lexer');\n\n/**\n * Parse the given `str`, returning an AST.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nmodule.exports = function(str) {\n  var toks = scan(str);\n\n  if (debug.enabled) {\n    var util = require('util');\n    console.log(util.inspect(toks, false, 12, true));\n  }\n\n  return stmts();\n\n  /**\n   * Grab the next token.\n   */\n\n  function next() {\n    return toks.shift();\n  }\n\n  /**\n   * Check if the next token is `type`.\n   */\n\n  function is(type) {\n    if (type == toks[0][0]) return true;\n  }\n\n  /**\n   * Expect `type` or throw.\n   */\n\n  function expect(type) {\n    if (is(type)) return next();\n    throw new Error('expected \"' + type + '\", but got \"' + toks[0][0] + '\"');\n  }\n\n  /**\n   * stmt+\n   */\n\n  function stmts() {\n    var stmts = [];\n    while (!is('eos')) stmts.push(stmt());\n    return ['root', stmts];\n  }\n\n  /**\n   * INDENT stmt+ OUTDENT\n   */\n\n  function block() {\n    var props = [];\n    expect('indent');\n    while (!is('outdent')) props.push(stmt());\n    expect('outdent');\n    return ['block', props];\n  }\n\n  /**\n   *   rule\n   * | prop\n   */\n\n  function stmt() {\n    if (is('rule')) return rule();\n    if (is('prop')) return prop();\n    return next();\n  }\n\n  /**\n   *   prop\n   * | prop INDENT rule* OUTDENT\n   */\n\n  function prop() {\n    var prop = next();\n    if (is('indent')) {\n      next();\n      while (!is('outdent')) {\n        var tok = next();\n        prop[2] += ' ' + tok[1].join(', ');\n      }\n      expect('outdent');\n    }\n    return prop;\n  }\n\n  /**\n   * rule block?\n   */\n\n  function rule() {\n    var rule = next();\n    if (is('indent')) rule.push(block());\n    return rule;\n  }\n}\n\n});\nrequire.register(\"visionmedia-css-parse/index.js\", function(exports, require, module){\n\nmodule.exports = function(css, options){\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   */\n\n  function updatePosition(str) {\n    var lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf('\\n');\n    column = ~i ? str.length-i : column + str.length;\n  }\n\n  function position() {\n    var start = { line: lineno, column: column };\n    if (!options.position) return positionNoop;\n    return function(node){\n      node.position = {\n        start: start,\n        end: { line: lineno, column: column }\n      };\n      whitespace();\n      return node;\n    }\n  }\n\n  /**\n   * Return `node`.\n   */\n  function positionNoop(node) {\n    whitespace();\n    return node;\n  }\n\n  /**\n   * Parse stylesheet.\n   */\n\n  function stylesheet() {\n    return {\n      type: 'stylesheet',\n      stylesheet: {\n        rules: rules()\n      }\n    };\n  }\n\n  /**\n   * Opening brace.\n   */\n\n  function open() {\n    return match(/^{\\s*/);\n  }\n\n  /**\n   * Closing brace.\n   */\n\n  function close() {\n    return match(/^}/);\n  }\n\n  /**\n   * Parse ruleset.\n   */\n\n  function rules() {\n    var node;\n    var rules = [];\n    whitespace();\n    comments(rules);\n    while (css[0] != '}' && (node = atrule() || rule())) {\n      rules.push(node);\n      comments(rules);\n    }\n    return rules;\n  }\n\n  /**\n   * Match `re` and return captures.\n   */\n\n  function match(re) {\n    var m = re.exec(css);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n\n  function whitespace() {\n    match(/^\\s*/);\n  }\n\n  /**\n   * Parse comments;\n   */\n\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while (c = comment()) rules.push(c);\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   */\n\n  function comment() {\n    var pos = position();\n    if ('/' != css[0] || '*' != css[1]) return;\n\n    var i = 2;\n    while (null != css[i] && ('*' != css[i] || '/' != css[i + 1])) ++i;\n    i += 2;\n\n    var str = css.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i);\n    column += 2;\n    return pos({\n      type: 'comment',\n      comment: str\n    });\n  }\n\n  /**\n   * Parse selector.\n   */\n\n  function selector() {\n    var m = match(/^([^{]+)/);\n    if (!m) return;\n    return m[0].trim().split(/\\s*,\\s*/);\n  }\n\n  /**\n   * Parse declaration.\n   */\n\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(/^(\\*?[-\\w]+)\\s*/);\n    if (!prop) return;\n    prop = prop[0];\n\n    // :\n    if (!match(/^:\\s*/)) return;\n\n    // val\n    var val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n    if (!val) return;\n\n    var ret = pos({\n      type: 'declaration',\n      property: prop,\n      value: val[0].trim()\n    });\n\n    // ;\n    match(/^[;\\s]*/);\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   */\n\n  function declarations() {\n    var decls = [];\n\n    if (!open()) return;\n    comments(decls);\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      comments(decls);\n    }\n\n    if (!close()) return;\n    return decls;\n  }\n\n  /**\n   * Parse keyframe.\n   */\n\n  function keyframe() {\n    var m;\n    var vals = [];\n    var pos = position();\n\n    while (m = match(/^(from|to|\\d+%|\\.\\d+%|\\d+\\.\\d+%)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (!vals.length) return;\n\n    return pos({\n      type: 'keyframe',\n      values: vals,\n      declarations: declarations()\n    });\n  }\n\n  /**\n   * Parse keyframes.\n   */\n\n  function atkeyframes() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?keyframes */);\n\n    if (!m) return;\n    var vendor = m[1];\n\n    // identifier\n    var m = match(/^([-\\w]+)\\s*/);\n    if (!m) return;\n    var name = m[1];\n\n    if (!open()) return;\n    comments();\n\n    var frame;\n    var frames = [];\n    while (frame = keyframe()) {\n      frames.push(frame);\n      comments();\n    }\n\n    if (!close()) return;\n\n    return pos({\n      type: 'keyframes',\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    });\n  }\n\n  /**\n   * Parse supports.\n   */\n\n  function atsupports() {\n    var pos = position();\n    var m = match(/^@supports *([^{]+)/);\n\n    if (!m) return;\n    var supports = m[1].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'supports',\n      supports: supports,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse media.\n   */\n\n  function atmedia() {\n    var pos = position();\n    var m = match(/^@media *([^{]+)/);\n\n    if (!m) return;\n    var media = m[1].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'media',\n      media: media,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse paged media.\n   */\n\n  function atpage() {\n    var pos = position();\n    var m = match(/^@page */);\n    if (!m) return;\n\n    var sel = selector() || [];\n    var decls = [];\n\n    if (!open()) return;\n    comments();\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      comments();\n    }\n\n    if (!close()) return;\n\n    return pos({\n      type: 'page',\n      selectors: sel,\n      declarations: decls\n    });\n  }\n\n  /**\n   * Parse document.\n   */\n\n  function atdocument() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) return;\n\n    var vendor = m[1].trim();\n    var doc = m[2].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'document',\n      document: doc,\n      vendor: vendor,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse import\n   */\n\n  function atimport() {\n    return _atrule('import');\n  }\n\n  /**\n   * Parse charset\n   */\n\n  function atcharset() {\n    return _atrule('charset');\n  }\n\n  /**\n   * Parse namespace\n   */\n\n  function atnamespace() {\n    return _atrule('namespace')\n  }\n\n  /**\n   * Parse non-block at-rules\n   */\n\n  function _atrule(name) {\n    var pos = position();\n    var m = match(new RegExp('^@' + name + ' *([^;\\\\n]+);'));\n    if (!m) return;\n    var ret = { type: name };\n    ret[name] = m[1].trim();\n    return pos(ret);\n  }\n\n  /**\n   * Parse at rule.\n   */\n\n  function atrule() {\n    return atkeyframes()\n      || atmedia()\n      || atsupports()\n      || atimport()\n      || atcharset()\n      || atnamespace()\n      || atdocument()\n      || atpage();\n  }\n\n  /**\n   * Parse rule.\n   */\n\n  function rule() {\n    var pos = position();\n    var sel = selector();\n\n    if (!sel) return;\n    comments();\n\n    return pos({\n      type: 'rule',\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n\n  return stylesheet();\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar Compressed = require('./lib/compress');\nvar Identity = require('./lib/identity');\n\n/**\n * Stringfy the given AST `node`.\n *\n * @param {Object} node\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(node, options){\n  if (options.compress) {\n    return new Compressed(options).compile(node);\n  }\n\n  return new Identity(options).compile(node);\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/lib/compress.js\", function(exports, require, module){\n\n/**\n * Expose compiler.\n */\n\nmodule.exports = Compiler;\n\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n}\n\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function(node){\n  return node.stylesheet\n    .rules.map(this.visit, this)\n    .join('');\n};\n\n/**\n * Visit `node`.\n */\n\nCompiler.prototype.visit = function(node){\n  return this[node.type](node);\n};\n\n/**\n * Visit comment node.\n */\n\nCompiler.prototype.comment = function(node){\n  if (this.compress) return '';\n};\n\n/**\n * Visit import node.\n */\n\nCompiler.prototype.import = function(node){\n  return '@import ' + node.import + ';';\n};\n\n/**\n * Visit media node.\n */\n\nCompiler.prototype.media = function(node){\n  return '@media '\n    + node.media\n    + '{'\n    + node.rules.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit document node.\n */\n\nCompiler.prototype.document = function(node){\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n\n  return doc\n    + '{'\n    + node.rules.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit charset node.\n */\n\nCompiler.prototype.charset = function(node){\n  return '@charset ' + node.charset + ';';\n};\n\n/**\n * Visit supports node.\n */\n\nCompiler.prototype.supports = function(node){\n  return '@supports '\n    + node.supports\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit keyframes node.\n */\n\nCompiler.prototype.keyframes = function(node){\n  return '@'\n    + (node.vendor || '')\n    + 'keyframes '\n    + node.name\n    + '{'\n    + node.keyframes.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit keyframe node.\n */\n\nCompiler.prototype.keyframe = function(node){\n  var decls = node.declarations;\n\n  return node.values.join(',')\n    + '{'\n    + decls.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit page node.\n */\n\nCompiler.prototype.page = function(node){\n  var sel = node.selectors.length\n    ? node.selectors.join(', ') + ' '\n    : '';\n\n  return '@page ' + sel\n    + '{\\n'\n    + this.indent(1)\n    + node.declarations.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit rule node.\n */\n\nCompiler.prototype.rule = function(node){\n  var decls = node.declarations;\n  if (!decls.length) return '';\n\n  return node.selectors.join(',')\n    + '{'\n    + decls.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit declaration node.\n */\n\nCompiler.prototype.declaration = function(node){\n  return node.property + ':' + node.value + ';';\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/lib/identity.js\", function(exports, require, module){\n\n/**\n * Expose compiler.\n */\n\nmodule.exports = Compiler;\n\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n  this.indentation = options.indent;\n}\n\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function(node){\n  return node.stylesheet\n    .rules.map(this.visit, this)\n    .join('\\n\\n');\n};\n\n/**\n * Visit `node`.\n */\n\nCompiler.prototype.visit = function(node){\n  return this[node.type](node);\n};\n\n/**\n * Visit comment node.\n */\n\nCompiler.prototype.comment = function(node){\n  return this.indent() + '/*' + node.comment + '*/';\n};\n\n/**\n * Visit import node.\n */\n\nCompiler.prototype.import = function(node){\n  return '@import ' + node.import + ';';\n};\n\n/**\n * Visit media node.\n */\n\nCompiler.prototype.media = function(node){\n  return '@media '\n    + node.media\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit document node.\n */\n\nCompiler.prototype.document = function(node){\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n\n  return doc + ' '\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit charset node.\n */\n\nCompiler.prototype.charset = function(node){\n  return '@charset ' + node.charset + ';\\n';\n};\n\n/**\n * Visit supports node.\n */\n\nCompiler.prototype.supports = function(node){\n  return '@supports '\n    + node.supports\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit keyframes node.\n */\n\nCompiler.prototype.keyframes = function(node){\n  return '@'\n    + (node.vendor || '')\n    + 'keyframes '\n    + node.name\n    + ' {\\n'\n    + this.indent(1)\n    + node.keyframes.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '}';\n};\n\n/**\n * Visit keyframe node.\n */\n\nCompiler.prototype.keyframe = function(node){\n  var decls = node.declarations;\n\n  return this.indent()\n    + node.values.join(', ')\n    + ' {\\n'\n    + this.indent(1)\n    + decls.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n' + this.indent() + '}\\n';\n};\n\n/**\n * Visit page node.\n */\n\nCompiler.prototype.page = function(node){\n  var sel = node.selectors.length\n    ? node.selectors.join(', ') + ' '\n    : '';\n\n  return '@page ' + sel\n    + '{\\n'\n    + this.indent(1)\n    + node.declarations.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit rule node.\n */\n\nCompiler.prototype.rule = function(node){\n  var indent = this.indent();\n  var decls = node.declarations;\n\n  return node.selectors.map(function(s){ return indent + s }).join(',\\n')\n    + ' {\\n'\n    + this.indent(1)\n    + decls.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n' + this.indent() + '}';\n};\n\n/**\n * Visit declaration node.\n */\n\nCompiler.prototype.declaration = function(node){\n  return this.indent() + node.property + ': ' + node.value + ';';\n};\n\n/**\n * Increase, decrease or return current indentation.\n */\n\nCompiler.prototype.indent = function(level) {\n  this.level = this.level || 1;\n\n  if (null != level) {\n    this.level += level;\n    return '';\n  }\n\n  return Array(this.level).join(this.indentation || '  ');\n};\n\n});\nrequire.register(\"visionmedia-css/index.js\", function(exports, require, module){\n\nexports.parse = require('css-parse');\nexports.stringify = require('css-stringify');\n\n});\nrequire.register(\"component-color-parser/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar colors = require('./colors');\n\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Parse `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api public\n */\n\nfunction parse(str) {\n  return named(str)\n    || hex3(str)\n    || hex6(str)\n    || rgb(str)\n    || rgba(str);\n}\n\n/**\n * Parse named css color `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction named(str) {\n  var c = colors[str.toLowerCase()];\n  if (!c) return;\n  return {\n    r: c[0],\n    g: c[1],\n    b: c[2]\n  }\n}\n\n/**\n * Parse rgb(n, n, n)\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction rgb(str) {\n  if (0 == str.indexOf('rgb(')) {\n    str = str.match(/rgb\\(([^)]+)\\)/)[1];\n    var parts = str.split(/ *, */).map(Number);\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: 1\n    }\n  }\n}\n\n/**\n * Parse rgba(n, n, n, n)\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction rgba(str) {\n  if (0 == str.indexOf('rgba(')) {\n    str = str.match(/rgba\\(([^)]+)\\)/)[1];\n    var parts = str.split(/ *, */).map(Number);\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: parts[3]\n    }\n  }\n}\n\n/**\n * Parse #nnnnnn\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction hex6(str) {\n  if ('#' == str[0] && 7 == str.length) {\n    return {\n      r: parseInt(str.slice(1, 3), 16),\n      g: parseInt(str.slice(3, 5), 16),\n      b: parseInt(str.slice(5, 7), 16),\n      a: 1\n    }\n  }\n}\n\n/**\n * Parse #nnn\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction hex3(str) {\n  if ('#' == str[0] && 4 == str.length) {\n    return {\n      r: parseInt(str[1] + str[1], 16),\n      g: parseInt(str[2] + str[2], 16),\n      b: parseInt(str[3] + str[3], 16),\n      a: 1\n    }\n  }\n}\n\n\n});\nrequire.register(\"component-color-parser/colors.js\", function(exports, require, module){\n\nmodule.exports = {\n    aliceblue: [240, 248, 255]\n  , antiquewhite: [250, 235, 215]\n  , aqua: [0, 255, 255]\n  , aquamarine: [127, 255, 212]\n  , azure: [240, 255, 255]\n  , beige: [245, 245, 220]\n  , bisque: [255, 228, 196]\n  , black: [0, 0, 0]\n  , blanchedalmond: [255, 235, 205]\n  , blue: [0, 0, 255]\n  , blueviolet: [138, 43, 226]\n  , brown: [165, 42, 42]\n  , burlywood: [222, 184, 135]\n  , cadetblue: [95, 158, 160]\n  , chartreuse: [127, 255, 0]\n  , chocolate: [210, 105, 30]\n  , coral: [255, 127, 80]\n  , cornflowerblue: [100, 149, 237]\n  , cornsilk: [255, 248, 220]\n  , crimson: [220, 20, 60]\n  , cyan: [0, 255, 255]\n  , darkblue: [0, 0, 139]\n  , darkcyan: [0, 139, 139]\n  , darkgoldenrod: [184, 132, 11]\n  , darkgray: [169, 169, 169]\n  , darkgreen: [0, 100, 0]\n  , darkgrey: [169, 169, 169]\n  , darkkhaki: [189, 183, 107]\n  , darkmagenta: [139, 0, 139]\n  , darkolivegreen: [85, 107, 47]\n  , darkorange: [255, 140, 0]\n  , darkorchid: [153, 50, 204]\n  , darkred: [139, 0, 0]\n  , darksalmon: [233, 150, 122]\n  , darkseagreen: [143, 188, 143]\n  , darkslateblue: [72, 61, 139]\n  , darkslategray: [47, 79, 79]\n  , darkslategrey: [47, 79, 79]\n  , darkturquoise: [0, 206, 209]\n  , darkviolet: [148, 0, 211]\n  , deeppink: [255, 20, 147]\n  , deepskyblue: [0, 191, 255]\n  , dimgray: [105, 105, 105]\n  , dimgrey: [105, 105, 105]\n  , dodgerblue: [30, 144, 255]\n  , firebrick: [178, 34, 34]\n  , floralwhite: [255, 255, 240]\n  , forestgreen: [34, 139, 34]\n  , fuchsia: [255, 0, 255]\n  , gainsboro: [220, 220, 220]\n  , ghostwhite: [248, 248, 255]\n  , gold: [255, 215, 0]\n  , goldenrod: [218, 165, 32]\n  , gray: [128, 128, 128]\n  , green: [0, 128, 0]\n  , greenyellow: [173, 255, 47]\n  , grey: [128, 128, 128]\n  , honeydew: [240, 255, 240]\n  , hotpink: [255, 105, 180]\n  , indianred: [205, 92, 92]\n  , indigo: [75, 0, 130]\n  , ivory: [255, 255, 240]\n  , khaki: [240, 230, 140]\n  , lavender: [230, 230, 250]\n  , lavenderblush: [255, 240, 245]\n  , lawngreen: [124, 252, 0]\n  , lemonchiffon: [255, 250, 205]\n  , lightblue: [173, 216, 230]\n  , lightcoral: [240, 128, 128]\n  , lightcyan: [224, 255, 255]\n  , lightgoldenrodyellow: [250, 250, 210]\n  , lightgray: [211, 211, 211]\n  , lightgreen: [144, 238, 144]\n  , lightgrey: [211, 211, 211]\n  , lightpink: [255, 182, 193]\n  , lightsalmon: [255, 160, 122]\n  , lightseagreen: [32, 178, 170]\n  , lightskyblue: [135, 206, 250]\n  , lightslategray: [119, 136, 153]\n  , lightslategrey: [119, 136, 153]\n  , lightsteelblue: [176, 196, 222]\n  , lightyellow: [255, 255, 224]\n  , lime: [0, 255, 0]\n  , limegreen: [50, 205, 50]\n  , linen: [250, 240, 230]\n  , magenta: [255, 0, 255]\n  , maroon: [128, 0, 0]\n  , mediumaquamarine: [102, 205, 170]\n  , mediumblue: [0, 0, 205]\n  , mediumorchid: [186, 85, 211]\n  , mediumpurple: [147, 112, 219]\n  , mediumseagreen: [60, 179, 113]\n  , mediumslateblue: [123, 104, 238]\n  , mediumspringgreen: [0, 250, 154]\n  , mediumturquoise: [72, 209, 204]\n  , mediumvioletred: [199, 21, 133]\n  , midnightblue: [25, 25, 112]\n  , mintcream: [245, 255, 250]\n  , mistyrose: [255, 228, 225]\n  , moccasin: [255, 228, 181]\n  , navajowhite: [255, 222, 173]\n  , navy: [0, 0, 128]\n  , oldlace: [253, 245, 230]\n  , olive: [128, 128, 0]\n  , olivedrab: [107, 142, 35]\n  , orange: [255, 165, 0]\n  , orangered: [255, 69, 0]\n  , orchid: [218, 112, 214]\n  , palegoldenrod: [238, 232, 170]\n  , palegreen: [152, 251, 152]\n  , paleturquoise: [175, 238, 238]\n  , palevioletred: [219, 112, 147]\n  , papayawhip: [255, 239, 213]\n  , peachpuff: [255, 218, 185]\n  , peru: [205, 133, 63]\n  , pink: [255, 192, 203]\n  , plum: [221, 160, 203]\n  , powderblue: [176, 224, 230]\n  , purple: [128, 0, 128]\n  , red: [255, 0, 0]\n  , rosybrown: [188, 143, 143]\n  , royalblue: [65, 105, 225]\n  , saddlebrown: [139, 69, 19]\n  , salmon: [250, 128, 114]\n  , sandybrown: [244, 164, 96]\n  , seagreen: [46, 139, 87]\n  , seashell: [255, 245, 238]\n  , sienna: [160, 82, 45]\n  , silver: [192, 192, 192]\n  , skyblue: [135, 206, 235]\n  , slateblue: [106, 90, 205]\n  , slategray: [119, 128, 144]\n  , slategrey: [119, 128, 144]\n  , snow: [255, 255, 250]\n  , springgreen: [0, 255, 127]\n  , steelblue: [70, 130, 180]\n  , tan: [210, 180, 140]\n  , teal: [0, 128, 128]\n  , thistle: [216, 191, 216]\n  , tomato: [255, 99, 71]\n  , turquoise: [64, 224, 208]\n  , violet: [238, 130, 238]\n  , wheat: [245, 222, 179]\n  , white: [255, 255, 255]\n  , whitesmoke: [245, 245, 245]\n  , yellow: [255, 255, 0]\n  , yellowgreen: [154, 205, 5]\n};\n});\nrequire.register(\"component-path/index.js\", function(exports, require, module){\n\nexports.basename = function(path){\n  return path.split('/').pop();\n};\n\nexports.dirname = function(path){\n  return path.split('/').slice(0, -1).join('/') || '.'; \n};\n\nexports.extname = function(path){\n  var base = exports.basename(path);\n  if (!~base.indexOf('.')) return '';\n  var ext = base.split('.').pop();\n  return '.' + ext;\n};\n});\nrequire.register(\"visionmedia-rework/index.js\", function(exports, require, module){\n\nmodule.exports = require('./lib/rework');\n});\nrequire.register(\"visionmedia-rework/lib/rework.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar css = require('css');\n\n/**\n * Expose `rework`.\n */\n\nexports = module.exports = rework;\n\n/**\n * Expose `visit` helpers.\n */\n\nexports.visit = require('./visit');\n\n/**\n * Expose prefix properties.\n */\n\nexports.properties = require('./properties');\n\n/**\n * Initialize a new stylesheet `Rework` with `str`.\n *\n * @param {String} str\n * @return {Rework}\n * @api public\n */\n\nfunction rework(str) {\n  return new Rework(css.parse(str));\n}\n\n/**\n * Initialize a new stylesheet `Rework` with `obj`.\n *\n * @param {Object} obj\n * @api private\n */\n\nfunction Rework(obj) {\n  this.obj = obj;\n}\n\n/**\n * Use the given plugin `fn(style, rework)`.\n *\n * @param {Function} fn\n * @return {Rework}\n * @api public\n */\n\nRework.prototype.use = function(fn){\n  fn(this.obj.stylesheet, this);\n  return this;\n};\n\n/**\n * Specify global vendor `prefixes`,\n * explicit ones may still be passed\n * to most plugins.\n *\n * @param {Array} prefixes\n * @return {Rework}\n * @api public\n */\n\nRework.prototype.vendors = function(prefixes){\n  this.prefixes = prefixes;\n  return this;\n};\n\n/**\n * Stringify the stylesheet.\n *\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nRework.prototype.toString = function(options){\n  return css.stringify(this.obj, options);\n};\n\n/**\n * Expose plugins.\n */\n\nexports.mixin = exports.mixins = require('./plugins/mixin');\nexports.function = exports.functions = require('./plugins/function');\nexports.prefix = require('./plugins/prefix');\nexports.colors = require('./plugins/colors');\nexports.extend = require('./plugins/extend');\nexports.references = require('./plugins/references');\nexports.prefixValue = require('./plugins/prefix-value');\nexports.prefixSelectors = require('./plugins/prefix-selectors');\nexports.keyframes = require('./plugins/keyframes');\nexports.at2x = require('./plugins/at2x');\nexports.url = require('./plugins/url');\nexports.ease = require('./plugins/ease');\nexports.vars = require('./plugins/vars');\n\n/**\n * Try/catch plugins unavailable in component.\n */\n\n try {\n  exports.inline = require('./plugins/inline');\n} catch (err) {};\n\n});\nrequire.register(\"visionmedia-rework/lib/utils.js\", function(exports, require, module){\n\n/**\n * Strip `str` quotes.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.stripQuotes = function(str) {\n  if ('\"' == str[0] || \"'\" == str[0]) return str.slice(1, -1);\n  return str;\n};\n});\nrequire.register(\"visionmedia-rework/lib/visit.js\", function(exports, require, module){\n\n/**\n * Visit `node`'s declarations recursively and\n * invoke `fn(declarations, node)`.\n *\n * @param {Object} node\n * @param {Function} fn\n * @api private\n */\n\nexports.declarations = function(node, fn){\n  node.rules.forEach(function(rule){\n    // @media etc\n    if (rule.rules) {\n      exports.declarations(rule, fn);\n      return;\n    }\n\n    // keyframes\n    if (rule.keyframes) {\n      rule.keyframes.forEach(function(keyframe){\n        fn(keyframe.declarations, rule);\n      });\n      return;\n    }\n\n    // @charset, @import etc\n    if (!rule.declarations) return;\n\n    fn(rule.declarations, node);\n  });\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/properties.js\", function(exports, require, module){\n\n/**\n * Prefixed properties.\n */\n\nmodule.exports = [\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'appearance',\n  'background-visibility',\n  'background-composite',\n  'blend-mode',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-fit',\n  'border-image',\n  'border-vertical-spacing',\n  'box-align',\n  'box-direction',\n  'box-flex',\n  'box-flex-group',\n  'box-lines',\n  'box-ordinal-group',\n  'box-orient',\n  'box-pack',\n  'box-reflect',\n  'box-sizing',\n  'clip-path',\n  'column-count',\n  'column-width',\n  'column-min-width',\n  'column-width-policy',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'flex-flow-from',\n  'flex-flow-into',\n  'font-smoothing',\n  'transform',\n  'transform-origin',\n  'transform-origin-x',\n  'transform-origin-y',\n  'transform-origin-z',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'user-drag',\n  'user-modify',\n  'user-select',\n  'wrap',\n  'wrap-flow',\n  'wrap-margin',\n  'wrap-padding',\n  'wrap-through',\n  'overflow-scrolling'\n];\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/function.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit')\n  , utils = require('../utils')\n  , strip = utils.stripQuotes;\n\n/**\n * Define custom function.\n */\n\nmodule.exports = function(functions, args) {\n  if (!functions) throw new Error('functions object required');\n  return function(style, rework){\n    visit.declarations(style, function(declarations){\n      for (var name in functions) {\n        func(declarations, name, functions[name], args);\n      }\n    });\n  }\n};\n\n/**\n * Escape regexp codes in string.\n *\n * @param {String} s\n * @api private\n */\n\nfunction escape(s) {\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\n/**\n * Visit declarations and apply functions.\n *\n * @param {Array} declarations\n * @param {Object} functions\n * @param {Boolean} [parseArgs]\n * @api private\n */\n\nfunction func(declarations, name, func, parseArgs) {\n  if (false !== parseArgs) parseArgs = true;\n  var regexp = new RegExp(escape(name) + '\\\\(([^\\)]+)\\\\)', 'g');\n  declarations.forEach(function(decl){\n    if (!~decl.value.indexOf(name + '(')) return;\n    decl.value = decl.value.replace(regexp, function(_, args){\n      if (!parseArgs) return func.call(decl, strip(args));\n      args = args.split(/,\\s*/).map(strip);\n      return func.apply(decl, args);\n    });\n  });\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/url.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , func = require('./function');\n\n/**\n * Map `url()` calls.\n *\n *   body {\n *     background: url(/images/bg.png);\n *   }\n *\n * yields:\n *\n *   body {\n *     background: url(http://example.com/images/bg.png);\n *   }\n *\n */\n\nmodule.exports = function(fn) {\n  return func({\n    url: function(path){\n      return 'url(\"' + fn(path) + '\")';\n    }\n  }, false);\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/vars.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Add variable support.\n *\n *   :root {\n *     var-header-color: #06c;\n *   }\n *\n *   h1 {\n *     background-color: var(header-color);\n *   }\n *\n * yields:\n *\n *   h1 {\n *     background-color: #06c;\n *   }\n *\n */\n\nmodule.exports = function(map) {\n  map = map || {};\n\n  function replace(str) {\n    return str.replace(/\\bvar\\((.*?)\\)/g, function(_, name){\n      var val = map[name];\n      if (!val) throw new Error('variable \"' + name + '\" is undefined');\n      if (val.match(/\\bvar\\(/)) val = replace(val);\n      return val;\n    });\n  }\n\n  return function vars(style){\n    visit.declarations(style, function(declarations, node){\n      // map vars\n      declarations.forEach(function(decl){\n        if (0 != decl.property.indexOf('var-')) return;\n        var name = decl.property.replace('var-', '');\n        map[name] = decl.value;\n      });\n\n      // substitute values\n      declarations.forEach(function(decl){\n        if (!decl.value.match(/\\bvar\\(/)) return;\n        decl.value = replace(decl.value);\n      });\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/ease.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Easing functions.\n */\n\nvar ease = {\n  'ease-in-out-back': 'cubic-bezier(0.680, -0.550, 0.265, 1.550)',\n  'ease-in-out-circ': 'cubic-bezier(0.785, 0.135, 0.150, 0.860)',\n  'ease-in-out-expo': 'cubic-bezier(1.000, 0.000, 0.000, 1.000)',\n  'ease-in-out-sine': 'cubic-bezier(0.445, 0.050, 0.550, 0.950)',\n  'ease-in-out-quint': 'cubic-bezier(0.860, 0.000, 0.070, 1.000)',\n  'ease-in-out-quart': 'cubic-bezier(0.770, 0.000, 0.175, 1.000)',\n  'ease-in-out-cubic': 'cubic-bezier(0.645, 0.045, 0.355, 1.000)',\n  'ease-in-out-quad': 'cubic-bezier(0.455, 0.030, 0.515, 0.955)',\n  'ease-out-back': 'cubic-bezier(0.175, 0.885, 0.320, 1.275)',\n  'ease-out-circ': 'cubic-bezier(0.075, 0.820, 0.165, 1.000)',\n  'ease-out-expo': 'cubic-bezier(0.190, 1.000, 0.220, 1.000)',\n  'ease-out-sine': 'cubic-bezier(0.390, 0.575, 0.565, 1.000)',\n  'ease-out-quint': 'cubic-bezier(0.230, 1.000, 0.320, 1.000)',\n  'ease-out-quart': 'cubic-bezier(0.165, 0.840, 0.440, 1.000)',\n  'ease-out-cubic': 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n  'ease-out-quad': 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n  'ease-in-back': 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',\n  'ease-in-circ': 'cubic-bezier(0.600, 0.040, 0.980, 0.335)',\n  'ease-in-expo': 'cubic-bezier(0.950, 0.050, 0.795, 0.035)',\n  'ease-in-sine': 'cubic-bezier(0.470, 0.000, 0.745, 0.715)',\n  'ease-in-quint': 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n  'ease-in-quart': 'cubic-bezier(0.895, 0.030, 0.685, 0.220)',\n  'ease-in-cubic': 'cubic-bezier(0.550, 0.055, 0.675, 0.190)',\n  'ease-in-quad': 'cubic-bezier(0.550, 0.085, 0.680, 0.530)'\n};\n\n/**\n * Keys.\n */\n\nvar keys = Object.keys(ease);\n\n/**\n * Provide additional easing functions:\n *\n *    #logo {\n *      transition: all 500ms ease-out-back;\n *    }\n *\n * yields:\n *\n *    #logo {\n *      transition: all 500ms cubic-bezier(0.175, 0.885, 0.320, 1.275)\n *    }\n *\n */\n\nmodule.exports = function() {\n  return function(style, rework){\n    visit.declarations(style, substitute);\n  }\n};\n\n/**\n * Substitute easing functions.\n *\n * @api private\n */\n\nfunction substitute(declarations) {\n  for (var i = 0, len = declarations.length; i < len; ++i) {\n    var decl = declarations[i];\n    if (!decl.property.match(/transition|animation|timing/)) continue;\n    for (var k = 0; k < keys.length; ++k) {\n      var key = keys[k];\n      if (~decl.value.indexOf(key)) {\n        decl.value = decl.value.replace(key, ease[key]);\n        break;\n      }\n    }\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/at2x.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , path = require('path')\n  , stripQuotes = utils.stripQuotes;\n\n/**\n * Translate\n *\n *   .logo {\n *     background-image: url('/public/images/logo.png')\n *   }\n *\n * yields:\n *\n *   .logo {\n *     background-image: url('/public/images/logo.png')\n *   }\n *\n *   @media all and (-webkit-min-device-pixel-ratio : 1.5) {\n *     .logo {\n *       background-image: url(\"/public/images/logo@2x.png\");\n *       background-size: contain\n *     }\n *   }\n *\n */\n\nmodule.exports = function(vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    style.rules.forEach(function(rule){\n      if (!rule.declarations) return;\n\n      var backgroundSize = rule.declarations.filter(backgroundWithSize).map(value)[0] || 'contain';\n\n      rule.declarations.filter(backgroundWithURL).forEach(function(decl){\n        // parse url\n        var i = decl.value.indexOf('url(');\n        var url = stripQuotes(decl.value.slice(i + 4, decl.value.indexOf(')', i)));\n        var ext = path.extname(url);\n\n        // ignore .svg\n        if ('.svg' == ext) return;\n\n        // @2x value\n        url = path.join(path.dirname(url), path.basename(url, ext) + '@2x' + ext);\n\n        // wrap in @media\n        style.rules.push({\n          type: 'media',\n          media: 'all and (-webkit-min-device-pixel-ratio: 1.5)',\n          rules: [\n            {\n              type: 'rule',\n              selectors: rule.selectors,\n              declarations: [\n                {\n                  type: 'declaration',\n                  property: 'background-image',\n                  value: 'url(\"' + url + '\")'\n                },\n                {\n                  type: 'declaration',\n                  property: 'background-size',\n                  value: backgroundSize\n                }\n              ]\n            }\n          ]\n        });\n      });\n    });\n  };\n\n  return function(style, rework) {\n    vendors = vendors || rework.prefixes;\n    visit(style.rules, style);\n  };\n};\n\n/**\n * Filter background[-image] with url().\n */\n\nfunction backgroundWithURL(decl) {\n  return ('background' == decl.property\n    || 'background-image' == decl.property)\n    && ~decl.value.indexOf('url(');\n}\n\n/**\n * Predicate on background-size property.\n */\n\nfunction backgroundWithSize(decl) {\n  return 'background-size' == decl.property;\n}\n\n/**\n * Return value atribute of a declaration.\n */\n\nfunction value(decl) {\n  return decl.value;\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/colors.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar parse = require('color-parser')\n  , functions = require('./function');\n\n/**\n * Provide color manipulation helpers:\n *\n *    button {\n *      background: rgba(#eee, .5)\n *    }\n *\n * yields:\n *\n *    button {\n *      background: rgba(238, 238, 238, .5)\n *    }\n *\n */\n\nmodule.exports = function() {\n  return functions({\n    rgba: function(color, alpha){\n      if (2 == arguments.length) {\n        var c = parse(color.trim());\n        var args = [c.r, c.g, c.b, alpha];\n      } else {\n        var args = [].slice.call(arguments);\n      }\n      \n      return 'rgba(' + args.join(', ') + ')';\n    }\n  });\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/extend.js\", function(exports, require, module){\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('rework:extend');\n\n/**\n * Add extension support.\n */\n\nmodule.exports = function() {\n  debug('use extend');\n  return function(style, rework) {\n    var map = {};\n    var rules = style.rules.length;\n\n    for (var j = 0; j < rules; j++) {\n      var rule = style.rules[j];\n      if (!rule || !rule.selectors) return;\n\n      // map selectors\n      rule.selectors.forEach(function(sel, i) {\n        map[sel] = rule;\n        if ('%' == sel[0]) rule.selectors.splice(i, 1);\n      });\n\n      // visit extend: properties\n      visit(rule, map);\n\n      // clean up empty rules\n      if (!rule.declarations.length) {\n        style.rules.splice(j--, 1);\n      }\n    };\n  }\n};\n\n/**\n * Visit declarations and extensions.\n *\n * @param {Object} rule\n * @param {Object} map\n * @api private\n */\n\nfunction visit(rule, map) {\n  for (var i = 0; i < rule.declarations.length; ++i) {\n    var decl = rule.declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n    if (!/^extends?$/.test(key)) continue;\n\n    var extend = map[val];\n    if (!extend) throw new Error('failed to extend \"' + val + '\"');\n\n    var keys = Object.keys(map);\n    keys.forEach(function(key) {\n      if (0 != key.indexOf(val)) return;\n      var extend = map[key];\n      var suffix = key.replace(val, '');\n      debug('extend %j with %j', rule.selectors, extend.selectors);\n      extend.selectors = extend.selectors.concat(rule.selectors.map(function(sel) {\n        return sel + suffix;\n      }));\n    });\n\n    rule.declarations.splice(i--, 1);\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/mixin.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , visit = require('../visit');\n\n/**\n * Define custom mixins.\n */\n\nmodule.exports = function(mixins) {\n  if (!mixins) throw new Error('mixins object required');\n  return function(style, rework){\n    visit.declarations(style, function(declarations){\n      mixin(declarations, mixins);\n    });\n  }\n};\n\n/**\n * Visit declarations and apply mixins.\n *\n * @param {Array} declarations\n * @param {Object} mixins\n * @api private\n */\n\nfunction mixin(declarations, mixins) {\n  for (var i = 0; i < declarations.length; ++i) {\n    var decl = declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n    var fn = mixins[key];\n    if (!fn) continue;\n\n    // invoke mixin\n    var ret = fn(val);\n\n    // apply properties\n    for (var key in ret) {\n      declarations.splice(i++, 0, {\n        type: 'declaration',\n        property: key,\n        value: ret[key]\n      });\n    }\n\n    // remove original\n    declarations.splice(i, 1);\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/keyframes.js\", function(exports, require, module){\n\n/**\n * Prefix keyframes.\n *\n *   @keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n * yields:\n *\n *   @keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n *   @-webkit-keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n */\n\nmodule.exports = function(vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    style.rules.forEach(function(rule){\n      if (!rule.keyframes) return;\n\n      vendors.forEach(function(vendor){\n        if (vendor == rule.vendor) return;\n        var clone = cloneKeyframes(rule);\n        clone.vendor = vendor;\n        style.rules.push(clone);\n      });\n    });\n  }\n};\n\n/**\n * Clone keyframes.\n *\n * @param {Object} rule\n * @api private\n */\n\nfunction cloneKeyframes(rule) {\n  var clone = { name: rule.name };\n  clone.type = 'keyframes';\n  clone.vendor = rule.vendor;\n  clone.keyframes = [];\n  rule.keyframes.forEach(function(keyframe){\n    clone.keyframes.push(cloneKeyframe(keyframe));\n  });\n  return clone;\n}\n\n/**\n * Clone `keyframe`.\n *\n * @param {Object} keyframe\n * @api private\n */\n\nfunction cloneKeyframe(keyframe) {\n  var clone = {};\n  clone.type = 'keyframe';\n  clone.values = keyframe.values.slice();\n  clone.declarations = keyframe.declarations.map(function(decl){\n    return {\n      type: 'declaration',\n      property: decl.property,\n      value: decl.value\n    }\n  });\n  return clone;\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/references.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Provide property reference support.\n *\n *    button {\n *      width: 50px;\n *      height: @width;\n *      line-height: @height;\n *    }\n *\n * yields:\n *\n *    button {\n *      width: 50px;\n*      height: 50px;\n*      line-height: 50px;\n *    }\n *\n */\n\nmodule.exports = function() {\n  return function(style, rework){\n    visit.declarations(style, substitute);\n  }\n};\n\n/**\n * Substitute easing functions.\n *\n * @api private\n */\n\nfunction substitute(declarations) {\n  var map = {};\n\n  for (var i = 0, len = declarations.length; i < len; ++i) {\n    var decl = declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n\n    decl.value = val.replace(/@([-\\w]+)/g, function(_, name){\n      if (null == map[name]) throw new Error('@' + name + ' is not defined in this scope');\n      return map[name];\n    });\n\n    map[key] = decl.value;\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix-selectors.js\", function(exports, require, module){\n\n/**\n * Prefix selectors with `str`.\n *\n *    button {\n *      color: red;\n *    }\n *\n * yields:\n *\n *    #dialog button {\n *      color: red;\n *    }\n *\n */\n\nmodule.exports = function(str) {\n  return function(style){\n    style.rules = style.rules.map(function(rule){\n      if (!rule.selectors) return rule;\n      rule.selectors = rule.selectors.map(function(selector){\n        return str + ' ' + selector;\n      });\n      return rule;\n    });\n  }\n};\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix-value.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Prefix `value`.\n *\n *    button {\n *      transition: height, transform 2s, width 0.3s linear;\n *    }\n *\n * yields:\n *\n *    button {\n *      -webkit-transition: height, -webkit-transform 2s, width 0.3s linear;\n *      -moz-transition: height, -moz-transform 2s, width 0.3s linear;\n *      transition: height, transform 2s, width 0.3s linear\n *    }\n *\n */\n\nmodule.exports = function(value, vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    visit.declarations(style, function(declarations){\n      for (var i = 0; i < declarations.length; ++i) {\n        var decl = declarations[i];\n        if (!~decl.value.indexOf(value)) continue;\n\n        // ignore vendor-prefixed properties\n        if ('-' == decl.property[0]) continue;\n\n        // ignore vendor-prefixed values\n        if (~decl.value.indexOf('-' + value)) continue;\n\n        // vendor prefixed props\n        vendors.forEach(function(vendor){\n          var prop = 'transition' == decl.property\n            ? vendor + decl.property\n            : decl.property;\n\n          declarations.splice(i++, 0, {\n            type: 'declaration',\n            property: prop,\n            value: decl.value.replace(value, vendor + value)\n          });\n        });\n      }\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Prefix `prop`.\n *\n *   .button {\n *     border-radius: 5px;\n *   }\n *\n * yields:\n *\n *   .button {\n *     -webkit-border-radius: 5px;\n *     -moz-border-radius: 5px;\n *     border-radius: 5px;\n *   }\n *\n */\n\nmodule.exports = function(prop, vendors) {\n  var props = Array.isArray(prop)\n    ? prop\n    : [prop];\n\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n    visit.declarations(style, function(declarations, node){\n      var only = node.vendor;\n      var isKeyframes = !! node.keyframes;\n\n      for (var i = 0; i < props.length; ++i) {\n        var prop = props[i];\n\n        for (var j = 0, len = declarations.length; j < len; ++j) {\n          var decl = declarations[j];\n          if (prop != decl.property) continue;\n\n          // vendor prefixed props\n          for (var k = 0; k < vendors.length; ++k) {\n            if (!only && isKeyframes) continue;\n            if (only && only != vendors[k]) continue;\n            declarations.push({\n              type: 'declaration',\n              property: vendors[k] + decl.property,\n              value: decl.value\n            });\n          }\n\n          // original prop\n          declarations.push(decl);\n          declarations.splice(j, 1);\n        }\n      }\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/index.js\", function(exports, require, module){\n\nexports['border-radius'] = require('./lib/border-radius');\nexports['overflow'] = require('./lib/ellipsis');\nexports['absolute'] = require('./lib/absolute');\nexports['relative'] = require('./lib/relative');\nexports['fixed'] = require('./lib/fixed');\nexports['opacity'] = require('./lib/opacity');\nexports['size'] = require('./lib/size');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/absolute.js\", function(exports, require, module){\n\n/**\n * absolute: top left\n * absolute: top 5px left 5px\n */\n\nmodule.exports = require('./position')('absolute');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/border-radius.js\", function(exports, require, module){\n\n/**\n * Positions.\n */\n\nvar position = {\n  top: true,\n  left: true,\n  right: true,\n  bottom: true\n};\n\n/**\n * border-radius: 5px\n * border-radius: 5px 10px\n * border-radius: top 5px\n * border-radius: top 5px left 10px\n */\n\nmodule.exports = function(str){\n  var vals = str.split(/\\s+/);\n  var pos;\n  var ret;\n\n  for (var i = 0; i < vals.length; ++i) {\n    var val = vals[i];\n    if (!position[val]) continue;\n    ret = ret || {};\n    pos = val;\n    val = vals[++i];\n    switch (pos) {\n      case 'top':\n      case 'bottom':\n        ret['border-' + pos + '-left-radius'] = val;\n        ret['border-' + pos + '-right-radius'] = val;\n        break;\n      case 'left':\n      case 'right':\n        ret['border-top-' + pos + '-radius'] = val;\n        ret['border-bottom-' + pos + '-radius'] = val;\n        break;\n    }\n  }\n\n  if (!ret) {\n    return {\n      'border-radius': str\n    }\n  }\n\n  return ret;\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/ellipsis.js\", function(exports, require, module){\n\n/**\n * overflow: ellipsis\n */\n\nmodule.exports = function(type) {\n  if ('ellipsis' == type) {\n    return {\n      'white-space': 'nowrap',\n      'overflow': 'hidden',\n      'text-overflow': 'ellipsis'\n    }\n  }\n\n  return {\n    'overflow': type\n  };\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/fixed.js\", function(exports, require, module){\n\n/**\n * fixed: top left\n * fixed: top 5px left 5px\n */\n\nmodule.exports = require('./position')('fixed');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/opacity.js\", function(exports, require, module){\n\n/**\n * opacity: 1\n */\n\nmodule.exports = function(str){\n  var vals = str.split(/\\s+/);\n  var a = parseFloat(vals.shift());\n  var n = a * 100 | 0;\n  var tail = vals.length ? ' ' + vals.join(' '): '';\n  return {\n    'opacity': a + tail,\n    '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=' + n + ')' + tail,\n    'filter': 'alpha(opacity=' + n + ')' + tail\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/position.js\", function(exports, require, module){\n\n/**\n * Positions.\n */\n\nvar positions = {\n  top: true,\n  left: true,\n  right: true,\n  bottom: true\n};\n\n/**\n * Return a mixin for the given position `type`.\n *\n * @param {String} type\n * @return {Function}\n * @api private\n */\n\nmodule.exports = function(type){\n  return function(str){\n    var val;\n    var pos;\n    var ret = {};\n    var vals = str.split(/\\s+/);\n\n    ret.position = type;\n\n    for (var i = 0; i < vals.length; ++i) {\n      val = vals[i];\n      if (positions[val]) {\n        pos = val;\n        ret[pos] = '0';\n      } else {\n        ret[pos] = val;\n      }\n    }\n\n    return ret;\n  };\n}\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/relative.js\", function(exports, require, module){\n\n/**\n * relative: top left\n * relative: top 5px left 5px\n */\n\nmodule.exports = require('./position')('relative');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/size.js\", function(exports, require, module){\n/**\n * size: 100px 50px\n */\n\nmodule.exports = function(sizes) {\n  sizes = sizes.split(/\\s+/);\n  if ( sizes.length == 1 ) sizes[1] = sizes[0];\n\n  return {\n    width:  sizes[0],\n    height: sizes[1]\n  };\n};\n\n});\nrequire.register(\"styl/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar whitespace = require('css-whitespace');\nvar mixins = require('rework-mixins');\nvar rework = require('rework');\nvar props = rework.properties;\n\n/**\n * Expose `Style`.\n */\n\nmodule.exports = Style;\n\n/**\n * Initialize a new Style with the given css `str`.\n *\n * Options:\n *\n *  - `whitespace` utilize css whitespace transformations\n *  - `compress` enable output compression\n *\n * @param {String} str\n * @param {Object} options\n * @api public\n */\n\nfunction Style(str, options) {\n  if (!(this instanceof Style)) return new Style(str, options);\n  options = options || {};\n  if (options.whitespace) str = whitespace(str);\n  this.str = str;\n  this.compress = options.compress;\n  this.rework = rework(str);\n  this.delegate(['vendors', 'use']);\n  this.vendors(['-ms-', '-moz-', '-webkit-']);\n}\n\n/**\n * Delegate `methods` to rework.\n *\n * @param {Array} methods\n * @api private\n */\n\nStyle.prototype.delegate = function(methods){\n  var self = this;\n  methods.forEach(function(method){\n    self[method] = self.rework[method].bind(self.rework);\n  });\n};\n\n/**\n * Return the compiled CSS.\n *\n * @return {String}\n * @api public\n */\n\nStyle.prototype.toString = function(){\n  this.use(rework.mixin(mixins));\n  this.use(rework.keyframes());\n  this.use(rework.ease());\n  this.use(rework.prefixValue('linear-gradient'));\n  this.use(rework.prefixValue('radial-gradient'));\n  this.use(rework.prefixValue('transform'));\n  this.use(rework.prefix(props));\n  this.use(rework.colors());\n  this.use(rework.references());\n  this.use(rework.at2x());\n  this.use(rework.extend());\n  return this.rework.toString({ compress: this.compress });\n};\n\n});\n\n\n\n\n\n\n\nrequire.alias(\"visionmedia-debug/index.js\", \"styl/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"styl/deps/debug/debug.js\");\nrequire.alias(\"visionmedia-debug/index.js\", \"debug/index.js\");\n\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"styl/deps/css-whitespace/index.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/compiler.js\", \"styl/deps/css-whitespace/lib/compiler.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/lexer.js\", \"styl/deps/css-whitespace/lib/lexer.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/parser.js\", \"styl/deps/css-whitespace/lib/parser.js\");\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"styl/deps/css-whitespace/index.js\");\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"css-whitespace/index.js\");\nrequire.alias(\"visionmedia-debug/index.js\", \"visionmedia-css-whitespace/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"visionmedia-css-whitespace/deps/debug/debug.js\");\n\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"visionmedia-css-whitespace/index.js\");\nrequire.alias(\"visionmedia-rework/index.js\", \"styl/deps/rework/index.js\");\nrequire.alias(\"visionmedia-rework/lib/rework.js\", \"styl/deps/rework/lib/rework.js\");\nrequire.alias(\"visionmedia-rework/lib/utils.js\", \"styl/deps/rework/lib/utils.js\");\nrequire.alias(\"visionmedia-rework/lib/visit.js\", \"styl/deps/rework/lib/visit.js\");\nrequire.alias(\"visionmedia-rework/lib/properties.js\", \"styl/deps/rework/lib/properties.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/function.js\", \"styl/deps/rework/lib/plugins/function.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/url.js\", \"styl/deps/rework/lib/plugins/url.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/vars.js\", \"styl/deps/rework/lib/plugins/vars.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/ease.js\", \"styl/deps/rework/lib/plugins/ease.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/at2x.js\", \"styl/deps/rework/lib/plugins/at2x.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/colors.js\", \"styl/deps/rework/lib/plugins/colors.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/extend.js\", \"styl/deps/rework/lib/plugins/extend.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/mixin.js\", \"styl/deps/rework/lib/plugins/mixin.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/keyframes.js\", \"styl/deps/rework/lib/plugins/keyframes.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/references.js\", \"styl/deps/rework/lib/plugins/references.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix-selectors.js\", \"styl/deps/rework/lib/plugins/prefix-selectors.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix-value.js\", \"styl/deps/rework/lib/plugins/prefix-value.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix.js\", \"styl/deps/rework/lib/plugins/prefix.js\");\nrequire.alias(\"visionmedia-rework/index.js\", \"rework/index.js\");\nrequire.alias(\"visionmedia-css/index.js\", \"visionmedia-rework/deps/css/index.js\");\nrequire.alias(\"visionmedia-css-parse/index.js\", \"visionmedia-css/deps/css-parse/index.js\");\n\nrequire.alias(\"visionmedia-css-stringify/index.js\", \"visionmedia-css/deps/css-stringify/index.js\");\nrequire.alias(\"visionmedia-css-stringify/lib/compress.js\", \"visionmedia-css/deps/css-stringify/lib/compress.js\");\nrequire.alias(\"visionmedia-css-stringify/lib/identity.js\", \"visionmedia-css/deps/css-stringify/lib/identity.js\");\n\nrequire.alias(\"visionmedia-debug/index.js\", \"visionmedia-rework/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"visionmedia-rework/deps/debug/debug.js\");\n\nrequire.alias(\"component-color-parser/index.js\", \"visionmedia-rework/deps/color-parser/index.js\");\nrequire.alias(\"component-color-parser/colors.js\", \"visionmedia-rework/deps/color-parser/colors.js\");\n\nrequire.alias(\"component-path/index.js\", \"visionmedia-rework/deps/path/index.js\");\n\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"styl/deps/rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/absolute.js\", \"styl/deps/rework-mixins/lib/absolute.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/border-radius.js\", \"styl/deps/rework-mixins/lib/border-radius.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/ellipsis.js\", \"styl/deps/rework-mixins/lib/ellipsis.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/fixed.js\", \"styl/deps/rework-mixins/lib/fixed.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/opacity.js\", \"styl/deps/rework-mixins/lib/opacity.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/position.js\", \"styl/deps/rework-mixins/lib/position.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/relative.js\", \"styl/deps/rework-mixins/lib/relative.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/size.js\", \"styl/deps/rework-mixins/lib/size.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"styl/deps/rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"visionmedia-rework-mixins/index.js\");\nrequire.alias(\"styl/index.js\", \"styl/index.js\");\n\ndebugger\n\nmodule.exports = require(\"styl/index.js\");\n",
          "mode": "100644"
        },
        "pixie.cson": {
          "path": "pixie.cson",
          "content": "entryPoint: \"lib/styl\"\nversion: \"0.2.8\"\n",
          "mode": "100644"
        },
        "test/test.coffee": {
          "path": "test/test.coffee",
          "content": "styl = require \"../lib/styl\"\n\ndescribe \"styl\", ->\n  it \"should compile a little\", ->\n    console.log styl\n\n    source = \"\"\"\n      body\n        background-color: red\n    \"\"\"\n\n    output = \"\"\"\n      body {\n        background-color: red;\n      }\n    \"\"\"\n\n    assert.equal styl(source, whitespace: true).toString(), output\n",
          "mode": "100644"
        }
      },
      "distribution": {
        "lib/styl": {
          "path": "lib/styl",
          "content": "\n/**\n * Require the given path.\n *\n * @param {String} path\n * @return {Object} exports\n * @api public\n */\n\nfunction require(path, parent, orig) {\n  var resolved = require.resolve(path);\n\n  // lookup failed\n  if (null == resolved) {\n    orig = orig || path;\n    parent = parent || 'root';\n    var err = new Error('Failed to require \"' + orig + '\" from \"' + parent + '\"');\n    err.path = orig;\n    err.parent = parent;\n    err.require = true;\n    throw err;\n  }\n\n  var module = require.modules[resolved];\n\n  // perform real require()\n  // by invoking the module's\n  // registered function\n  if (!module.exports) {\n    module.exports = {};\n    module.client = module.component = true;\n    module.call(this, module.exports, require.relative(resolved), module);\n  }\n\n  return module.exports;\n}\n\n/**\n * Registered modules.\n */\n\nrequire.modules = {};\n\n/**\n * Registered aliases.\n */\n\nrequire.aliases = {};\n\n/**\n * Resolve `path`.\n *\n * Lookup:\n *\n *   - PATH/index.js\n *   - PATH.js\n *   - PATH\n *\n * @param {String} path\n * @return {String} path or null\n * @api private\n */\n\nrequire.resolve = function(path) {\n  if (path.charAt(0) === '/') path = path.slice(1);\n\n  var paths = [\n    path,\n    path + '.js',\n    path + '.json',\n    path + '/index.js',\n    path + '/index.json'\n  ];\n\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    if (require.modules.hasOwnProperty(path)) return path;\n    if (require.aliases.hasOwnProperty(path)) return require.aliases[path];\n  }\n};\n\n/**\n * Normalize `path` relative to the current path.\n *\n * @param {String} curr\n * @param {String} path\n * @return {String}\n * @api private\n */\n\nrequire.normalize = function(curr, path) {\n  var segs = [];\n\n  if ('.' != path.charAt(0)) return path;\n\n  curr = curr.split('/');\n  path = path.split('/');\n\n  for (var i = 0; i < path.length; ++i) {\n    if ('..' == path[i]) {\n      curr.pop();\n    } else if ('.' != path[i] && '' != path[i]) {\n      segs.push(path[i]);\n    }\n  }\n\n  return curr.concat(segs).join('/');\n};\n\n/**\n * Register module at `path` with callback `definition`.\n *\n * @param {String} path\n * @param {Function} definition\n * @api private\n */\n\nrequire.register = function(path, definition) {\n  require.modules[path] = definition;\n};\n\n/**\n * Alias a module definition.\n *\n * @param {String} from\n * @param {String} to\n * @api private\n */\n\nrequire.alias = function(from, to) {\n  if (!require.modules.hasOwnProperty(from)) {\n    throw new Error('Failed to alias \"' + from + '\", it does not exist');\n  }\n  require.aliases[to] = from;\n};\n\n/**\n * Return a require function relative to the `parent` path.\n *\n * @param {String} parent\n * @return {Function}\n * @api private\n */\n\nrequire.relative = function(parent) {\n  var p = require.normalize(parent, '..');\n\n  /**\n   * lastIndexOf helper.\n   */\n\n  function lastIndexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * The relative require() itself.\n   */\n\n  function localRequire(path) {\n    var resolved = localRequire.resolve(path);\n    return require(resolved, parent, path);\n  }\n\n  /**\n   * Resolve relative to the parent.\n   */\n\n  localRequire.resolve = function(path) {\n    var c = path.charAt(0);\n    if ('/' == c) return path.slice(1);\n    if ('.' == c) return require.normalize(p, path);\n\n    // resolve deps by returning\n    // the dep in the nearest \"deps\"\n    // directory\n    var segs = parent.split('/');\n    var i = lastIndexOf(segs, 'deps') + 1;\n    if (!i) i = 0;\n    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;\n    return path;\n  };\n\n  /**\n   * Check if module is defined at `path`.\n   */\n\n  localRequire.exists = function(path) {\n    return require.modules.hasOwnProperty(localRequire.resolve(path));\n  };\n\n  return localRequire;\n};\nrequire.register(\"visionmedia-debug/index.js\", function(exports, require, module){\nif ('undefined' == typeof window) {\n  module.exports = require('./lib/debug');\n} else {\n  module.exports = require('./debug');\n}\n\n});\nrequire.register(\"visionmedia-debug/debug.js\", function(exports, require, module){\n\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\nif (window.localStorage) debug.enable(localStorage.debug);\n\n});\nrequire.register(\"visionmedia-css-whitespace/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar parse = require('./lib/parser');\nvar compile = require('./lib/compiler');\n\n/**\n * Compile a whitespace significant\n * `str` of CSS to the valid CSS\n * equivalent.\n *\n * @param {String} str\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(str){\n  return compile(parse(str));\n};\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/compiler.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('css-whitespace:parser');\n\n/**\n * Compile the given `node`.\n *\n * @param {Array} node\n * @return {String}\n * @api private\n */\n\nmodule.exports = function(node){\n  var indents = 0;\n  var rules = [];\n  var stash = [];\n  var level = 0;\n  var nest = 0;\n\n  if (debug.enabled) {\n    var util = require('util');\n    console.log(util.inspect(node, false, 12, true));\n  }\n\n  return visit(node);\n\n  /**\n   * Visit `node`.\n   */\n\n  function visit(node) {\n    switch (node[0]) {\n      case 'root':\n        return root(node);\n      case 'rule':\n        if ('@' == node[1][0][0]) ++nest;\n        var ret = rule(node);\n        if ('@' == node[1][0][0]) --nest;\n        return ret;\n      case 'block':\n        ++level;\n        var ret = block(node);\n        --level;\n        return ret;\n      case 'prop':\n        return prop(node);\n      case 'comment':\n        return comment(node);\n      default:\n        throw new Error('invalid node \"' + node[0] + '\"');\n    }\n  }\n\n  /**\n   * Visit block.\n   */\n\n  function block(node) {\n    var buf = [];\n    var nodes = node[1];\n\n    for (var i = 0; i < nodes.length; ++i) {\n      buf.push(visit(nodes[i]));\n    }\n\n    return buf.join('');\n  }\n\n  /**\n   * Visit comment.\n   */\n\n  function comment(node) {\n    return indent() + '/*' + node[1] + '*/\\n';\n  }\n\n  /**\n   * Visit prop.\n   */\n\n  function prop(node) {\n    var prop = node[1];\n    var val = node[2];\n    return indent() + prop + ': ' + val + ';\\n';\n  }\n\n  /**\n   * Visit rule.\n   */\n\n  function rule(node) {\n    var font = '@font-face' == node[1][0].trim();\n    var rule = node[1];\n    var block = node[2];\n    var buf = '';\n\n    if (!block) return rule.join('') + ';';\n\n    rules.push(node);\n\n    if ('@' == rule[0][0] && !font) {\n      buf = join(rules) + ' {\\n';\n      visit(block);\n      buf += stash.join('\\n');\n      buf += '\\n}';\n      stash = [];\n    } else if (nest && !font) {\n      indents = 1;\n      buf = join(rules, 1) + ' {\\n';\n      indents = 2;\n      buf += visit(block);\n      buf += '  }';\n      indents = 1;\n    } else {\n      indents = 0;\n      buf = join(rules) + ' {\\n'\n      indents = 1;\n      buf += visit(block);\n      indents = 0;\n      buf += '}';\n      if (!hasProperties(block)) buf = '';\n    }\n\n    if (rules.length > 1) {\n      if (hasProperties(block)) stash.push(buf);\n      buf = '';\n    }\n\n    rules.pop();\n\n    return buf;\n  }\n\n  /**\n   * Visit root.\n   */\n\n  function root(node) {\n    var buf = [];\n    for (var i = 0; i < node[1].length; ++i) {\n      buf.push(visit(node[1][i]));\n      if (stash.length) {\n        buf = buf.concat(stash);\n        stash = [];\n      }\n    }\n    return buf.join('\\n\\n');\n  }\n\n  /**\n   * Join the given rules.\n   *\n   * @param {Array} rules\n   * @param {Number} [offset]\n   * @return {String}\n   * @api private\n   */\n\n  function join(rules, offset) {\n    offset = offset || 0;\n    var selectors = [];\n    var buf = [];\n    var curr;\n    var next;\n\n    function compile(rules, i) {\n      if (offset != i) {\n        rules[i][1].forEach(function(selector){\n          var parent = ~selector.indexOf('&');\n          selector = selector.replace('&', '');\n          buf.unshift(parent ? selector : ' ' + selector);\n          compile(rules, i - 1);\n          buf.shift();\n        });\n      } else {\n        rules[i][1].forEach(function(selector){\n          var tail = buf.join('');\n          selectors.push(indent() + selector + tail);\n        });\n      }\n    }\n\n    compile(rules, rules.length - 1);\n\n    return selectors.join(',\\n');\n  }\n\n  /**\n   * Return indent.\n   */\n\n  function indent() {\n    return Array(indents + 1).join('  ');\n  }\n};\n\n/**\n * Check if `block` has properties.\n *\n * @param {Array} block\n * @return {Boolean}\n * @api private\n */\n\nfunction hasProperties(block) {\n  var nodes = block[1];\n  for (var i = 0; i < nodes.length; ++i) {\n    if ('prop' == nodes[i][0]) return true;\n  }\n  return false;\n}\n\n/**\n * Blank string filter.\n *\n * @api private\n */\n\nfunction blank(str) {\n  return '' != str;\n}\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/lexer.js\", function(exports, require, module){\n\n/**\n * Pesudo selectors.\n */\n\nvar pseudos = [\n  ':selection',\n  'fullscreen',\n  'nth-child',\n  'first-child',\n  'last-child',\n  'link',\n  'visited',\n  'hover',\n  'active',\n  'focus',\n  'first-letter',\n  'first-line',\n  'before',\n  'after',\n  'lang',\n  'enabled',\n  'disabled',\n  'only-child',\n  'only-of-type',\n  'first-of-type',\n  'last-of-type',\n  'nth-last-of-type',\n  'nth-of-type',\n  'root',\n  'empty',\n  'target',\n  'not',\n  '-o',\n  '-ms',\n  '-moz',\n  '-webkit'\n]\n\n/**\n * Property regexp.\n */\n\npseudos = pseudos.join('|');\nvar propre = new RegExp('^ *([-\\\\w]+):(?!' + pseudos + ') *([^\\n]*)');\n\n/**\n * Scan the given `str` returning tokens.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nmodule.exports = function(str) {\n  var indents = [0];\n  var stash = [];\n\n  // strip blanks\n  str = str.replace(/\\r/g, '');\n  str = str.replace(/\\n\\s*\\n/gm, '\\n');\n\n  return scan();\n\n  /**\n   * tok+\n   */\n\n  function scan() {\n    var toks = []\n      , curr;\n\n    while (str.length) {\n      curr = next();\n      curr && toks.push(curr);\n      if (str.length && !curr) {\n        throw new Error('syntax error near \"' + str.slice(0, 10) + '\"');\n      }\n    }\n\n    toks = toks.concat(stash);\n    while (indents.pop()) toks.push(['outdent']);\n    toks.push(['eos']);\n    return toks;\n  }\n\n  /**\n   *   eos\n   * | indentation\n   * | rule\n   */\n\n  function next() {\n    return stashed()\n      || comment()\n      || csscomment()\n      || indentation()\n      || prop()\n      || rule();\n  }\n\n  /**\n   * Deferred tokens.\n   */\n\n  function stashed() {\n    return stash.shift();\n  }\n\n  /**\n   * Comment.\n   */\n\n  function comment() {\n    var m = str.match(/^\\/\\/([^\\n]*)/);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    return next();\n  }\n\n  /**\n   * Multiline comment.\n   */\n\n  function csscomment() {\n    if ('/' != str[0] || '*' != str[1]) return;\n    str = str.slice(2);\n\n    var i = 0;\n    while ('*' != str[i] && '/' != str[i + 1]) ++i;\n\n    var buf = str.slice(0, i);\n    str = str.slice(buf.length + 2);\n\n    return ['comment', buf];\n  }\n\n  /**\n   *   INDENT\n   * | OUTDENT\n   */\n\n  function indentation() {\n    var spaces = str.match(/^\\n( *)/);\n    if (!spaces) return;\n    str = str.slice(spaces[0].length);\n    spaces = spaces[1].length;\n    var prev = indents[indents.length - 1];\n\n    // INDENT\n    if (spaces > prev) return indent(spaces);\n\n    // OUTDENT\n    if (spaces < prev) return outdent(spaces);\n\n    return next();\n  }\n\n  /**\n   * Indent.\n   */\n\n  function indent(spaces) {\n    indents.push(spaces);\n    return ['indent'];\n  }\n\n  /**\n   * Outdent.\n   */\n\n  function outdent(spaces) {\n    while (indents[indents.length - 1] > spaces) {\n      indents.pop();\n      stash.push(['outdent']);\n    }\n    return stashed();\n  }\n\n  /**\n   * Property.\n   */\n\n  function prop() {\n    var m = str.match(propre);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    return ['prop', m[1], m[2]];\n  }\n\n  /**\n   * Rule.\n   */\n\n  function rule() {\n    var m = str.match(/^([^\\n,]+, *\\n|[^\\n]+)+/);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    m = m[0].split(/\\s*,\\s*/);\n    return ['rule', m];\n  }\n}\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/parser.js\", function(exports, require, module){\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('css-whitespace:lexer');\nvar scan = require('./lexer');\n\n/**\n * Parse the given `str`, returning an AST.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nmodule.exports = function(str) {\n  var toks = scan(str);\n\n  if (debug.enabled) {\n    var util = require('util');\n    console.log(util.inspect(toks, false, 12, true));\n  }\n\n  return stmts();\n\n  /**\n   * Grab the next token.\n   */\n\n  function next() {\n    return toks.shift();\n  }\n\n  /**\n   * Check if the next token is `type`.\n   */\n\n  function is(type) {\n    if (type == toks[0][0]) return true;\n  }\n\n  /**\n   * Expect `type` or throw.\n   */\n\n  function expect(type) {\n    if (is(type)) return next();\n    throw new Error('expected \"' + type + '\", but got \"' + toks[0][0] + '\"');\n  }\n\n  /**\n   * stmt+\n   */\n\n  function stmts() {\n    var stmts = [];\n    while (!is('eos')) stmts.push(stmt());\n    return ['root', stmts];\n  }\n\n  /**\n   * INDENT stmt+ OUTDENT\n   */\n\n  function block() {\n    var props = [];\n    expect('indent');\n    while (!is('outdent')) props.push(stmt());\n    expect('outdent');\n    return ['block', props];\n  }\n\n  /**\n   *   rule\n   * | prop\n   */\n\n  function stmt() {\n    if (is('rule')) return rule();\n    if (is('prop')) return prop();\n    return next();\n  }\n\n  /**\n   *   prop\n   * | prop INDENT rule* OUTDENT\n   */\n\n  function prop() {\n    var prop = next();\n    if (is('indent')) {\n      next();\n      while (!is('outdent')) {\n        var tok = next();\n        prop[2] += ' ' + tok[1].join(', ');\n      }\n      expect('outdent');\n    }\n    return prop;\n  }\n\n  /**\n   * rule block?\n   */\n\n  function rule() {\n    var rule = next();\n    if (is('indent')) rule.push(block());\n    return rule;\n  }\n}\n\n});\nrequire.register(\"visionmedia-css-parse/index.js\", function(exports, require, module){\n\nmodule.exports = function(css, options){\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   */\n\n  function updatePosition(str) {\n    var lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf('\\n');\n    column = ~i ? str.length-i : column + str.length;\n  }\n\n  function position() {\n    var start = { line: lineno, column: column };\n    if (!options.position) return positionNoop;\n    return function(node){\n      node.position = {\n        start: start,\n        end: { line: lineno, column: column }\n      };\n      whitespace();\n      return node;\n    }\n  }\n\n  /**\n   * Return `node`.\n   */\n  function positionNoop(node) {\n    whitespace();\n    return node;\n  }\n\n  /**\n   * Parse stylesheet.\n   */\n\n  function stylesheet() {\n    return {\n      type: 'stylesheet',\n      stylesheet: {\n        rules: rules()\n      }\n    };\n  }\n\n  /**\n   * Opening brace.\n   */\n\n  function open() {\n    return match(/^{\\s*/);\n  }\n\n  /**\n   * Closing brace.\n   */\n\n  function close() {\n    return match(/^}/);\n  }\n\n  /**\n   * Parse ruleset.\n   */\n\n  function rules() {\n    var node;\n    var rules = [];\n    whitespace();\n    comments(rules);\n    while (css[0] != '}' && (node = atrule() || rule())) {\n      rules.push(node);\n      comments(rules);\n    }\n    return rules;\n  }\n\n  /**\n   * Match `re` and return captures.\n   */\n\n  function match(re) {\n    var m = re.exec(css);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n\n  function whitespace() {\n    match(/^\\s*/);\n  }\n\n  /**\n   * Parse comments;\n   */\n\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while (c = comment()) rules.push(c);\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   */\n\n  function comment() {\n    var pos = position();\n    if ('/' != css[0] || '*' != css[1]) return;\n\n    var i = 2;\n    while (null != css[i] && ('*' != css[i] || '/' != css[i + 1])) ++i;\n    i += 2;\n\n    var str = css.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i);\n    column += 2;\n    return pos({\n      type: 'comment',\n      comment: str\n    });\n  }\n\n  /**\n   * Parse selector.\n   */\n\n  function selector() {\n    var m = match(/^([^{]+)/);\n    if (!m) return;\n    return m[0].trim().split(/\\s*,\\s*/);\n  }\n\n  /**\n   * Parse declaration.\n   */\n\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(/^(\\*?[-\\w]+)\\s*/);\n    if (!prop) return;\n    prop = prop[0];\n\n    // :\n    if (!match(/^:\\s*/)) return;\n\n    // val\n    var val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n    if (!val) return;\n\n    var ret = pos({\n      type: 'declaration',\n      property: prop,\n      value: val[0].trim()\n    });\n\n    // ;\n    match(/^[;\\s]*/);\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   */\n\n  function declarations() {\n    var decls = [];\n\n    if (!open()) return;\n    comments(decls);\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      comments(decls);\n    }\n\n    if (!close()) return;\n    return decls;\n  }\n\n  /**\n   * Parse keyframe.\n   */\n\n  function keyframe() {\n    var m;\n    var vals = [];\n    var pos = position();\n\n    while (m = match(/^(from|to|\\d+%|\\.\\d+%|\\d+\\.\\d+%)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (!vals.length) return;\n\n    return pos({\n      type: 'keyframe',\n      values: vals,\n      declarations: declarations()\n    });\n  }\n\n  /**\n   * Parse keyframes.\n   */\n\n  function atkeyframes() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?keyframes */);\n\n    if (!m) return;\n    var vendor = m[1];\n\n    // identifier\n    var m = match(/^([-\\w]+)\\s*/);\n    if (!m) return;\n    var name = m[1];\n\n    if (!open()) return;\n    comments();\n\n    var frame;\n    var frames = [];\n    while (frame = keyframe()) {\n      frames.push(frame);\n      comments();\n    }\n\n    if (!close()) return;\n\n    return pos({\n      type: 'keyframes',\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    });\n  }\n\n  /**\n   * Parse supports.\n   */\n\n  function atsupports() {\n    var pos = position();\n    var m = match(/^@supports *([^{]+)/);\n\n    if (!m) return;\n    var supports = m[1].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'supports',\n      supports: supports,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse media.\n   */\n\n  function atmedia() {\n    var pos = position();\n    var m = match(/^@media *([^{]+)/);\n\n    if (!m) return;\n    var media = m[1].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'media',\n      media: media,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse paged media.\n   */\n\n  function atpage() {\n    var pos = position();\n    var m = match(/^@page */);\n    if (!m) return;\n\n    var sel = selector() || [];\n    var decls = [];\n\n    if (!open()) return;\n    comments();\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      comments();\n    }\n\n    if (!close()) return;\n\n    return pos({\n      type: 'page',\n      selectors: sel,\n      declarations: decls\n    });\n  }\n\n  /**\n   * Parse document.\n   */\n\n  function atdocument() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) return;\n\n    var vendor = m[1].trim();\n    var doc = m[2].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'document',\n      document: doc,\n      vendor: vendor,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse import\n   */\n\n  function atimport() {\n    return _atrule('import');\n  }\n\n  /**\n   * Parse charset\n   */\n\n  function atcharset() {\n    return _atrule('charset');\n  }\n\n  /**\n   * Parse namespace\n   */\n\n  function atnamespace() {\n    return _atrule('namespace')\n  }\n\n  /**\n   * Parse non-block at-rules\n   */\n\n  function _atrule(name) {\n    var pos = position();\n    var m = match(new RegExp('^@' + name + ' *([^;\\\\n]+);'));\n    if (!m) return;\n    var ret = { type: name };\n    ret[name] = m[1].trim();\n    return pos(ret);\n  }\n\n  /**\n   * Parse at rule.\n   */\n\n  function atrule() {\n    return atkeyframes()\n      || atmedia()\n      || atsupports()\n      || atimport()\n      || atcharset()\n      || atnamespace()\n      || atdocument()\n      || atpage();\n  }\n\n  /**\n   * Parse rule.\n   */\n\n  function rule() {\n    var pos = position();\n    var sel = selector();\n\n    if (!sel) return;\n    comments();\n\n    return pos({\n      type: 'rule',\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n\n  return stylesheet();\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar Compressed = require('./lib/compress');\nvar Identity = require('./lib/identity');\n\n/**\n * Stringfy the given AST `node`.\n *\n * @param {Object} node\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(node, options){\n  if (options.compress) {\n    return new Compressed(options).compile(node);\n  }\n\n  return new Identity(options).compile(node);\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/lib/compress.js\", function(exports, require, module){\n\n/**\n * Expose compiler.\n */\n\nmodule.exports = Compiler;\n\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n}\n\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function(node){\n  return node.stylesheet\n    .rules.map(this.visit, this)\n    .join('');\n};\n\n/**\n * Visit `node`.\n */\n\nCompiler.prototype.visit = function(node){\n  return this[node.type](node);\n};\n\n/**\n * Visit comment node.\n */\n\nCompiler.prototype.comment = function(node){\n  if (this.compress) return '';\n};\n\n/**\n * Visit import node.\n */\n\nCompiler.prototype.import = function(node){\n  return '@import ' + node.import + ';';\n};\n\n/**\n * Visit media node.\n */\n\nCompiler.prototype.media = function(node){\n  return '@media '\n    + node.media\n    + '{'\n    + node.rules.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit document node.\n */\n\nCompiler.prototype.document = function(node){\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n\n  return doc\n    + '{'\n    + node.rules.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit charset node.\n */\n\nCompiler.prototype.charset = function(node){\n  return '@charset ' + node.charset + ';';\n};\n\n/**\n * Visit supports node.\n */\n\nCompiler.prototype.supports = function(node){\n  return '@supports '\n    + node.supports\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit keyframes node.\n */\n\nCompiler.prototype.keyframes = function(node){\n  return '@'\n    + (node.vendor || '')\n    + 'keyframes '\n    + node.name\n    + '{'\n    + node.keyframes.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit keyframe node.\n */\n\nCompiler.prototype.keyframe = function(node){\n  var decls = node.declarations;\n\n  return node.values.join(',')\n    + '{'\n    + decls.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit page node.\n */\n\nCompiler.prototype.page = function(node){\n  var sel = node.selectors.length\n    ? node.selectors.join(', ') + ' '\n    : '';\n\n  return '@page ' + sel\n    + '{\\n'\n    + this.indent(1)\n    + node.declarations.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit rule node.\n */\n\nCompiler.prototype.rule = function(node){\n  var decls = node.declarations;\n  if (!decls.length) return '';\n\n  return node.selectors.join(',')\n    + '{'\n    + decls.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit declaration node.\n */\n\nCompiler.prototype.declaration = function(node){\n  return node.property + ':' + node.value + ';';\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/lib/identity.js\", function(exports, require, module){\n\n/**\n * Expose compiler.\n */\n\nmodule.exports = Compiler;\n\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n  this.indentation = options.indent;\n}\n\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function(node){\n  return node.stylesheet\n    .rules.map(this.visit, this)\n    .join('\\n\\n');\n};\n\n/**\n * Visit `node`.\n */\n\nCompiler.prototype.visit = function(node){\n  return this[node.type](node);\n};\n\n/**\n * Visit comment node.\n */\n\nCompiler.prototype.comment = function(node){\n  return this.indent() + '/*' + node.comment + '*/';\n};\n\n/**\n * Visit import node.\n */\n\nCompiler.prototype.import = function(node){\n  return '@import ' + node.import + ';';\n};\n\n/**\n * Visit media node.\n */\n\nCompiler.prototype.media = function(node){\n  return '@media '\n    + node.media\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit document node.\n */\n\nCompiler.prototype.document = function(node){\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n\n  return doc + ' '\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit charset node.\n */\n\nCompiler.prototype.charset = function(node){\n  return '@charset ' + node.charset + ';\\n';\n};\n\n/**\n * Visit supports node.\n */\n\nCompiler.prototype.supports = function(node){\n  return '@supports '\n    + node.supports\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit keyframes node.\n */\n\nCompiler.prototype.keyframes = function(node){\n  return '@'\n    + (node.vendor || '')\n    + 'keyframes '\n    + node.name\n    + ' {\\n'\n    + this.indent(1)\n    + node.keyframes.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '}';\n};\n\n/**\n * Visit keyframe node.\n */\n\nCompiler.prototype.keyframe = function(node){\n  var decls = node.declarations;\n\n  return this.indent()\n    + node.values.join(', ')\n    + ' {\\n'\n    + this.indent(1)\n    + decls.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n' + this.indent() + '}\\n';\n};\n\n/**\n * Visit page node.\n */\n\nCompiler.prototype.page = function(node){\n  var sel = node.selectors.length\n    ? node.selectors.join(', ') + ' '\n    : '';\n\n  return '@page ' + sel\n    + '{\\n'\n    + this.indent(1)\n    + node.declarations.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit rule node.\n */\n\nCompiler.prototype.rule = function(node){\n  var indent = this.indent();\n  var decls = node.declarations;\n\n  return node.selectors.map(function(s){ return indent + s }).join(',\\n')\n    + ' {\\n'\n    + this.indent(1)\n    + decls.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n' + this.indent() + '}';\n};\n\n/**\n * Visit declaration node.\n */\n\nCompiler.prototype.declaration = function(node){\n  return this.indent() + node.property + ': ' + node.value + ';';\n};\n\n/**\n * Increase, decrease or return current indentation.\n */\n\nCompiler.prototype.indent = function(level) {\n  this.level = this.level || 1;\n\n  if (null != level) {\n    this.level += level;\n    return '';\n  }\n\n  return Array(this.level).join(this.indentation || '  ');\n};\n\n});\nrequire.register(\"visionmedia-css/index.js\", function(exports, require, module){\n\nexports.parse = require('css-parse');\nexports.stringify = require('css-stringify');\n\n});\nrequire.register(\"component-color-parser/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar colors = require('./colors');\n\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Parse `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api public\n */\n\nfunction parse(str) {\n  return named(str)\n    || hex3(str)\n    || hex6(str)\n    || rgb(str)\n    || rgba(str);\n}\n\n/**\n * Parse named css color `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction named(str) {\n  var c = colors[str.toLowerCase()];\n  if (!c) return;\n  return {\n    r: c[0],\n    g: c[1],\n    b: c[2]\n  }\n}\n\n/**\n * Parse rgb(n, n, n)\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction rgb(str) {\n  if (0 == str.indexOf('rgb(')) {\n    str = str.match(/rgb\\(([^)]+)\\)/)[1];\n    var parts = str.split(/ *, */).map(Number);\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: 1\n    }\n  }\n}\n\n/**\n * Parse rgba(n, n, n, n)\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction rgba(str) {\n  if (0 == str.indexOf('rgba(')) {\n    str = str.match(/rgba\\(([^)]+)\\)/)[1];\n    var parts = str.split(/ *, */).map(Number);\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: parts[3]\n    }\n  }\n}\n\n/**\n * Parse #nnnnnn\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction hex6(str) {\n  if ('#' == str[0] && 7 == str.length) {\n    return {\n      r: parseInt(str.slice(1, 3), 16),\n      g: parseInt(str.slice(3, 5), 16),\n      b: parseInt(str.slice(5, 7), 16),\n      a: 1\n    }\n  }\n}\n\n/**\n * Parse #nnn\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction hex3(str) {\n  if ('#' == str[0] && 4 == str.length) {\n    return {\n      r: parseInt(str[1] + str[1], 16),\n      g: parseInt(str[2] + str[2], 16),\n      b: parseInt(str[3] + str[3], 16),\n      a: 1\n    }\n  }\n}\n\n\n});\nrequire.register(\"component-color-parser/colors.js\", function(exports, require, module){\n\nmodule.exports = {\n    aliceblue: [240, 248, 255]\n  , antiquewhite: [250, 235, 215]\n  , aqua: [0, 255, 255]\n  , aquamarine: [127, 255, 212]\n  , azure: [240, 255, 255]\n  , beige: [245, 245, 220]\n  , bisque: [255, 228, 196]\n  , black: [0, 0, 0]\n  , blanchedalmond: [255, 235, 205]\n  , blue: [0, 0, 255]\n  , blueviolet: [138, 43, 226]\n  , brown: [165, 42, 42]\n  , burlywood: [222, 184, 135]\n  , cadetblue: [95, 158, 160]\n  , chartreuse: [127, 255, 0]\n  , chocolate: [210, 105, 30]\n  , coral: [255, 127, 80]\n  , cornflowerblue: [100, 149, 237]\n  , cornsilk: [255, 248, 220]\n  , crimson: [220, 20, 60]\n  , cyan: [0, 255, 255]\n  , darkblue: [0, 0, 139]\n  , darkcyan: [0, 139, 139]\n  , darkgoldenrod: [184, 132, 11]\n  , darkgray: [169, 169, 169]\n  , darkgreen: [0, 100, 0]\n  , darkgrey: [169, 169, 169]\n  , darkkhaki: [189, 183, 107]\n  , darkmagenta: [139, 0, 139]\n  , darkolivegreen: [85, 107, 47]\n  , darkorange: [255, 140, 0]\n  , darkorchid: [153, 50, 204]\n  , darkred: [139, 0, 0]\n  , darksalmon: [233, 150, 122]\n  , darkseagreen: [143, 188, 143]\n  , darkslateblue: [72, 61, 139]\n  , darkslategray: [47, 79, 79]\n  , darkslategrey: [47, 79, 79]\n  , darkturquoise: [0, 206, 209]\n  , darkviolet: [148, 0, 211]\n  , deeppink: [255, 20, 147]\n  , deepskyblue: [0, 191, 255]\n  , dimgray: [105, 105, 105]\n  , dimgrey: [105, 105, 105]\n  , dodgerblue: [30, 144, 255]\n  , firebrick: [178, 34, 34]\n  , floralwhite: [255, 255, 240]\n  , forestgreen: [34, 139, 34]\n  , fuchsia: [255, 0, 255]\n  , gainsboro: [220, 220, 220]\n  , ghostwhite: [248, 248, 255]\n  , gold: [255, 215, 0]\n  , goldenrod: [218, 165, 32]\n  , gray: [128, 128, 128]\n  , green: [0, 128, 0]\n  , greenyellow: [173, 255, 47]\n  , grey: [128, 128, 128]\n  , honeydew: [240, 255, 240]\n  , hotpink: [255, 105, 180]\n  , indianred: [205, 92, 92]\n  , indigo: [75, 0, 130]\n  , ivory: [255, 255, 240]\n  , khaki: [240, 230, 140]\n  , lavender: [230, 230, 250]\n  , lavenderblush: [255, 240, 245]\n  , lawngreen: [124, 252, 0]\n  , lemonchiffon: [255, 250, 205]\n  , lightblue: [173, 216, 230]\n  , lightcoral: [240, 128, 128]\n  , lightcyan: [224, 255, 255]\n  , lightgoldenrodyellow: [250, 250, 210]\n  , lightgray: [211, 211, 211]\n  , lightgreen: [144, 238, 144]\n  , lightgrey: [211, 211, 211]\n  , lightpink: [255, 182, 193]\n  , lightsalmon: [255, 160, 122]\n  , lightseagreen: [32, 178, 170]\n  , lightskyblue: [135, 206, 250]\n  , lightslategray: [119, 136, 153]\n  , lightslategrey: [119, 136, 153]\n  , lightsteelblue: [176, 196, 222]\n  , lightyellow: [255, 255, 224]\n  , lime: [0, 255, 0]\n  , limegreen: [50, 205, 50]\n  , linen: [250, 240, 230]\n  , magenta: [255, 0, 255]\n  , maroon: [128, 0, 0]\n  , mediumaquamarine: [102, 205, 170]\n  , mediumblue: [0, 0, 205]\n  , mediumorchid: [186, 85, 211]\n  , mediumpurple: [147, 112, 219]\n  , mediumseagreen: [60, 179, 113]\n  , mediumslateblue: [123, 104, 238]\n  , mediumspringgreen: [0, 250, 154]\n  , mediumturquoise: [72, 209, 204]\n  , mediumvioletred: [199, 21, 133]\n  , midnightblue: [25, 25, 112]\n  , mintcream: [245, 255, 250]\n  , mistyrose: [255, 228, 225]\n  , moccasin: [255, 228, 181]\n  , navajowhite: [255, 222, 173]\n  , navy: [0, 0, 128]\n  , oldlace: [253, 245, 230]\n  , olive: [128, 128, 0]\n  , olivedrab: [107, 142, 35]\n  , orange: [255, 165, 0]\n  , orangered: [255, 69, 0]\n  , orchid: [218, 112, 214]\n  , palegoldenrod: [238, 232, 170]\n  , palegreen: [152, 251, 152]\n  , paleturquoise: [175, 238, 238]\n  , palevioletred: [219, 112, 147]\n  , papayawhip: [255, 239, 213]\n  , peachpuff: [255, 218, 185]\n  , peru: [205, 133, 63]\n  , pink: [255, 192, 203]\n  , plum: [221, 160, 203]\n  , powderblue: [176, 224, 230]\n  , purple: [128, 0, 128]\n  , red: [255, 0, 0]\n  , rosybrown: [188, 143, 143]\n  , royalblue: [65, 105, 225]\n  , saddlebrown: [139, 69, 19]\n  , salmon: [250, 128, 114]\n  , sandybrown: [244, 164, 96]\n  , seagreen: [46, 139, 87]\n  , seashell: [255, 245, 238]\n  , sienna: [160, 82, 45]\n  , silver: [192, 192, 192]\n  , skyblue: [135, 206, 235]\n  , slateblue: [106, 90, 205]\n  , slategray: [119, 128, 144]\n  , slategrey: [119, 128, 144]\n  , snow: [255, 255, 250]\n  , springgreen: [0, 255, 127]\n  , steelblue: [70, 130, 180]\n  , tan: [210, 180, 140]\n  , teal: [0, 128, 128]\n  , thistle: [216, 191, 216]\n  , tomato: [255, 99, 71]\n  , turquoise: [64, 224, 208]\n  , violet: [238, 130, 238]\n  , wheat: [245, 222, 179]\n  , white: [255, 255, 255]\n  , whitesmoke: [245, 245, 245]\n  , yellow: [255, 255, 0]\n  , yellowgreen: [154, 205, 5]\n};\n});\nrequire.register(\"component-path/index.js\", function(exports, require, module){\n\nexports.basename = function(path){\n  return path.split('/').pop();\n};\n\nexports.dirname = function(path){\n  return path.split('/').slice(0, -1).join('/') || '.'; \n};\n\nexports.extname = function(path){\n  var base = exports.basename(path);\n  if (!~base.indexOf('.')) return '';\n  var ext = base.split('.').pop();\n  return '.' + ext;\n};\n});\nrequire.register(\"visionmedia-rework/index.js\", function(exports, require, module){\n\nmodule.exports = require('./lib/rework');\n});\nrequire.register(\"visionmedia-rework/lib/rework.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar css = require('css');\n\n/**\n * Expose `rework`.\n */\n\nexports = module.exports = rework;\n\n/**\n * Expose `visit` helpers.\n */\n\nexports.visit = require('./visit');\n\n/**\n * Expose prefix properties.\n */\n\nexports.properties = require('./properties');\n\n/**\n * Initialize a new stylesheet `Rework` with `str`.\n *\n * @param {String} str\n * @return {Rework}\n * @api public\n */\n\nfunction rework(str) {\n  return new Rework(css.parse(str));\n}\n\n/**\n * Initialize a new stylesheet `Rework` with `obj`.\n *\n * @param {Object} obj\n * @api private\n */\n\nfunction Rework(obj) {\n  this.obj = obj;\n}\n\n/**\n * Use the given plugin `fn(style, rework)`.\n *\n * @param {Function} fn\n * @return {Rework}\n * @api public\n */\n\nRework.prototype.use = function(fn){\n  fn(this.obj.stylesheet, this);\n  return this;\n};\n\n/**\n * Specify global vendor `prefixes`,\n * explicit ones may still be passed\n * to most plugins.\n *\n * @param {Array} prefixes\n * @return {Rework}\n * @api public\n */\n\nRework.prototype.vendors = function(prefixes){\n  this.prefixes = prefixes;\n  return this;\n};\n\n/**\n * Stringify the stylesheet.\n *\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nRework.prototype.toString = function(options){\n  return css.stringify(this.obj, options);\n};\n\n/**\n * Expose plugins.\n */\n\nexports.mixin = exports.mixins = require('./plugins/mixin');\nexports.function = exports.functions = require('./plugins/function');\nexports.prefix = require('./plugins/prefix');\nexports.colors = require('./plugins/colors');\nexports.extend = require('./plugins/extend');\nexports.references = require('./plugins/references');\nexports.prefixValue = require('./plugins/prefix-value');\nexports.prefixSelectors = require('./plugins/prefix-selectors');\nexports.keyframes = require('./plugins/keyframes');\nexports.at2x = require('./plugins/at2x');\nexports.url = require('./plugins/url');\nexports.ease = require('./plugins/ease');\nexports.vars = require('./plugins/vars');\n\n/**\n * Try/catch plugins unavailable in component.\n */\n\n try {\n  exports.inline = require('./plugins/inline');\n} catch (err) {};\n\n});\nrequire.register(\"visionmedia-rework/lib/utils.js\", function(exports, require, module){\n\n/**\n * Strip `str` quotes.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.stripQuotes = function(str) {\n  if ('\"' == str[0] || \"'\" == str[0]) return str.slice(1, -1);\n  return str;\n};\n});\nrequire.register(\"visionmedia-rework/lib/visit.js\", function(exports, require, module){\n\n/**\n * Visit `node`'s declarations recursively and\n * invoke `fn(declarations, node)`.\n *\n * @param {Object} node\n * @param {Function} fn\n * @api private\n */\n\nexports.declarations = function(node, fn){\n  node.rules.forEach(function(rule){\n    // @media etc\n    if (rule.rules) {\n      exports.declarations(rule, fn);\n      return;\n    }\n\n    // keyframes\n    if (rule.keyframes) {\n      rule.keyframes.forEach(function(keyframe){\n        fn(keyframe.declarations, rule);\n      });\n      return;\n    }\n\n    // @charset, @import etc\n    if (!rule.declarations) return;\n\n    fn(rule.declarations, node);\n  });\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/properties.js\", function(exports, require, module){\n\n/**\n * Prefixed properties.\n */\n\nmodule.exports = [\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'appearance',\n  'background-visibility',\n  'background-composite',\n  'blend-mode',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-fit',\n  'border-image',\n  'border-vertical-spacing',\n  'box-align',\n  'box-direction',\n  'box-flex',\n  'box-flex-group',\n  'box-lines',\n  'box-ordinal-group',\n  'box-orient',\n  'box-pack',\n  'box-reflect',\n  'box-sizing',\n  'clip-path',\n  'column-count',\n  'column-width',\n  'column-min-width',\n  'column-width-policy',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'flex-flow-from',\n  'flex-flow-into',\n  'font-smoothing',\n  'transform',\n  'transform-origin',\n  'transform-origin-x',\n  'transform-origin-y',\n  'transform-origin-z',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'user-drag',\n  'user-modify',\n  'user-select',\n  'wrap',\n  'wrap-flow',\n  'wrap-margin',\n  'wrap-padding',\n  'wrap-through',\n  'overflow-scrolling'\n];\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/function.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit')\n  , utils = require('../utils')\n  , strip = utils.stripQuotes;\n\n/**\n * Define custom function.\n */\n\nmodule.exports = function(functions, args) {\n  if (!functions) throw new Error('functions object required');\n  return function(style, rework){\n    visit.declarations(style, function(declarations){\n      for (var name in functions) {\n        func(declarations, name, functions[name], args);\n      }\n    });\n  }\n};\n\n/**\n * Escape regexp codes in string.\n *\n * @param {String} s\n * @api private\n */\n\nfunction escape(s) {\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\n/**\n * Visit declarations and apply functions.\n *\n * @param {Array} declarations\n * @param {Object} functions\n * @param {Boolean} [parseArgs]\n * @api private\n */\n\nfunction func(declarations, name, func, parseArgs) {\n  if (false !== parseArgs) parseArgs = true;\n  var regexp = new RegExp(escape(name) + '\\\\(([^\\)]+)\\\\)', 'g');\n  declarations.forEach(function(decl){\n    if (!~decl.value.indexOf(name + '(')) return;\n    decl.value = decl.value.replace(regexp, function(_, args){\n      if (!parseArgs) return func.call(decl, strip(args));\n      args = args.split(/,\\s*/).map(strip);\n      return func.apply(decl, args);\n    });\n  });\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/url.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , func = require('./function');\n\n/**\n * Map `url()` calls.\n *\n *   body {\n *     background: url(/images/bg.png);\n *   }\n *\n * yields:\n *\n *   body {\n *     background: url(http://example.com/images/bg.png);\n *   }\n *\n */\n\nmodule.exports = function(fn) {\n  return func({\n    url: function(path){\n      return 'url(\"' + fn(path) + '\")';\n    }\n  }, false);\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/vars.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Add variable support.\n *\n *   :root {\n *     var-header-color: #06c;\n *   }\n *\n *   h1 {\n *     background-color: var(header-color);\n *   }\n *\n * yields:\n *\n *   h1 {\n *     background-color: #06c;\n *   }\n *\n */\n\nmodule.exports = function(map) {\n  map = map || {};\n\n  function replace(str) {\n    return str.replace(/\\bvar\\((.*?)\\)/g, function(_, name){\n      var val = map[name];\n      if (!val) throw new Error('variable \"' + name + '\" is undefined');\n      if (val.match(/\\bvar\\(/)) val = replace(val);\n      return val;\n    });\n  }\n\n  return function vars(style){\n    visit.declarations(style, function(declarations, node){\n      // map vars\n      declarations.forEach(function(decl){\n        if (0 != decl.property.indexOf('var-')) return;\n        var name = decl.property.replace('var-', '');\n        map[name] = decl.value;\n      });\n\n      // substitute values\n      declarations.forEach(function(decl){\n        if (!decl.value.match(/\\bvar\\(/)) return;\n        decl.value = replace(decl.value);\n      });\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/ease.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Easing functions.\n */\n\nvar ease = {\n  'ease-in-out-back': 'cubic-bezier(0.680, -0.550, 0.265, 1.550)',\n  'ease-in-out-circ': 'cubic-bezier(0.785, 0.135, 0.150, 0.860)',\n  'ease-in-out-expo': 'cubic-bezier(1.000, 0.000, 0.000, 1.000)',\n  'ease-in-out-sine': 'cubic-bezier(0.445, 0.050, 0.550, 0.950)',\n  'ease-in-out-quint': 'cubic-bezier(0.860, 0.000, 0.070, 1.000)',\n  'ease-in-out-quart': 'cubic-bezier(0.770, 0.000, 0.175, 1.000)',\n  'ease-in-out-cubic': 'cubic-bezier(0.645, 0.045, 0.355, 1.000)',\n  'ease-in-out-quad': 'cubic-bezier(0.455, 0.030, 0.515, 0.955)',\n  'ease-out-back': 'cubic-bezier(0.175, 0.885, 0.320, 1.275)',\n  'ease-out-circ': 'cubic-bezier(0.075, 0.820, 0.165, 1.000)',\n  'ease-out-expo': 'cubic-bezier(0.190, 1.000, 0.220, 1.000)',\n  'ease-out-sine': 'cubic-bezier(0.390, 0.575, 0.565, 1.000)',\n  'ease-out-quint': 'cubic-bezier(0.230, 1.000, 0.320, 1.000)',\n  'ease-out-quart': 'cubic-bezier(0.165, 0.840, 0.440, 1.000)',\n  'ease-out-cubic': 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n  'ease-out-quad': 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n  'ease-in-back': 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',\n  'ease-in-circ': 'cubic-bezier(0.600, 0.040, 0.980, 0.335)',\n  'ease-in-expo': 'cubic-bezier(0.950, 0.050, 0.795, 0.035)',\n  'ease-in-sine': 'cubic-bezier(0.470, 0.000, 0.745, 0.715)',\n  'ease-in-quint': 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n  'ease-in-quart': 'cubic-bezier(0.895, 0.030, 0.685, 0.220)',\n  'ease-in-cubic': 'cubic-bezier(0.550, 0.055, 0.675, 0.190)',\n  'ease-in-quad': 'cubic-bezier(0.550, 0.085, 0.680, 0.530)'\n};\n\n/**\n * Keys.\n */\n\nvar keys = Object.keys(ease);\n\n/**\n * Provide additional easing functions:\n *\n *    #logo {\n *      transition: all 500ms ease-out-back;\n *    }\n *\n * yields:\n *\n *    #logo {\n *      transition: all 500ms cubic-bezier(0.175, 0.885, 0.320, 1.275)\n *    }\n *\n */\n\nmodule.exports = function() {\n  return function(style, rework){\n    visit.declarations(style, substitute);\n  }\n};\n\n/**\n * Substitute easing functions.\n *\n * @api private\n */\n\nfunction substitute(declarations) {\n  for (var i = 0, len = declarations.length; i < len; ++i) {\n    var decl = declarations[i];\n    if (!decl.property.match(/transition|animation|timing/)) continue;\n    for (var k = 0; k < keys.length; ++k) {\n      var key = keys[k];\n      if (~decl.value.indexOf(key)) {\n        decl.value = decl.value.replace(key, ease[key]);\n        break;\n      }\n    }\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/at2x.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , path = require('path')\n  , stripQuotes = utils.stripQuotes;\n\n/**\n * Translate\n *\n *   .logo {\n *     background-image: url('/public/images/logo.png')\n *   }\n *\n * yields:\n *\n *   .logo {\n *     background-image: url('/public/images/logo.png')\n *   }\n *\n *   @media all and (-webkit-min-device-pixel-ratio : 1.5) {\n *     .logo {\n *       background-image: url(\"/public/images/logo@2x.png\");\n *       background-size: contain\n *     }\n *   }\n *\n */\n\nmodule.exports = function(vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    style.rules.forEach(function(rule){\n      if (!rule.declarations) return;\n\n      var backgroundSize = rule.declarations.filter(backgroundWithSize).map(value)[0] || 'contain';\n\n      rule.declarations.filter(backgroundWithURL).forEach(function(decl){\n        // parse url\n        var i = decl.value.indexOf('url(');\n        var url = stripQuotes(decl.value.slice(i + 4, decl.value.indexOf(')', i)));\n        var ext = path.extname(url);\n\n        // ignore .svg\n        if ('.svg' == ext) return;\n\n        // @2x value\n        url = path.join(path.dirname(url), path.basename(url, ext) + '@2x' + ext);\n\n        // wrap in @media\n        style.rules.push({\n          type: 'media',\n          media: 'all and (-webkit-min-device-pixel-ratio: 1.5)',\n          rules: [\n            {\n              type: 'rule',\n              selectors: rule.selectors,\n              declarations: [\n                {\n                  type: 'declaration',\n                  property: 'background-image',\n                  value: 'url(\"' + url + '\")'\n                },\n                {\n                  type: 'declaration',\n                  property: 'background-size',\n                  value: backgroundSize\n                }\n              ]\n            }\n          ]\n        });\n      });\n    });\n  };\n\n  return function(style, rework) {\n    vendors = vendors || rework.prefixes;\n    visit(style.rules, style);\n  };\n};\n\n/**\n * Filter background[-image] with url().\n */\n\nfunction backgroundWithURL(decl) {\n  return ('background' == decl.property\n    || 'background-image' == decl.property)\n    && ~decl.value.indexOf('url(');\n}\n\n/**\n * Predicate on background-size property.\n */\n\nfunction backgroundWithSize(decl) {\n  return 'background-size' == decl.property;\n}\n\n/**\n * Return value atribute of a declaration.\n */\n\nfunction value(decl) {\n  return decl.value;\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/colors.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar parse = require('color-parser')\n  , functions = require('./function');\n\n/**\n * Provide color manipulation helpers:\n *\n *    button {\n *      background: rgba(#eee, .5)\n *    }\n *\n * yields:\n *\n *    button {\n *      background: rgba(238, 238, 238, .5)\n *    }\n *\n */\n\nmodule.exports = function() {\n  return functions({\n    rgba: function(color, alpha){\n      if (2 == arguments.length) {\n        var c = parse(color.trim());\n        var args = [c.r, c.g, c.b, alpha];\n      } else {\n        var args = [].slice.call(arguments);\n      }\n      \n      return 'rgba(' + args.join(', ') + ')';\n    }\n  });\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/extend.js\", function(exports, require, module){\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('rework:extend');\n\n/**\n * Add extension support.\n */\n\nmodule.exports = function() {\n  debug('use extend');\n  return function(style, rework) {\n    var map = {};\n    var rules = style.rules.length;\n\n    for (var j = 0; j < rules; j++) {\n      var rule = style.rules[j];\n      if (!rule || !rule.selectors) return;\n\n      // map selectors\n      rule.selectors.forEach(function(sel, i) {\n        map[sel] = rule;\n        if ('%' == sel[0]) rule.selectors.splice(i, 1);\n      });\n\n      // visit extend: properties\n      visit(rule, map);\n\n      // clean up empty rules\n      if (!rule.declarations.length) {\n        style.rules.splice(j--, 1);\n      }\n    };\n  }\n};\n\n/**\n * Visit declarations and extensions.\n *\n * @param {Object} rule\n * @param {Object} map\n * @api private\n */\n\nfunction visit(rule, map) {\n  for (var i = 0; i < rule.declarations.length; ++i) {\n    var decl = rule.declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n    if (!/^extends?$/.test(key)) continue;\n\n    var extend = map[val];\n    if (!extend) throw new Error('failed to extend \"' + val + '\"');\n\n    var keys = Object.keys(map);\n    keys.forEach(function(key) {\n      if (0 != key.indexOf(val)) return;\n      var extend = map[key];\n      var suffix = key.replace(val, '');\n      debug('extend %j with %j', rule.selectors, extend.selectors);\n      extend.selectors = extend.selectors.concat(rule.selectors.map(function(sel) {\n        return sel + suffix;\n      }));\n    });\n\n    rule.declarations.splice(i--, 1);\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/mixin.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , visit = require('../visit');\n\n/**\n * Define custom mixins.\n */\n\nmodule.exports = function(mixins) {\n  if (!mixins) throw new Error('mixins object required');\n  return function(style, rework){\n    visit.declarations(style, function(declarations){\n      mixin(declarations, mixins);\n    });\n  }\n};\n\n/**\n * Visit declarations and apply mixins.\n *\n * @param {Array} declarations\n * @param {Object} mixins\n * @api private\n */\n\nfunction mixin(declarations, mixins) {\n  for (var i = 0; i < declarations.length; ++i) {\n    var decl = declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n    var fn = mixins[key];\n    if (!fn) continue;\n\n    // invoke mixin\n    var ret = fn(val);\n\n    // apply properties\n    for (var key in ret) {\n      declarations.splice(i++, 0, {\n        type: 'declaration',\n        property: key,\n        value: ret[key]\n      });\n    }\n\n    // remove original\n    declarations.splice(i, 1);\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/keyframes.js\", function(exports, require, module){\n\n/**\n * Prefix keyframes.\n *\n *   @keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n * yields:\n *\n *   @keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n *   @-webkit-keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n */\n\nmodule.exports = function(vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    style.rules.forEach(function(rule){\n      if (!rule.keyframes) return;\n\n      vendors.forEach(function(vendor){\n        if (vendor == rule.vendor) return;\n        var clone = cloneKeyframes(rule);\n        clone.vendor = vendor;\n        style.rules.push(clone);\n      });\n    });\n  }\n};\n\n/**\n * Clone keyframes.\n *\n * @param {Object} rule\n * @api private\n */\n\nfunction cloneKeyframes(rule) {\n  var clone = { name: rule.name };\n  clone.type = 'keyframes';\n  clone.vendor = rule.vendor;\n  clone.keyframes = [];\n  rule.keyframes.forEach(function(keyframe){\n    clone.keyframes.push(cloneKeyframe(keyframe));\n  });\n  return clone;\n}\n\n/**\n * Clone `keyframe`.\n *\n * @param {Object} keyframe\n * @api private\n */\n\nfunction cloneKeyframe(keyframe) {\n  var clone = {};\n  clone.type = 'keyframe';\n  clone.values = keyframe.values.slice();\n  clone.declarations = keyframe.declarations.map(function(decl){\n    return {\n      type: 'declaration',\n      property: decl.property,\n      value: decl.value\n    }\n  });\n  return clone;\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/references.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Provide property reference support.\n *\n *    button {\n *      width: 50px;\n *      height: @width;\n *      line-height: @height;\n *    }\n *\n * yields:\n *\n *    button {\n *      width: 50px;\n*      height: 50px;\n*      line-height: 50px;\n *    }\n *\n */\n\nmodule.exports = function() {\n  return function(style, rework){\n    visit.declarations(style, substitute);\n  }\n};\n\n/**\n * Substitute easing functions.\n *\n * @api private\n */\n\nfunction substitute(declarations) {\n  var map = {};\n\n  for (var i = 0, len = declarations.length; i < len; ++i) {\n    var decl = declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n\n    decl.value = val.replace(/@([-\\w]+)/g, function(_, name){\n      if (null == map[name]) throw new Error('@' + name + ' is not defined in this scope');\n      return map[name];\n    });\n\n    map[key] = decl.value;\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix-selectors.js\", function(exports, require, module){\n\n/**\n * Prefix selectors with `str`.\n *\n *    button {\n *      color: red;\n *    }\n *\n * yields:\n *\n *    #dialog button {\n *      color: red;\n *    }\n *\n */\n\nmodule.exports = function(str) {\n  return function(style){\n    style.rules = style.rules.map(function(rule){\n      if (!rule.selectors) return rule;\n      rule.selectors = rule.selectors.map(function(selector){\n        return str + ' ' + selector;\n      });\n      return rule;\n    });\n  }\n};\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix-value.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Prefix `value`.\n *\n *    button {\n *      transition: height, transform 2s, width 0.3s linear;\n *    }\n *\n * yields:\n *\n *    button {\n *      -webkit-transition: height, -webkit-transform 2s, width 0.3s linear;\n *      -moz-transition: height, -moz-transform 2s, width 0.3s linear;\n *      transition: height, transform 2s, width 0.3s linear\n *    }\n *\n */\n\nmodule.exports = function(value, vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    visit.declarations(style, function(declarations){\n      for (var i = 0; i < declarations.length; ++i) {\n        var decl = declarations[i];\n        if (!~decl.value.indexOf(value)) continue;\n\n        // ignore vendor-prefixed properties\n        if ('-' == decl.property[0]) continue;\n\n        // ignore vendor-prefixed values\n        if (~decl.value.indexOf('-' + value)) continue;\n\n        // vendor prefixed props\n        vendors.forEach(function(vendor){\n          var prop = 'transition' == decl.property\n            ? vendor + decl.property\n            : decl.property;\n\n          declarations.splice(i++, 0, {\n            type: 'declaration',\n            property: prop,\n            value: decl.value.replace(value, vendor + value)\n          });\n        });\n      }\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Prefix `prop`.\n *\n *   .button {\n *     border-radius: 5px;\n *   }\n *\n * yields:\n *\n *   .button {\n *     -webkit-border-radius: 5px;\n *     -moz-border-radius: 5px;\n *     border-radius: 5px;\n *   }\n *\n */\n\nmodule.exports = function(prop, vendors) {\n  var props = Array.isArray(prop)\n    ? prop\n    : [prop];\n\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n    visit.declarations(style, function(declarations, node){\n      var only = node.vendor;\n      var isKeyframes = !! node.keyframes;\n\n      for (var i = 0; i < props.length; ++i) {\n        var prop = props[i];\n\n        for (var j = 0, len = declarations.length; j < len; ++j) {\n          var decl = declarations[j];\n          if (prop != decl.property) continue;\n\n          // vendor prefixed props\n          for (var k = 0; k < vendors.length; ++k) {\n            if (!only && isKeyframes) continue;\n            if (only && only != vendors[k]) continue;\n            declarations.push({\n              type: 'declaration',\n              property: vendors[k] + decl.property,\n              value: decl.value\n            });\n          }\n\n          // original prop\n          declarations.push(decl);\n          declarations.splice(j, 1);\n        }\n      }\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/index.js\", function(exports, require, module){\n\nexports['border-radius'] = require('./lib/border-radius');\nexports['overflow'] = require('./lib/ellipsis');\nexports['absolute'] = require('./lib/absolute');\nexports['relative'] = require('./lib/relative');\nexports['fixed'] = require('./lib/fixed');\nexports['opacity'] = require('./lib/opacity');\nexports['size'] = require('./lib/size');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/absolute.js\", function(exports, require, module){\n\n/**\n * absolute: top left\n * absolute: top 5px left 5px\n */\n\nmodule.exports = require('./position')('absolute');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/border-radius.js\", function(exports, require, module){\n\n/**\n * Positions.\n */\n\nvar position = {\n  top: true,\n  left: true,\n  right: true,\n  bottom: true\n};\n\n/**\n * border-radius: 5px\n * border-radius: 5px 10px\n * border-radius: top 5px\n * border-radius: top 5px left 10px\n */\n\nmodule.exports = function(str){\n  var vals = str.split(/\\s+/);\n  var pos;\n  var ret;\n\n  for (var i = 0; i < vals.length; ++i) {\n    var val = vals[i];\n    if (!position[val]) continue;\n    ret = ret || {};\n    pos = val;\n    val = vals[++i];\n    switch (pos) {\n      case 'top':\n      case 'bottom':\n        ret['border-' + pos + '-left-radius'] = val;\n        ret['border-' + pos + '-right-radius'] = val;\n        break;\n      case 'left':\n      case 'right':\n        ret['border-top-' + pos + '-radius'] = val;\n        ret['border-bottom-' + pos + '-radius'] = val;\n        break;\n    }\n  }\n\n  if (!ret) {\n    return {\n      'border-radius': str\n    }\n  }\n\n  return ret;\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/ellipsis.js\", function(exports, require, module){\n\n/**\n * overflow: ellipsis\n */\n\nmodule.exports = function(type) {\n  if ('ellipsis' == type) {\n    return {\n      'white-space': 'nowrap',\n      'overflow': 'hidden',\n      'text-overflow': 'ellipsis'\n    }\n  }\n\n  return {\n    'overflow': type\n  };\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/fixed.js\", function(exports, require, module){\n\n/**\n * fixed: top left\n * fixed: top 5px left 5px\n */\n\nmodule.exports = require('./position')('fixed');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/opacity.js\", function(exports, require, module){\n\n/**\n * opacity: 1\n */\n\nmodule.exports = function(str){\n  var vals = str.split(/\\s+/);\n  var a = parseFloat(vals.shift());\n  var n = a * 100 | 0;\n  var tail = vals.length ? ' ' + vals.join(' '): '';\n  return {\n    'opacity': a + tail,\n    '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=' + n + ')' + tail,\n    'filter': 'alpha(opacity=' + n + ')' + tail\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/position.js\", function(exports, require, module){\n\n/**\n * Positions.\n */\n\nvar positions = {\n  top: true,\n  left: true,\n  right: true,\n  bottom: true\n};\n\n/**\n * Return a mixin for the given position `type`.\n *\n * @param {String} type\n * @return {Function}\n * @api private\n */\n\nmodule.exports = function(type){\n  return function(str){\n    var val;\n    var pos;\n    var ret = {};\n    var vals = str.split(/\\s+/);\n\n    ret.position = type;\n\n    for (var i = 0; i < vals.length; ++i) {\n      val = vals[i];\n      if (positions[val]) {\n        pos = val;\n        ret[pos] = '0';\n      } else {\n        ret[pos] = val;\n      }\n    }\n\n    return ret;\n  };\n}\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/relative.js\", function(exports, require, module){\n\n/**\n * relative: top left\n * relative: top 5px left 5px\n */\n\nmodule.exports = require('./position')('relative');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/size.js\", function(exports, require, module){\n/**\n * size: 100px 50px\n */\n\nmodule.exports = function(sizes) {\n  sizes = sizes.split(/\\s+/);\n  if ( sizes.length == 1 ) sizes[1] = sizes[0];\n\n  return {\n    width:  sizes[0],\n    height: sizes[1]\n  };\n};\n\n});\nrequire.register(\"styl/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar whitespace = require('css-whitespace');\nvar mixins = require('rework-mixins');\nvar rework = require('rework');\nvar props = rework.properties;\n\n/**\n * Expose `Style`.\n */\n\nmodule.exports = Style;\n\n/**\n * Initialize a new Style with the given css `str`.\n *\n * Options:\n *\n *  - `whitespace` utilize css whitespace transformations\n *  - `compress` enable output compression\n *\n * @param {String} str\n * @param {Object} options\n * @api public\n */\n\nfunction Style(str, options) {\n  if (!(this instanceof Style)) return new Style(str, options);\n  options = options || {};\n  if (options.whitespace) str = whitespace(str);\n  this.str = str;\n  this.compress = options.compress;\n  this.rework = rework(str);\n  this.delegate(['vendors', 'use']);\n  this.vendors(['-ms-', '-moz-', '-webkit-']);\n}\n\n/**\n * Delegate `methods` to rework.\n *\n * @param {Array} methods\n * @api private\n */\n\nStyle.prototype.delegate = function(methods){\n  var self = this;\n  methods.forEach(function(method){\n    self[method] = self.rework[method].bind(self.rework);\n  });\n};\n\n/**\n * Return the compiled CSS.\n *\n * @return {String}\n * @api public\n */\n\nStyle.prototype.toString = function(){\n  this.use(rework.mixin(mixins));\n  this.use(rework.keyframes());\n  this.use(rework.ease());\n  this.use(rework.prefixValue('linear-gradient'));\n  this.use(rework.prefixValue('radial-gradient'));\n  this.use(rework.prefixValue('transform'));\n  this.use(rework.prefix(props));\n  this.use(rework.colors());\n  this.use(rework.references());\n  this.use(rework.at2x());\n  this.use(rework.extend());\n  return this.rework.toString({ compress: this.compress });\n};\n\n});\n\n\n\n\n\n\n\nrequire.alias(\"visionmedia-debug/index.js\", \"styl/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"styl/deps/debug/debug.js\");\nrequire.alias(\"visionmedia-debug/index.js\", \"debug/index.js\");\n\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"styl/deps/css-whitespace/index.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/compiler.js\", \"styl/deps/css-whitespace/lib/compiler.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/lexer.js\", \"styl/deps/css-whitespace/lib/lexer.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/parser.js\", \"styl/deps/css-whitespace/lib/parser.js\");\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"styl/deps/css-whitespace/index.js\");\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"css-whitespace/index.js\");\nrequire.alias(\"visionmedia-debug/index.js\", \"visionmedia-css-whitespace/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"visionmedia-css-whitespace/deps/debug/debug.js\");\n\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"visionmedia-css-whitespace/index.js\");\nrequire.alias(\"visionmedia-rework/index.js\", \"styl/deps/rework/index.js\");\nrequire.alias(\"visionmedia-rework/lib/rework.js\", \"styl/deps/rework/lib/rework.js\");\nrequire.alias(\"visionmedia-rework/lib/utils.js\", \"styl/deps/rework/lib/utils.js\");\nrequire.alias(\"visionmedia-rework/lib/visit.js\", \"styl/deps/rework/lib/visit.js\");\nrequire.alias(\"visionmedia-rework/lib/properties.js\", \"styl/deps/rework/lib/properties.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/function.js\", \"styl/deps/rework/lib/plugins/function.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/url.js\", \"styl/deps/rework/lib/plugins/url.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/vars.js\", \"styl/deps/rework/lib/plugins/vars.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/ease.js\", \"styl/deps/rework/lib/plugins/ease.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/at2x.js\", \"styl/deps/rework/lib/plugins/at2x.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/colors.js\", \"styl/deps/rework/lib/plugins/colors.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/extend.js\", \"styl/deps/rework/lib/plugins/extend.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/mixin.js\", \"styl/deps/rework/lib/plugins/mixin.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/keyframes.js\", \"styl/deps/rework/lib/plugins/keyframes.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/references.js\", \"styl/deps/rework/lib/plugins/references.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix-selectors.js\", \"styl/deps/rework/lib/plugins/prefix-selectors.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix-value.js\", \"styl/deps/rework/lib/plugins/prefix-value.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix.js\", \"styl/deps/rework/lib/plugins/prefix.js\");\nrequire.alias(\"visionmedia-rework/index.js\", \"rework/index.js\");\nrequire.alias(\"visionmedia-css/index.js\", \"visionmedia-rework/deps/css/index.js\");\nrequire.alias(\"visionmedia-css-parse/index.js\", \"visionmedia-css/deps/css-parse/index.js\");\n\nrequire.alias(\"visionmedia-css-stringify/index.js\", \"visionmedia-css/deps/css-stringify/index.js\");\nrequire.alias(\"visionmedia-css-stringify/lib/compress.js\", \"visionmedia-css/deps/css-stringify/lib/compress.js\");\nrequire.alias(\"visionmedia-css-stringify/lib/identity.js\", \"visionmedia-css/deps/css-stringify/lib/identity.js\");\n\nrequire.alias(\"visionmedia-debug/index.js\", \"visionmedia-rework/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"visionmedia-rework/deps/debug/debug.js\");\n\nrequire.alias(\"component-color-parser/index.js\", \"visionmedia-rework/deps/color-parser/index.js\");\nrequire.alias(\"component-color-parser/colors.js\", \"visionmedia-rework/deps/color-parser/colors.js\");\n\nrequire.alias(\"component-path/index.js\", \"visionmedia-rework/deps/path/index.js\");\n\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"styl/deps/rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/absolute.js\", \"styl/deps/rework-mixins/lib/absolute.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/border-radius.js\", \"styl/deps/rework-mixins/lib/border-radius.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/ellipsis.js\", \"styl/deps/rework-mixins/lib/ellipsis.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/fixed.js\", \"styl/deps/rework-mixins/lib/fixed.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/opacity.js\", \"styl/deps/rework-mixins/lib/opacity.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/position.js\", \"styl/deps/rework-mixins/lib/position.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/relative.js\", \"styl/deps/rework-mixins/lib/relative.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/size.js\", \"styl/deps/rework-mixins/lib/size.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"styl/deps/rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"visionmedia-rework-mixins/index.js\");\nrequire.alias(\"styl/index.js\", \"styl/index.js\");\n\ndebugger\n\nmodule.exports = require(\"styl/index.js\");\n",
          "type": "blob"
        },
        "pixie": {
          "path": "pixie",
          "content": "module.exports = {\"entryPoint\":\"lib/styl\",\"version\":\"0.2.8\"};",
          "type": "blob"
        },
        "test/test": {
          "path": "test/test",
          "content": "(function() {\n  var styl;\n\n  styl = require(\"../lib/styl\");\n\n  describe(\"styl\", function() {\n    return it(\"should compile a little\", function() {\n      var output, source;\n      console.log(styl);\n      source = \"body\\n  background-color: red\";\n      output = \"body {\\n  background-color: red;\\n}\";\n      return assert.equal(styl(source, {\n        whitespace: true\n      }).toString(), output);\n    });\n  });\n\n}).call(this);\n",
          "type": "blob"
        }
      },
      "progenitor": {
        "url": "http://www.danielx.net/editor/"
      },
      "version": "0.2.8",
      "entryPoint": "lib/styl",
      "repository": {
        "branch": "v0.2.8",
        "default_branch": "master",
        "full_name": "distri/styl",
        "homepage": null,
        "description": "Wrapper for styl",
        "html_url": "https://github.com/distri/styl",
        "url": "https://api.github.com/repos/distri/styl",
        "publishBranch": "gh-pages"
      },
      "dependencies": {}
    }
  }
});